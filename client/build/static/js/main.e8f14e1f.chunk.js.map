{"version":3,"sources":["components/common/utils/accessToken.js","components/common/utils/userState.js","components/login_form/state/loginFormActions.js","components/common/state/UserStateReducer.js","components/activity/state/ActivityReducer.js","components/meal_form/state/MealFormReducer.js","components/health_check_form/state/healthCheckFormReducer.js","components/login_form/state/loginFormReducer.js","components/user_menu/state/UserMenuReducer.js","components/common/state/ViewReducer.js","components/common/utils/formValidation.js","components/register_form/state/registerFormReducer.js","components/common/state/RootReducer.js","components/common/state/Store.js","components/common/utils/api.js","components/common/state/UserStateActions.js","components/register_form/state/registerFormActions.js","components/register_form/state/RegisterInput.jsx","components/register_form/registerForm.jsx","components/login_form/LoginForm.jsx","components/user_menu/UserMenu.jsx","components/user_menu/state/UserMenuActions.js","components/header/Header.jsx","components/activity/state/ActivityActions.js","components/common/state/ViewActions.js","components/Sidebar.jsx","components/Pill.jsx","components/common/utils/DateHandler.js","components/meal_form/state/MealFormActions.js","components/health_check_form/state/healthCheckFormActions.js","components/activity/ManageEntry.jsx","components/activity/MealEntry.jsx","components/activity/HealthCheckEntry.jsx","components/activity/DateBlock.jsx","components/activity/AddButtonsContainer.jsx","components/common/InputAutoComplete.jsx","components/IngredientPill.jsx","components/meal_form/MealForm.jsx","components/activity/utils/feedArray.js","components/health_check_form/HealthCheckForm.jsx","components/activity/Activity.jsx","components/Dashboard.jsx","components/App.jsx","index.js"],"names":["AccessToken","value","jwt_decode","exp","username","this","Math","ceil","Date","now","getCurrSeconds","refresh","a","fetch","response","status","json","error","Error","token","UserState","expired","accessToken","isLoggedIn","setLoginForm","payload","type","initialState","data","loading","show","ingredients","time","mealType","_id","new","edit","timeString","dateString","symptoms","mood","password","invalidPassword","invalidUsername","activity","active","filter","valid","test","email","validateEmail","name","intitalInputState","touched","firstName","lastName","passwordVerify","rootReducer","combineReducers","state","action","mealForm","ingredient","healthCheckForm","symptom","loginForm","userMenu","console","log","view","registerForm","devTools","window","__REDUX_DEVTOOLS_EXTENSION__","middleWare","compose","applyMiddleware","thunk","store","createStore","dispatch","getState","getHeaders","Authorization","get","route","attemptLogIn","method","headers","post","body","JSON","stringify","put","deleteByID","setUserState","setRegisterForm","validateRegisterForm","RegisterInput","props","validationCallback","placeholder","capitalize","handleBlur","onBlur","handleChange","onChange","Form","Group","Control","isInvalid","isValid","e","target","_","startCase","lowerCase","Feedback","RegisterForm","useState","processing","useDispatch","useSelector","handleSubmit","preventDefault","Modal","onHide","onSubmit","noValidate","Header","Title","Body","className","Row","Col","xs","validate","Footer","Button","variant","onClick","disabled","Login","md","errorMessage","message","UserMenu","loggingOut","setLoggingOut","style","marginLeft","Offcanvas","placement","closeButton","Container","fluid","sm","color","user","setActivity","API","Object","fromEntries","map","entry","ViewActivity","Sidebar","setCurrentView","href","Pill","primaryColor","primaryText","secondaryText","secondaryColor","stringToUnixTime","date","dayjs","unix","unixToDateString","unixTime","format","unixToTimeString","formChange","ManageEntry","endpoint","currentEntry","editMeal","id","editHealthCheck","extend","customParseFormat","MealEntry","index","description","1","2","3","severity","DateBlock","entries","HealthCheckEntry","AddButtonsContainer","InputAutoComplete","defaultInputValue","submit","apiEndpoint","allowNewItems","suggestions","clearOnSubmit","isLoading","setIsLoading","options","setOptions","setValue","query","url","submitHandler","length","outputValue","newItem","label","postValue","selectHintOnEnter","minLength","allowNew","delay","newSelectionPrefix","selected","onSearch","IngredientPill","MealForm","setProcessing","newMeal","handleClose","newIngredient","includes","create","dataObject","val","sort","b","toSortedArray","reduce","acc","isYesterday","isToday","oneWeekAgo","subtract","isAfter","toDate","lastSubArray","unshift","push","HealthCheckForm","handleMoodSelect","newHealthCheck","ButtonGroup","display","newSymptom","Activity","useEffect","activityFeed","FeedArray","dateBlock","Dashboard","position","App","userState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e8f14e1f.chunk.js","sourcesContent":["import jwt_decode from 'jwt-decode';\n\nexport class AccessToken {\n    constructor(value){\n        let {exp, username} = jwt_decode(value)\n        this.value = value;\n        this.exp = exp\n        this.username = username\n    }\n    getCurrSeconds() {\n        return Math.ceil(Date.now() / 1000);\n    }\n    expired(){\n        if(this.exp < this.getCurrSeconds() + 10){\n            return true;\n        }\n        return false\n    }\n}\n\nexport async function refresh() {\n    let response = await fetch('/access');\n    if (response.status !== 200) {\n        let error = await response.json();\n        throw new Error(error);\n    }\n    let token = await response.json();\n    return new AccessToken(token)\n}\n\nexport function decode(token) {\n    let { username } = jwt_decode(token);\n    return {\n        username,\n        accessToken: token,\n        isLoggedIn: true,\n    };\n}\n","export default class UserState {\n    constructor(token) {\n        if (token && !token.expired()) {\n            this.accessToken = token;\n            let { username } = token;\n            this.username = username;\n            this.isLoggedIn = true\n        } else {\n            this.accessToken = null\n            this.username = '';\n            this.isLoggedIn = false\n        }\n    }\n}\n","import { AccessToken } from 'components/common/utils/accessToken.js';\nimport { setUserState } from 'components/common/state/UserStateActions.js';\nimport UserState from 'components/common/utils/userState';\n\nexport function showLoginForm(payload) {\n    return {\n        type: 'LOGIN_FORM/SHOW',\n    };\n}\n\nexport function setLoginForm(payload) {\n    return {\n        type: 'LOGIN_FORM/SET',\n        payload,\n    };\n}\nexport function resetLoginForm() {\n    return {\n        type: 'LOGIN_FORM/RESET',\n    };\n}\n\nexport function logIn() {\n    return async (dispatch, getState) => {\n        try {\n            let { username, password } = getState().loginForm;\n            let response = await fetch('/login', {\n                method: 'POST',\n                headers: { 'Content-type': 'application/json' },\n                body: JSON.stringify({ username, password }),\n            });\n            if (response.status !== 200) {\n                let errorMessage = await response.json();\n                throw new Error(errorMessage);\n            }\n            let token = new AccessToken(await response.json());\n            dispatch(setUserState(new UserState(token)));\n            dispatch(resetLoginForm());\n        } catch (error) {\n            console.log(error);\n            if (error.message === 'invalid username') {\n                dispatch(setLoginForm({ invalidPassword: false, invalidUsername: true }));\n            }\n            if (error.message === 'invalid password') {\n                dispatch(setLoginForm({ invalidPassword: true, invalidUsername: false }));\n            }\n        }\n    };\n}\n","import UserState from '../utils/userState'\n\nconst initialState = new UserState()\n\nexport default function UserStateReducer(state = initialState, action){\n    switch (action.type){\n        case 'USERSTATE/SET':\n            return action.payload\n        default: return state\n    }\n}","const initialState = { data: {}, loading: false };\n\nexport default function ActivityReducer(state = initialState, action) {\n    switch (action.type) {\n        case 'ACTIVITY/SET_DATA':\n            return { ...action.payload }\n        case 'ACTIVITY/LOADING':\n            return { ...state, loading: true}\n        default:\n            return state;\n    }\n}\n","const initialState = {\n    show: false,\n    ingredients: [],\n    time: '',\n    mealType: '',\n    _id: '',\n    new: false,\n    edit: false,\n    timeString: '',\n    dateString: '',\n};\n\nexport default function MealFormReducer(state = initialState, action) {\n    let { payload } = action;\n    switch (action.type) {\n        case 'MEAL_FORM/EDIT':\n            return { ...initialState, ...payload };\n        case 'MEAL_FORM/NEW':\n            return { ...initialState, ...payload };\n        case 'MEAL_FORM/CHANGE':\n            return { ...state, ...payload };\n        case 'MEAL_FORM/CLOSE':\n            return { ...initialState };\n        case 'MEAL_FORM/DELETE_INGREDIENT':\n            let ingredients = state.ingredients.filter(\n                (ingredient) => ingredient !== payload\n            );\n            return {\n                ...state,\n                ingredients,\n            };\n        default:\n            return state;\n    }\n}\n","const initialState = {\n    show: false,\n    symptoms: [],\n    time: '',\n    mood: null,\n    _id: '',\n    new: false,\n    edit: false,\n    dateString: '',\n    timeString: '',\n};\n\nexport default function HealtCheckFormReducer(state = initialState, action) {\n    let { payload } = action;\n    switch (action.type) {\n        case 'HEALTH_CHECK_FORM/EDIT':\n            return { ...initialState, ...payload };\n        case 'HEALTH_CHECK_FORM/NEW':\n            return { ...initialState, ...payload };\n        case 'HEALTH_CHECK_FORM/DELETE_SYMPTOM':\n            let symptoms = state.symptoms.filter(\n                (symptom) => symptom !== payload\n            );\n            return { ...state, symptoms };\n        case 'HEALTH_CHECK_FORM/CHANGE':\n            return { ...state, ...payload };\n        case 'HEALTH_CHECK_FORM/CLOSE':\n            return { ...initialState };\n        default:\n            return state;\n    }\n}\n","const initialState = {\n    username: '',\n    password: '',\n    show: false,\n    invalidPassword: false,\n    invalidUsername: false,\n};\n\nexport default function LoginFormReducer(state = initialState, action) {\n    let payload = action.payload;\n    switch (action.type) {\n        case 'LOGIN_FORM/SET':\n            return { ...state, ...payload };\n        case 'LOGIN_FORM/SHOW':\n            return { ...state, show: true };\n        case 'LOGIN_FORM/RESET':\n            return { ...initialState };\n        default:\n            return state;\n    }\n}\n","const initialState = {\n    show: false\n};\n\nexport default function UserOptionsReducer(state = initialState, action) {\n    let payload = action.payload;\n    switch (action.type) {\n        case 'USER_MENU/SHOW':\n            console.log('showing')\n            return {...state, show: true};\n        case 'USER_MENU/HIDE':\n            console.log('hiding')\n            return {...state, show: false};\n        default:\n            return state;\n    }\n}\n","const initialState = {\n    activity: {\n        active: true,\n        filter: 'all'\n    }\n};\n\n\nexport default function ViewReducer(state = initialState, action) {\n    let payload = action.payload\n    switch (action.type) {\n        case 'VIEW/ACTIVITY':\n            return { ...initialState, ...payload };\n        default:\n            return state;\n    }\n}\n","import {validate as validateEmail } from 'email-validator'\n\nexport function password(value){\n    let valid = /^\\w{1,}$/i.test(value)\n    let error = valid ? '' : 'Invalid Password'\n    return {valid, error}\n}\n\nexport function email(value){\n\n    let valid = validateEmail(value)\n    let error = valid ? '' : 'Invalid Email Address'\n    return {valid, error}\n\n}\n\nexport function name(value){\n    let valid = /^\\w{1,}$/i.test(value)\n    let error = valid ? '' : 'Invalid Name'\n    return {valid, error}\n}","import { Password } from 'components/common/utils/formValidation';\nconst intitalInputState = { value: '', valid: false, touched: false, error: '' };\nconst initialState = {\n    show: false,\n    firstName: { ...intitalInputState },\n    lastName: { ...intitalInputState },\n    email: { ...intitalInputState },\n    username: { ...intitalInputState },\n    password: { ...intitalInputState },\n    passwordVerify: { ...intitalInputState },\n};\n\nexport default function RegisterFormReducer(state = initialState, action) {\n    let payload = action.payload;\n    switch (action.type) {\n        case 'REGISTER_FORM/SHOW':\n            return { ...state, show: true };\n        case 'REGISTER_FORM/HIDE':\n            return { ...state, show: false };\n        case 'REGISTER_FORM/SET':\n            return { ...state, ...payload };\n        case 'REGISTER_FORM/VALIDATE':\n            return { ...state, ...payload };\n        default:\n            return { ...state };\n    }\n}\n","import {combineReducers} from 'redux'\nimport UserStateReducer from 'components/common/state/UserStateReducer'\nimport ActivityReducer from 'components/activity/state/ActivityReducer.js'\nimport MealFormReducer from 'components/meal_form/state/MealFormReducer.js'\nimport HealthCheckFormReducer from 'components/health_check_form/state/healthCheckFormReducer'\nimport LoginFormReducer from 'components/login_form/state/loginFormReducer'\nimport UserMenuReducer from 'components/user_menu/state/UserMenuReducer'\nimport ViewReducer from './ViewReducer'\nimport RegisterFormReducer from 'components/register_form/state/registerFormReducer'\n\nconst rootReducer = combineReducers({\n    UserState: UserStateReducer,\n    activity: ActivityReducer,\n    mealForm: MealFormReducer,\n    healthCheckForm: HealthCheckFormReducer,\n    loginForm: LoginFormReducer,\n    userMenu: UserMenuReducer,\n    view: ViewReducer,\n    registerForm: RegisterFormReducer\n})\n\nexport default rootReducer","import { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './RootReducer.js';\nimport thunk from 'redux-thunk';\n\nconst devTools =\n    window.__REDUX_DEVTOOLS_EXTENSION__ &&\n    window.__REDUX_DEVTOOLS_EXTENSION__();\n\nconst middleWare = compose(applyMiddleware(thunk), devTools);\n\nconst store = createStore(rootReducer, middleWare);\n\nexport default store;\n","import { attemptLogIn } from '../state/UserStateActions.js';\nimport store from '../state/Store.js';\n\nlet dispatch = store.dispatch;\n\nfunction token() {\n    return store.getState().UserState.accessToken;\n}\n\nexport function getHeaders() {\n    return {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token().value}`,\n    };\n}\n\n\nexport async function get(route) {\n    if (token().expired()) await dispatch(attemptLogIn());\n    console.log('api get: ' + route);\n    let response = await fetch(`/api/${route}`, {\n        method: 'GET',\n        headers: getHeaders(),\n    });\n    return await response.json();\n}\n\nexport async function post(route, data) {\n    if (token().expired()) await dispatch(attemptLogIn());\n    console.log('api post: ' + route);\n    let response = await fetch(`/api/${route}`, {\n        method: 'POST',\n        headers: getHeaders(),\n        body: JSON.stringify(data),\n    });\n    return await response.json();\n}\n\nexport async function put(route, data) {\n    if (token().expired()) await dispatch(attemptLogIn());\n    let response = await fetch(`/api/${route}`, {\n        method: 'PUT',\n        headers: getHeaders(),\n        body: JSON.stringify(data),\n    });\n    return await response.json();\n}\n\nexport async function deleteByID(route, _id) {\n    if (token().expired()) await dispatch(attemptLogIn());\n    let response = await fetch(`/api/${route}/${_id}`, {\n        method: 'DELETE',\n        headers: getHeaders(),\n    });\n    return await response.json();\n}\n","import * as accessToken from 'components/common/utils/accessToken.js';\nimport UserState from 'components/common/utils/userState';\nimport { showLoginForm } from 'components/login_form/state/loginFormActions';\nimport { getHeaders } from '../utils/api';\n\nexport function setUserState(payload) {\n    return {\n        type: 'USERSTATE/SET',\n        payload,\n    };\n}\n\nexport function attemptLogIn() {\n    console.log('attempting login');\n    return async (dispatch, getState) => {\n        try {\n            let token = await accessToken.refresh(); //return access token object\n            dispatch(setUserState(new UserState(token)));\n        } catch (error) {\n            console.log('no refresh token, login required');\n            dispatch(showLoginForm());\n            dispatch(setUserState(new UserState()));\n        }\n    };\n}\n\nexport function LogOut() {\n    return async (dispatch, getState) => {\n        const token = () => getState().UserState.accessToken;\n        try {\n            if (token().expired()) await dispatch(attemptLogIn());\n            let response = await fetch('/logout', {\n                headers: getHeaders(),\n            });\n            dispatch(setUserState(new UserState()));\n            dispatch(showLoginForm())\n        } catch (error) {\n            console.error(error)\n        }\n    };\n}\n","export function showRegisterForm(){\n    return {\n        type: 'REGISTER_FORM/SHOW'\n    }\n}\nexport function hideRegisterForm(){\n    return {\n        type: 'REGISTER_FORM/HIDE'\n    }\n}\nexport function setRegisterForm(payload){\n    return {\n        type: 'REGISTER_FORM/SET',\n        payload\n    }\n}\nexport function validateRegisterForm(payload){\n    return {\n        type: 'REGISTER_FORM/VALIDATE',\n        payload\n    }\n}","import React from 'react'\nimport Form from 'react-bootstrap/Form';\nimport _ from 'lodash';\n\n\nexport default function RegisterInput(props){\n    let {name, state, validationCallback, placeholder, capitalize, type } = props\n    let handleBlur = props.onBlur\n    let handleChange = props.onChange\n    return (\n        <Form.Group>\n            <Form.Control\n                name={name}\n                value={state.value}\n                isInvalid={state.touched && !state.valid}\n                isValid={state.touched && state.valid}\n                onBlur={(e) => {\n                    let value = e.target.value\n                    if (value) handleBlur(e, validationCallback);\n                }}\n                onChange={(e) => {\n                    let {name, value} = e.target\n                    if(capitalize) value = _.startCase(_.lowerCase(value))\n                    handleChange({name, value});\n                }}\n                type={type}\n                placeholder={placeholder}\n            />\n            <Form.Control.Feedback type=\"invalid\">{state.error}</Form.Control.Feedback>\n            <Form.Control.Feedback type=\"valid\">{state.error}</Form.Control.Feedback>\n        </Form.Group>\n    );\n}","import { useState } from 'react';\nimport React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { hideRegisterForm, setRegisterForm, validateRegisterForm } from './state/registerFormActions';\nimport Button from 'react-bootstrap/Button';\nimport './RegisterForm.scss';\nimport * as validate from 'components/common/utils/formValidation';\nimport _ from 'lodash';\nimport RegisterInput from './state/RegisterInput';\n\nexport default function RegisterForm() {\n    let [processing, setProcessing] = useState(false);\n    const dispatch = useDispatch();\n    let state = useSelector((state) => state.registerForm);\n\n    function handleSubmit(e) {\n        e.preventDefault()\n        if(!state.password.valid) return\n        if(!state.passwordVerify.valid) return\n        if(!state.username.valid) return\n        if(!state.firstName.valid) return\n        if(!state.lastName.valid) return\n        if(!state.username.valid) return\n        console.log('good to go')\n    }\n\n    async function handleChange({ name, value }) {\n        dispatch(setRegisterForm({ [name]: { value } }));\n    }\n\n    async function handleBlur(e, validationCallback) {\n        let { name, value } = e.target;\n        let { valid, error } = await validationCallback(value);\n        dispatch(validateRegisterForm({ [name]: { value, valid, touched: true, error } }));\n    }\n\n    // function Input({ name, type = 'input', placeholder, validationCallback, capitalize = false }) {\n    //     return (\n    //         <Form.Group>\n    //             <Form.Control\n    //                 name={name}\n    //                 value={state[name].value}\n    //                 isInvalid={state[name].touched && !state[name].valid}\n    //                 isValid={state[name].touched && state[name].valid}\n    //                 onBlur={(e) => {\n    //                     let value = e.target.value;\n    //                     if (value) handleBlur(e, validationCallback);\n    //                 }}\n    //                 onChange={(e) => {\n    //                     let { name, value } = e.target;\n    //                     if (capitalize) value = _.startCase(_.lowerCase(value));\n    //                     handleChange({ name, value });\n    //                 }}\n    //                 type={type}\n    //                 placeholder={placeholder}\n    //             />\n    //             <Form.Control.Feedback type=\"invalid\">{state[name].error}</Form.Control.Feedback>\n    //             <Form.Control.Feedback type=\"valid\">{state[name].error}</Form.Control.Feedback>\n    //         </Form.Group>\n    //     );\n    // }\n\n    return (\n        <Modal show={state.show} onHide={() => dispatch(hideRegisterForm())}>\n            <Form onSubmit={handleSubmit} noValidate>\n                <Modal.Header>\n                    <Modal.Title>Sign Up!</Modal.Title>\n                </Modal.Header>\n                <Modal.Body className=\"register-form-container\">\n                    <h6>Personal info:</h6>\n                    <Row>\n                        <Col xs={6}>\n                            <RegisterInput\n                                state={state.firstName}\n                                name=\"firstName\"\n                                placeholder=\"First Name\"\n                                validationCallback={validate.name}\n                                \n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                            />\n                        </Col>\n                        <Col xs={6}>\n                            <RegisterInput\n                                state={state.lastName}\n                                name=\"lastName\"\n                                placeholder=\"Last Name\"\n                                validationCallback={validate.name}\n                                capitalize\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                            />\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col xs={12}>\n                            <RegisterInput\n                                state={state.email}\n                                name=\"email\"\n                                placeholder=\"Email\"\n                                validationCallback={validate.email}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                            />\n                        </Col>\n                    </Row>\n                    <hr />\n                    <h6>Account Info:</h6>\n                    <Row>\n                        <Col xs={12}>\n                            <RegisterInput\n                                state={state.username}\n                                name=\"username\"\n                                placeholder=\"Username\"\n                                validationCallback={async (value) => {\n                                    if (!/^\\w{1,}$/i.test(value))\n                                        return { valid: false, error: 'Invalid Username' };\n                                    let response = await fetch('validation/username/' + value);\n                                    let valid = await response.json();\n                                    let error = valid\n                                        ? 'Username is available'\n                                        : 'Username is not available';\n                                    return { valid, error };\n                                }}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                            />\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col xs={12}>\n                            <RegisterInput\n                                state={state.password}\n                                name=\"password\"\n                                placeholder=\"Password\"\n                                validationCallback={validate.password}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                            />\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col xs={12}>\n                            <RegisterInput\n                                state={state.passwordVerify}\n                                name=\"passwordVerify\"\n                                placeholder=\"Verify Password\"\n                                validationCallback={(value) => {\n                                    let valid = state.password.value === value;\n                                    let error = valid ? '' : 'Passwords do not match';\n                                    return { valid, error };\n                                }}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                            />\n                        </Col>\n                    </Row>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => dispatch(hideRegisterForm())}>\n                        Cancel\n                    </Button>\n                    <Button onClick={handleSubmit} type=\"submit\" disabled={processing} variant=\"success\">\n                        {processing ? 'Creating Account' : 'Create Account'}\n                    </Button>\n                </Modal.Footer>\n            </Form>\n        </Modal>\n    );\n}\n","import React, { useState } from 'react';\nimport './LoginForm.scss';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport { AccessToken } from '../common/utils/accessToken.js';\nimport UserState from 'components/common/utils/userState';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setUserState } from 'components/common/state/UserStateActions';\nimport { setLoginForm, logIn } from './state/loginFormActions';\nimport { showRegisterForm } from 'components/register_form/state/registerFormActions';\nimport RegisterForm from 'components/register_form/registerForm';\n\nexport default function Login() {\n    let state = useSelector((state) => state.loginForm);\n\n    const dispatch = useDispatch();\n\n    async function registerUser(credentials) {\n        let response = await fetch('/register', {\n            method: 'POST',\n            headers: {\n                'Content-type': 'application/json',\n            },\n            body: JSON.stringify({ credentials }),\n        });\n        let token = new AccessToken(await response.json());\n        dispatch(setUserState(new UserState(token))); //REDUX\n    }\n\n    return (\n        <div className=\"login-container\">\n            {state.show && (\n                <Form className=\"form\">\n                    <div className=\"login\">\n                        <Row className=\"form-row\">\n                            <Col md=\"auto\">\n                                <Form.Control\n                                    isInvalid={state.invalidUsername}\n                                    name=\"username\"\n                                    className=\"username\"\n                                    placeholder=\"User Name\"\n                                    value={state.username}\n                                    onChange={(e) => {\n                                        dispatch(setLoginForm({ username: e.target.value }));\n                                    }}\n                                />\n                            </Col>\n                            <Col className=\"filler\" xs={12}></Col>\n                            <Col md=\"auto\">\n                                <Form.Control\n                                    isInvalid={state.invalidPassword}\n                                    name=\"password\"\n                                    className=\"password\"\n                                    type=\"password\"\n                                    value={state.password}\n                                    onChange={(e) => {\n                                        dispatch(setLoginForm({ password: e.target.value }));\n                                    }}\n                                    placeholder=\"Password\"\n                                />\n                            </Col>\n                            <Col className=\"filler\" xs={12}></Col>\n                            <Col xs={8} md=\"auto\">\n                                <Button\n                                    onClick={() => {\n                                        console.log('signing in')\n                                        dispatch(logIn());\n                                    }}\n                                    className=\"login-button\"\n                                    variant=\"light\">\n                                    Sign In\n                                </Button>\n                            </Col>\n                            <Col xs={4} md=\"auto\">\n                                <Button\n                                    onClick={() => dispatch(showRegisterForm())}\n                                    className=\"signup-button\"\n                                    variant=\"success\">\n                                    Sign Up\n                                </Button>\n                                <RegisterForm />\n                            </Col>\n                        </Row>\n                    </div>\n                </Form>\n            )}\n        </div>\n    );\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { hideUserOptions, showUserOptions } from './state/UserMenuActions';\nimport Button from 'react-bootstrap/Button';\nimport Offcanvas from 'react-bootstrap/Offcanvas';\nimport './UserMenu.scss';\nimport { LogOut } from 'components/common/state/UserStateActions';\nimport { useState } from 'react';\n\nexport default function UserMenu(props) {\n    let state = useSelector((state) => state.userMenu);\n    let [loggingOut, setLoggingOut] = useState(false);\n    const dispatch = useDispatch();\n    return (\n        <div>\n            <h4>\n                Hello, {useSelector((state) => state.UserState.username)}\n                <Button\n                    variant=\"outline-dark\"\n                    style={{ marginLeft: '20px' }}\n                    onClick={() => dispatch(showUserOptions())}>\n                    <i className=\"fas fa-bars\"></i>\n                </Button>\n            </h4>\n            <Offcanvas\n                className=\"user-menu\"\n                show={state.show}\n                onHide={() => dispatch(hideUserOptions())}\n                placement=\"end\">\n                <Offcanvas.Header closeButton>\n                    <Offcanvas.Title>Your Account</Offcanvas.Title>\n                </Offcanvas.Header>\n                <Offcanvas.Body>\n                    <div className=\"options-container\">\n                        <ul>\n                            <li>\n                                <button className=\"link\">Account Settings</button>\n                            </li>\n                            <li>\n                                <button className=\"link\">Help</button>\n                            </li>\n                        </ul>\n                    </div>\n                    <div className=\"logout-button-container\">\n                        <hr />\n                        <Button\n                            disabled={loggingOut}\n                            variant=\"success\"\n                            className=\"logout\"\n                            onClick={ async () => {\n                                setLoggingOut(true)\n                                await dispatch(LogOut());\n                                setLoggingOut(false)\n                            }}>\n                            {loggingOut ? 'Logging Out' : 'Log Out'}\n                        </Button>\n                    </div>\n                </Offcanvas.Body>\n            </Offcanvas>\n        </div>\n    );\n}\n","export function showUserOptions(){\n    return {\n        type: 'USER_MENU/SHOW'\n    }\n}\nexport function hideUserOptions(){\n    return {\n        type: 'USER_MENU/HIDE'\n    }\n}","import React from 'react';\nimport Login from '../login_form/LoginForm';\nimport './Header.scss';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport CurrentUser from 'components/header/CurrentUser'\nimport UserMenu from 'components/user_menu/UserMenu';\n\n\nexport default function Header(props) {\n\n    return (\n        <Container fluid className=\"header-container\">\n            <Row className=\"header\">\n                <Col xs={12} sm=\"auto\" className=\"logo\">\n                    Food <span style={{color: '#888'}}>x</span> Mood\n                </Col>\n                <Col xs={12} md={true} className=\"filler\"></Col>\n                <Col xs={12} md={'auto'} className=\"login\">\n                    {props.user.isLoggedIn ? <UserMenu /> : <Login/>}\n                </Col>\n            </Row>\n            \n        </Container>\n    );\n}\n","import * as API from 'components/common/utils/api.js';\n\n\nfunction loadingActivity(){\n    return {\n        type: 'ACTIVITY/LOADING'\n    }\n}\n\nexport  function setActivity(filter) {\n    return async (dispatch, getState) => {\n        try {\n            dispatch(loadingActivity())\n            let filter = getState().view.activity.filter\n            let response = await API.get(`activity/${filter}`);\n            let data = Object.fromEntries(response.map((entry)=>{ //CONVERTS ARRAY TO OBJECT KEYED BY _ID\n                let { _id } = entry\n                return [_id, entry]\n            }))\n            dispatch({type: 'ACTIVITY/SET_DATA', payload: {data, loading: false}})\n        } catch (error) {\n            console.log(error)\n        }\n    };\n}","export function ViewActivity(filter){\n    return {\n        type: 'VIEW/ACTIVITY',\n        payload: {\n            activity: {\n                active: true,\n                filter\n            }\n        }\n    }\n}","import React from 'react';\nimport './Sidebar.scss';\nimport { useDispatch } from 'react-redux';\nimport { setActivity } from 'components/activity/state/ActivityActions';\nimport { ViewActivity } from './common/state/ViewActions';\n\nexport default function Sidebar(props) {\n    let dispatch = useDispatch();\n    let { setCurrentView } = props;\n    return (\n        <div className=\"sidebar-container\">\n            <div className=\"nav-group\">\n                <div className=\"nav-group-title\">\n                    <h5>Your Log</h5>\n                </div>\n                <div\n                    onClick={() => {\n                        dispatch(ViewActivity('all'))\n                    }}\n                    className=\"nav-item\">\n                    <a href=\"#\">All Activity</a>\n                </div>\n                <div\n                    onClick={() => {\n                        dispatch(ViewActivity('meals'))\n                    }}\n                    className=\"nav-item\">\n                    <a href=\"#\">Meals</a>\n                </div>\n                <div\n                    onClick={() => {\n                        dispatch(ViewActivity('health-checks'))\n                    }}\n                    className=\"nav-item\">\n                    <a href=\"#\">Wellness</a>\n                </div>\n                <div className=\"nav-item-catagory\"></div>\n            </div>\n            <div className=\"nav-group\">\n                <div className=\"nav-group-title\">\n                    <h5>Analysis</h5>\n                </div>\n                <div className=\"nav-item\">\n                    <a href=\"#\">Food Items</a>\n                </div>\n                <div className=\"nav-item\">\n                    <a href=\"#\">Symptoms</a>\n                </div>\n                <div className=\"nav-item-catagory\"></div>\n            </div>\n        </div>\n    );\n}\n","import React from 'react'\nimport './Pill.scss'\n\nexport default function Pill(props){\n    return (\n        <div className=\"pill\">\n                        <div className={`pill-primary ${props.primaryColor}`}>{props.primaryText}</div>\n                        {props.secondaryText && <div className={`pill-secondary ${props.secondaryColor}`}>{props.secondaryText}</div>}\n        </div>\n    )\n}","import dayjs from 'dayjs';\nimport customParseFormat from 'dayjs/plugin/customParseFormat';\ndayjs().format();\ndayjs.extend(customParseFormat);\n\nexport function stringToUnixTime(date, time) {\n    return dayjs(`${date} ${time}`, 'YYYY-MM-DD HH:mm').unix();\n}\nexport function unixToDateString(unixTime = dayjs().unix()) {\n    return dayjs.unix(unixTime).format('YYYY-MM-DD');\n}\nexport function unixToTimeString(unixTime = dayjs().unix()) {\n    return dayjs.unix(unixTime).format('HH:mm');\n}\n","import store from 'components/common/state/Store';\nimport { unixToDateString, unixToTimeString } from 'components/common/utils/DateHandler';\n\nexport function editMeal(_id) {\n    let currentEntry = store.getState().activity.data[_id];\n    return {\n        type: 'MEAL_FORM/EDIT',\n\n        payload: {\n            edit: true,\n            show: true,\n            ...currentEntry,\n            timeString: unixToTimeString(currentEntry.time),\n            dateString: unixToDateString(currentEntry.time),\n        },\n    };\n}\n\nexport function formChange(payload) {\n    return {\n        type: 'MEAL_FORM/CHANGE',\n        payload,\n    };\n}\n\nexport function deleteIngredient(payload) {\n    return {\n        type: 'MEAL_FORM/DELETE_INGREDIENT',\n        payload,\n    };\n}\n\nexport function newMeal() {\n    console.log('new meal action');\n    return {\n        type: 'MEAL_FORM/NEW',\n        payload: {\n            new: true,\n            show: true,\n            timeString: unixToTimeString(),\n            dateString: unixToDateString(),\n        },\n    };\n}\n\nexport function closeMealForm() {\n    return {\n        type: 'MEAL_FORM/CLOSE',\n    };\n}\n","import store from 'components/common/state/Store';\nimport {\n    unixToDateString,\n    unixToTimeString,\n} from 'components/common/utils/DateHandler';\n\nexport function editHealthCheck(id) {\n    let currentEntry = store.getState().activity.data[id];\n    return {\n        type: 'HEALTH_CHECK_FORM/EDIT',\n\n        payload: {\n            edit: true,\n            show: true,\n            ...currentEntry,\n            timeString: unixToTimeString(currentEntry.time),\n            dateString: unixToDateString(currentEntry.time),\n        },\n    };\n}\n\nexport function formChange(payload) {\n    return {\n        type: 'HEALTH_CHECK_FORM/CHANGE',\n        payload,\n    };\n}\n\nexport function deleteSymptom(payload) {\n    return {\n        type: 'HEALTH_CHECK_FORM/DELETE_SYMPTOM',\n        payload,\n    };\n}\n\nexport function newHealthCheck() {\n    console.log('new meal action');\n    return {\n        type: 'HEALTH_CHECK_FORM/NEW',\n        payload: {\n            new: true,\n            show: true,\n            timeString: unixToTimeString(),\n            dateString: unixToDateString(),\n        },\n    };\n}\nexport function closeHealthCheckForm() {\n    return {\n        type: 'HEALTH_CHECK_FORM/CLOSE',\n    };\n}\n","import React from 'react';\nimport * as API from '../common/utils/api.js';\nimport { useDispatch } from 'react-redux';\nimport { editMeal } from 'components/meal_form/state/MealFormActions';\nimport { setActivity } from 'components/activity/state/ActivityActions';\nimport { editHealthCheck } from 'components/health_check_form/state/healthCheckFormActions.js';\n\nexport default function ManageEntry(props) {\n    const dispatch = useDispatch();\n    let { _id, type } = props.entry;\n    let endpoint;\n    if (type === 'meal') endpoint = 'meals';\n    if (type === 'healthCheck') endpoint = 'health-checks';\n\n    async function handleDelete(e) {\n        e.preventDefault();\n        try {\n            await API.deleteByID(`activity/${endpoint}`, _id);\n            dispatch(setActivity());\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    function handleEdit(e) {\n        e.preventDefault();\n        if (type === 'meal') dispatch(editMeal(_id));\n        if (type === 'healthCheck') dispatch(editHealthCheck(_id))\n    }\n\n    return (\n        <div>\n            <a onClick={handleDelete} href=\"#\">\n                <i style={{ marginLeft: '10px' }} className=\"fas fa-times\"></i>\n            </a>\n            <a onClick={handleEdit} href=\"#\">\n                <i\n                    style={{ marginLeft: '10px' }}\n                    className=\"fas fa-pencil-alt\"></i>\n            </a>\n        </div>\n    );\n};\n","import React from 'react';\nimport dayjs from 'dayjs';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Pill from '../Pill.jsx';\nimport ManageEntry from './ManageEntry'\nimport './Entry.scss';\n\nexport default function MealEntry(props) {\n    let { entry } = props\n    let { ingredients, mealType, time} = entry;\n    return (\n        <Container fluid className=\"entry-container\">\n                    <Row className=\"entry-heading\">\n                        <Col ><h6>{mealType}: {dayjs.unix(time).format('h:mm A')}</h6></Col>\n                        <Col xs=\"auto\">\n                            <ManageEntry entry={entry} />\n                            </Col>\n                    </Row>\n                    <Row className=\"entry-section\">\n                        <Col xs=\"auto\">\n                            <div className=\"section-title\">Ingredients:</div>\n                        </Col>\n                        <Col xs={true}>\n                            {ingredients.map((ingredient, index) => {\n                                return (\n                                    <Pill\n                                        key={index}\n                                        primaryText={ingredient.name}\n                                    />\n                                );\n                            })}\n                        </Col>\n                    </Row>\n        </Container>\n    );\n}\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Pill from '../Pill.jsx';\nimport './Entry.scss';\nimport ManageEntry from './ManageEntry.jsx';\n\nexport default function (props) {\n    let { entry } = props;\n    let { symptoms, mealType, type, time, _id } = entry;\n    return (\n        <Container fluid className=\"entry-container\">\n            <Row className=\"entry-heading\">\n                <Col>\n                    <span className=\"entry-type-secondary\">{type}</span>\n                    <span className=\"entry-date\">{time}</span>\n                </Col>\n                <Col xs=\"auto\">\n                    <ManageEntry entry={entry} />\n                </Col>\n            </Row>\n            <Row className=\"entry-section\">\n                <Col xs=\"auto\">\n                    <div className=\"section-title\">Symptoms:</div>\n                </Col>\n                <Col xs={true}>\n                    {symptoms.map((symptom, index) => {\n                        let severityEnum = {\n                            1: 'Mild',\n                            2: 'Moderate',\n                            3: 'Severe',\n                        };\n                        const colorEnum = {\n                            1: 'yellow',\n                            2: 'orange',\n                            3: 'red',\n                        };\n                        return (\n                            <Pill\n                                key={index}\n                                primaryText={symptom.description}\n                                secondaryText={severityEnum[symptom.severity]}\n                                secondaryColor={colorEnum[symptom.severity]}\n                            />\n                        );\n                    })}\n                </Col>\n            </Row>\n        </Container>\n    );\n}\n","import React from 'react';\nimport MealEntry from './MealEntry.jsx';\nimport HealthCheckEntry from './HealthCheckEntry.jsx';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport './DateBlock.scss';\n\nexport default function DateBlock(props) {\n    let { entries, index } = props;\n    return (\n        <div>\n            {index > 0 && <hr />}\n            <Container fluid className=\"date-block-container\">\n                <Row>\n                    <Col xs=\"auto\">\n                        <div className=\"date-container\">\n                            <div>{entries[0].date}</div>\n                        </div>\n                    </Col>\n                    <Col>\n                        {entries.map((entry) => {\n                            if (entry.type === 'meal')\n                                return <MealEntry key={entry._id} entry={entry} />;\n                            if (entry.type === 'healthCheck')\n                                return <HealthCheckEntry key={entry._id} entry={entry} />;\n                            return null\n                        })}\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    );\n}\n","import React from 'react';\nimport './AddButtonsContainer.scss';\nimport { useDispatch } from 'react-redux';\nimport { newMeal } from 'components/meal_form/state/MealFormActions';\nimport Button from 'react-bootstrap/Button';\nimport { newHealthCheck } from 'components/health_check_form/state/healthCheckFormActions';\n\nexport default function AddButtonsContainer(props) {\n    const dispatch = useDispatch();\n    return (\n        <div className=\"add-buttons-container\">\n            <Button\n                onClick={() => {\n                    dispatch(newMeal());\n                }}\n                className=\"new-meal\"\n                variant=\"success\">\n                <i className=\"fas fa-plus\"></i> Add Meal\n            </Button>\n            <Button\n                onClick={() => {\n                    dispatch(newHealthCheck());\n                }}\n                className=\"new-meal\"\n                variant=\"success\">\n                <i className=\"fas fa-plus\"></i> Add Wellness Check\n            </Button>\n        </div>\n    );\n}\n","import React, { useState } from 'react';\nimport _ from 'lodash';\nimport { AsyncTypeahead } from 'react-bootstrap-typeahead';\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\nimport * as API from './utils/api.js';\n\nexport default function InputAutoComplete(props) {\n    let {\n        defaultInputValue,\n        submit,\n        placeholder,\n        apiEndpoint,\n        allowNewItems,\n        suggestions,\n        clearOnSubmit\n    } = props;\n    \n    let [isLoading, setIsLoading] = useState(false);\n    let [options, setOptions] = useState([]);\n    let [value, setValue] = useState([]);\n\n    async function handleSearch(query) {\n        if (suggestions) { //if suggestions prop is supplied use supplied array\n            setOptions(suggestions);\n        } else { //if no suggestions prop is supplied, query api for suggestions\n            setIsLoading(true);\n            query = _.startCase(_.lowerCase(query));\n            let url = `suggestions/${apiEndpoint}/${query}`;\n            setOptions(await API.get(url))\n            setIsLoading(false);\n        }\n    }\n\n    function submitHandler(value) {\n        if (value.length <= 0) return;\n        let outputValue = value[0];\n        let newItem = false;\n        if (typeof outputValue === 'object') {\n            outputValue = outputValue.label;\n            newItem = true;\n        }\n        outputValue = _.startCase(_.lowerCase(outputValue));\n        if (allowNewItems && newItem) {\n            postValue(outputValue);\n        }\n        submit(outputValue);\n        if(clearOnSubmit) setValue(['']);\n    }\n\n    async function postValue(value) {\n        // let response = await fetch(`/${endpoint}`, {\n        //     method: 'POST',\n        //     headers: {\n        //         'Content-Type': 'application/json',\n        //         Authorization: `Bearer ${accessToken.value}`,\n        //     },\n        //     body: JSON.stringify({ ingredient: value }),\n        // });\n        await API.post(apiEndpoint, { value });\n    }\n\n    return (\n        <AsyncTypeahead\n            selectHintOnEnter={true}\n            id=\"autocomplete-input\"\n            minLength={1}\n            allowNew={allowNewItems}\n            delay={100}\n            newSelectionPrefix=\"Add a new item: \"\n            isLoading={isLoading}\n            options={options}\n            selected={value}\n            placeholder={placeholder}\n            onChange={(value) => {\n                setValue(value);\n                submitHandler(value);\n            }}\n            onSearch={handleSearch}\n            defaultInputValue={defaultInputValue ? defaultInputValue : ''}\n        />\n    );\n}\n","import React from 'react';\nimport { useState } from 'react';\nimport './IngredientPill.scss';\n\nexport default function IngredientPill(props) {\n    let { onClick } = props;\n\n    return (\n        <div className=\"ingredient-pill\">\n            <div\n                onClick={onClick}\n                className=\"pill-primary\">\n                {props.primaryText}\n            </div>\n        </div>\n    );\n}\n","import React from 'react';\nimport { useState } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col';\nimport { useDispatch, useSelector } from 'react-redux';\nimport _ from 'lodash';\n\nimport InputAutoComplete from 'components/common/InputAutoComplete';\nimport {\n    closeMealForm,\n    deleteIngredient,\n    formChange,\n} from './state/MealFormActions';\nimport Pill from 'components/IngredientPill';\nimport * as API from 'components/common/utils/api';\nimport { stringToUnixTime } from 'components/common/utils/DateHandler';\nimport './MealForm.scss';\nimport { setActivity } from 'components/activity/state/ActivityActions';\n\nexport default function MealForm(props) {\n    let [processing, setProcessing] = useState(false);\n    let state = useSelector((state) => state.mealForm);\n    const dispatch = useDispatch();\n\n    async function handleSubmit() {\n        try {\n            setProcessing(true);\n            let unixTime = stringToUnixTime(state.dateString, state.timeString);\n            let newMeal = {\n                ingredients: state.ingredients.map(\n                    (ingredient) => ingredient.name\n                ),\n                type: state.mealType,\n                time: unixTime,\n            };\n            if (state.new) await API.post('activity/meals', newMeal);\n            if (state.edit)\n                await API.put('activity/meals/' + state._id, newMeal);\n            setProcessing(false);\n            handleClose();\n            dispatch(setActivity());\n        } catch (error) {\n            console.log(error);\n            setProcessing(false);\n            handleClose();\n        }\n    }\n    async function handleClose() {\n        dispatch(closeMealForm());\n    }\n\n    function addIngredient(newIngredient) {\n        newIngredient = _.startCase(_.lowerCase(newIngredient));\n        if (state.ingredients.map(ingredient => ingredient.name).includes(newIngredient)) return;\n        dispatch(\n            formChange({\n                ingredients: [...state.ingredients, { name: newIngredient }],\n            })\n        );\n    }\n\n    return (\n        <Modal show={state.show} onHide={handleClose}>\n            <Modal.Header closeButton>\n                {state.edit && <Modal.Title>Edit Meal</Modal.Title>}\n                {state.new && <Modal.Title>Post New Meal</Modal.Title>}\n            </Modal.Header>\n            <Modal.Body>\n                <div className=\"meal-form-container\">\n                    <Row>\n                        <Col xs={12}>\n                            <InputAutoComplete\n                                submit={(value) => {\n                                    dispatch(formChange({ mealType: value }));\n                                }}\n                                suggestions={[\n                                    'Breakfast',\n                                    'Lunch',\n                                    'Dinner',\n                                    'Snack',\n                                    'Dessert',\n                                    'Drink',\n                                ]}\n                                defaultInputValue={state.mealType}\n                                placeholder=\"Meal Type (ie: Breakfast, Lunch, Dinner)\"\n                            />\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col xs={6}>\n                            <Form.Control\n                                type=\"date\"\n                                value={state.dateString}\n                                onChange={(e) => {\n                                    dispatch(\n                                        formChange({\n                                            dateString: e.target.value,\n                                        })\n                                    );\n                                }}\n                            />\n                        </Col>\n                        <Col xs={6}>\n                            <Form.Control\n                                type=\"time\"\n                                value={state.timeString}\n                                onChange={(e) => {\n                                    dispatch(\n                                        formChange({\n                                            timeString: e.target.value,\n                                        })\n                                    );\n                                }}\n                            />\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <InputAutoComplete\n                                submit={addIngredient}\n                                apiEndpoint=\"ingredients\"\n                                allowNewItems\n                                clearOnSubmit\n                                placeholder=\"Add Ingredients One at a Time\"\n                            />\n                        </Col>\n                    </Row>\n                    <div className=\"ingredient-list\">\n                        {state.ingredients.map((ingredient) => {\n                            return (\n                                <Pill\n                                    onClick={()=>{\n                                        dispatch(deleteIngredient(ingredient))\n                                    }}\n                                    key={ingredient.id}\n                                    primaryText={ingredient.name}\n                                />\n                            );\n                        })}\n                    </div>\n                </div>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"secondary\" onClick={handleClose}>\n                    Cancel\n                </Button>\n                {state.new && (\n                    <Button\n                        disabled={processing}\n                        variant=\"success\"\n                        onClick={handleSubmit}>\n                        {processing ? 'Posting' : 'Post Meal'}\n                    </Button>\n                )}\n                {state.edit && (\n                    <Button\n                        disabled={processing}\n                        variant=\"success\"\n                        onClick={handleSubmit}>\n                        {processing ? 'Saving' : 'Save Changes'}\n                    </Button>\n                )}\n            </Modal.Footer>\n        </Modal>\n    );\n}\n","import dayjs from 'dayjs';\nimport isYesterday from 'dayjs/plugin/isYesterday';\nimport isToday from 'dayjs/plugin/isToday';\nimport customParseFormat from 'dayjs/plugin/customParseFormat';\ndayjs().format();\ndayjs.extend(isYesterday);\ndayjs.extend(isToday);\ndayjs.extend(customParseFormat);\n\nfunction toDate(time) {\n    let date = dayjs.unix(time);\n    if (date.isYesterday()) return 'Yesterday';\n    if (date.isToday()) return 'Today'\n    let oneWeekAgo = dayjs().subtract(1, 'week')\n    if (date.isAfter(oneWeekAgo)){\n        return date.format('dddd')\n    }\n    return date.format('MMM DD');\n}\n\nfunction toSortedArray(dataObject){\n    let dataArray = Object.entries(dataObject).map(([key, val])=>{\n        return {...val} //IMPORTANT, CREATES SHALLOW COPY TO PREVENT MUTATING STATE\n    })\n    return dataArray.sort((a, b)=>{\n        return b.time - a.time\n    })\n}\n\nexport function create(dataObject) { \n    let dataArray = toSortedArray(dataObject)\n    return dataArray.reduce((acc, currentEntry) => {\n        currentEntry.date = toDate(currentEntry.time);\n        let lastSubArray = acc[acc.length - 1];\n        if (!lastSubArray) return [[currentEntry]];\n        let lastEntry = lastSubArray[lastSubArray.length - 1];\n        if (lastEntry.date === currentEntry.date) {\n            acc[acc.length - 1].unshift(currentEntry);\n            return acc;\n        }\n        acc.push([currentEntry]);\n        return acc;\n    }, []);\n}\n","import React, { useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport _ from 'lodash';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    closeHealthCheckForm,\n    formChange,\n    deleteSymptom\n} from './state/healthCheckFormActions';\nimport InputAutoComplete from 'components/common/InputAutoComplete';\nimport Pill from 'components/IngredientPill';\nimport * as API from 'components/common/utils/api';\nimport { stringToUnixTime } from 'components/common/utils/DateHandler';\nimport './HealthCheckForm.scss';\nimport { setActivity } from 'components/activity/state/ActivityActions';\n\nexport default function HealthCheckForm() {\n    let [processing, setProcessing] = useState(false);\n    let state = useSelector((state) => state.healthCheckForm);\n    let dispatch = useDispatch();\n\n    function handleClose() {\n        dispatch(closeHealthCheckForm());\n    }\n    function handleMoodSelect(val) {\n        dispatch(\n            formChange({\n                mood: val,\n            })\n        );\n    }\n    function addSymptom(newSymptom) {\n        newSymptom = _.startCase(_.lowerCase(newSymptom));\n        console.log(state.symptoms);\n        if (\n            state.symptoms\n                .map((symptom) => symptom.description)\n                .includes(newSymptom)\n        )\n            return;\n        dispatch(\n            formChange({\n                symptoms: [...state.symptoms, { description: newSymptom }],\n            })\n        );\n    }\n    async function handleSubmit() {\n        try {\n            setProcessing(true);\n            let unixTime = stringToUnixTime(state.dateString, state.timeString);\n            let newHealthCheck = {\n                symptoms: state.symptoms.map((symptom) => symptom.description),\n                mood: state.mood,\n                time: unixTime,\n            };\n            if (state.new)\n                await API.post('activity/health-checks', newHealthCheck);\n            if (state.edit)\n                await API.put(\n                    'activity/health-checks/' + state._id,\n                    newHealthCheck\n                );\n            setProcessing(false);\n            handleClose();\n            dispatch(setActivity());\n        } catch (error) {\n            console.log(error);\n            setProcessing(false);\n            handleClose();\n        }\n    }\n\n    return (\n        <Modal show={state.show} onHide={handleClose}>\n            <Modal.Header closeButton>\n                {state.edit && <Modal.Title>Edit Wellness Check</Modal.Title>}\n                {state.new && (\n                    <Modal.Title>Post New Wellness Check</Modal.Title>\n                )}\n            </Modal.Header>\n            <Modal.Body>\n                <div className=\"health-check-form-container\">\n                    <Row>\n                        <Col xs={6}>\n                            <Form.Control\n                                type=\"date\"\n                                name=\"date\"\n                                value={state.dateString}\n                                onChange={(e) => {\n                                    dispatch(\n                                        formChange({\n                                            dateString: e.target.value,\n                                        })\n                                    );\n                                }}\n                            />\n                        </Col>\n                        <Col xs={6}>\n                            <Form.Control\n                                type=\"time\"\n                                name=\"time\"\n                                value={state.timeString}\n                                onChange={(e) => {\n                                    dispatch(\n                                        formChange({\n                                            timeString: e.target.value,\n                                        })\n                                    );\n                                }}\n                            />\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col xs={12}>\n                            <ButtonGroup style={{ display: 'flex' }}>\n                                <Button\n                                    onClick={() => handleMoodSelect(1)}\n                                    className=\"mood-button\"\n                                    variant={\n                                        state.mood === 1 ? 'secondary' : 'light'\n                                    }>\n                                    Grumpy\n                                </Button>\n                                <Button\n                                    onClick={() => handleMoodSelect(2)}\n                                    className=\"mood-button\"\n                                    variant={\n                                        state.mood === 2 ? 'secondary' : 'light'\n                                    }>\n                                    Neutral\n                                </Button>\n                                <Button\n                                    onClick={() => handleMoodSelect(3)}\n                                    className=\"mood-button\"\n                                    variant={\n                                        state.mood === 3 ? 'secondary' : 'light'\n                                    }>\n                                    Upbeat\n                                </Button>\n                            </ButtonGroup>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <InputAutoComplete\n                                submit={addSymptom}\n                                allowNewItems\n                                clearOnSubmit\n                                placeholder=\"Add Symptoms One at a Time\"\n                                apiEndpoint=\"symptoms\"\n                            />\n                        </Col>\n                    </Row>\n                    <div className=\"symptom-list\">\n                        {state.symptoms.map((symptom, index) => {\n                            return (\n                                <Pill\n                                    onClick={() => {\n                                        dispatch(deleteSymptom(symptom));\n                                    }}\n                                    index={index}\n                                    key={index}\n                                    primaryText={symptom.description}\n                                />\n                            );\n                        })}\n                    </div>\n                </div>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"secondary\" onClick={handleClose}>\n                    Cancel\n                </Button>\n                {state.new && (\n                    <Button\n                        disabled={processing}\n                        variant=\"success\"\n                        onClick={handleSubmit}>\n                        {processing ? 'Posting' : 'Post Health Check'}\n                    </Button>\n                )}\n                {state.edit && (\n                    <Button\n                        disabled={processing}\n                        variant=\"success\"\n                        onClick={handleSubmit}>\n                        {processing ? 'Saving' : 'Save Changes'}\n                    </Button>\n                )}\n            </Modal.Footer>\n        </Modal>\n    );\n}\n","import React, { useEffect } from 'react';\nimport './Activity.scss';\nimport DateBlock from './DateBlock.jsx';\nimport AddButtonsContainer from 'components/activity/AddButtonsContainer';\nimport MealForm from 'components/meal_form/MealForm';\nimport * as FeedArray from './utils/feedArray';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setActivity } from 'components/activity/state/ActivityActions';\nimport HealthCheckForm from 'components/health_check_form/HealthCheckForm';\n\nexport default function Activity(props) {\n    const dispatch = useDispatch();\n    let state = useSelector((state) => state);\n\n    useEffect(() => {\n        dispatch(setActivity());\n    }, [state.view]);\n\n    let activityFeed = FeedArray.create(state.activity.data);\n    \n    return (\n        <div className=\"activity-container\">\n            <div>\n                <AddButtonsContainer />\n                <MealForm />\n                <HealthCheckForm />\n                {activityFeed.map((dateBlock, index) => {\n                    return <DateBlock key={index} index={index} entries={dateBlock} />;\n                })}\n            </div>\n        </div>\n    );\n}\n","import React, { useState } from 'react';\nimport Sidebar from './Sidebar';\nimport Activity from './activity/Activity'\nimport { useSelector } from 'react-redux';\n\nexport default function Dashboard(props){\n    let state = useSelector(state => state.view)\n\n    return (\n        <div style={{position: 'relative'}}>\n            <Sidebar />\n            {(state.activity.active) && <Activity />}\n\n        </div>  \n    )\n}","import React, { useEffect } from 'react';\nimport Header from 'components/header/Header';\nimport Dashboard from './Dashboard';\nimport {useSelector, useDispatch} from 'react-redux'\nimport {attemptLogIn } from './common/state/UserStateActions.js'\n\nfunction App() {\n    let userState = useSelector(state => state.UserState)\n    const dispatch = useDispatch()\n\n\n    useEffect(() => dispatch(attemptLogIn()), []);\n\n    return (\n        <div>\n            <Header user={userState} />\n\n            {userState.isLoggedIn && (\n                <Dashboard/>\n            )}\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './styles.scss';\nimport { Provider } from 'react-redux';\nimport store from './components/common/state/Store.js'\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}