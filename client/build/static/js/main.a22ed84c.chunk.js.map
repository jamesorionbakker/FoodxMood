{"version":3,"sources":["components/common/utils/accessToken.js","components/common/utils/userState.js","components/common/state/UserStateActions.js","components/login_form/state/loginFormActions.js","components/register_form/state/registerFormActions.js","components/common/utils/formValidation.js","components/register_form/state/RegisterInput.jsx","components/register_form/registerForm.jsx","components/login_form/LoginForm.jsx","components/user_menu/UserMenu.jsx","components/user_menu/state/UserMenuActions.js","components/header/Header.jsx","components/common/state/ViewActions.js","components/Sidebar.jsx","components/Pill.jsx","components/common/utils/api.js","components/common/state/UserStateReducer.js","components/activity/state/ActivityReducer.js","components/meal_form/state/MealFormReducer.js","components/health_check_form/state/healthCheckFormReducer.js","components/login_form/state/loginFormReducer.js","components/user_menu/state/UserMenuReducer.js","components/common/state/ViewReducer.js","components/register_form/state/registerFormReducer.js","components/common/state/RootReducer.js","components/common/state/Store.js","components/common/utils/DateHandler.js","components/meal_form/state/MealFormActions.js","components/activity/state/ActivityActions.js","components/health_check_form/state/healthCheckFormActions.js","components/activity/ManageEntry.jsx","components/activity/MealEntry.jsx","components/activity/HealthCheckEntry.jsx","components/activity/DateBlock.jsx","components/activity/AddButtonsContainer.jsx","components/common/InputAutoComplete.jsx","components/IngredientPill.jsx","components/meal_form/MealForm.jsx","components/activity/utils/feedArray.js","components/health_check_form/HealthCheckForm.jsx","components/activity/Activity.jsx","components/Dashboard.jsx","components/App.jsx","components/common/utils/axiosConfig.js","index.js"],"names":["AccessToken","value","jwt_decode","exp","username","firstName","lastName","this","Math","ceil","Date","now","getCurrSeconds","refresh","a","fetch","response","status","json","error","Error","token","UserState","expired","accessToken","isLoggedIn","setUserState","payload","type","attemptLogIn","console","log","dispatch","getState","setLoginForm","setRegisterForm","validateRegisterForm","password","errorMessage","test","valid","name","RegisterInput","props","state","validationCallback","placeholder","capitalize","validated","trimWhitespace","lowercase","handleBlur","onBlur","handleChange","onChange","Form","Group","Control","isInvalid","touched","isValid","e","target","_","trim","toLower","split","reduce","acc","substring","upperFirst","Feedback","RegisterForm","useState","processing","setProcessing","useDispatch","useSelector","registerForm","handleSubmit","preventDefault","passwordVerify","registerPayload","method","headers","body","JSON","stringify","Modal","show","onHide","onSubmit","noValidate","Header","Title","Body","className","Row","Col","xs","validate","Footer","Button","variant","onClick","disabled","Login","loginForm","attemptingLogin","message","invalidPassword","invalidUsername","md","UserMenu","userMenu","loggingOut","setLoggingOut","style","marginLeft","color","borderColor","Offcanvas","placement","closeButton","axios","get","userState","Container","fluid","sm","ViewActivity","filter","activity","active","Sidebar","href","Pill","text","route","url","data","post","put","deleteByID","_id","initialState","loading","ingredients","time","mealType","new","edit","timeString","dateString","symptoms","mood","intitalInputState","email","rootReducer","combineReducers","action","mealForm","ingredient","healthCheckForm","symptom","view","outputState","Object","keys","forEach","key","hasOwnProperty","middleWare","compose","applyMiddleware","thunk","store","createStore","composeWithDevTools","stringToUnixTime","date","dayjs","unix","unixToDateString","unixTime","format","unixToTimeString","formChange","setActivity","API","fromEntries","map","entry","ManageEntry","endpoint","currentEntry","editMeal","id","editHealthCheck","extend","customParseFormat","MealEntry","Breakfast","Lunch","Dessert","Snack","Dinner","Drink","HealthCheck","index","HealthCheckEntry","description","DateBlock","entries","AddButtonsContainer","InputAutoComplete","defaultInputValue","submit","apiEndpoint","allowNewItems","suggestions","clearOnSubmit","isLoading","setIsLoading","options","setOptions","setValue","query","startCase","lowerCase","submitHandler","length","outputValue","newItem","label","postValue","selectHintOnEnter","minLength","allowNew","delay","newSelectionPrefix","selected","onSearch","IngredientPill","primaryText","MealForm","newMeal","handleClose","newIngredient","includes","isYesterday","isToday","build","activityEntriesObj","dataObject","val","sort","b","output","currEntry","currArray","oneWeekAgo","subtract","isAfter","unixTimeToDate","push","unshift","HealthCheckForm","handleMoodSelect","newHealthCheck","ButtonGroup","display","newSymptom","Activity","loaded","useEffect","FeedArray","dateBlock","Spinner","animation","Dashboard","position","App","getToken","interceptors","request","use","config","Authorization","err","configAxios","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a22ed84c.chunk.js","sourcesContent":["import jwt_decode from 'jwt-decode';\n\nexport class AccessToken {\n    constructor(value){\n        let {exp, username, firstName, lastName} = jwt_decode(value)\n        this.value = value;\n        this.exp = exp\n        this.username = username\n        this.firstName = firstName\n        this.lastName = lastName\n    }\n    getCurrSeconds() {\n        return Math.ceil(Date.now() / 1000);\n    }\n    expired(){\n        if(this.exp < this.getCurrSeconds() + 10){\n            return true;\n        }\n        return false\n    }\n}\n\nexport async function refresh() {\n    let response = await fetch('/access');\n    if (response.status !== 200) {\n        let error = await response.json();\n        throw new Error(error);\n    }\n    let token = await response.json();\n    return new AccessToken(token)\n}\n\nexport function decode(token) {\n    let { username, firstName, lastName } = jwt_decode(token);\n    console.log(firstName)\n    return {\n        username,\n        firstName,\n        lastName,\n        accessToken: token,\n        isLoggedIn: true,\n    };\n}\n","export default class UserState {\n    constructor(token) {\n        if (token && !token.expired()) {\n            this.accessToken = token;\n            let { username, firstName, lastName } = token;\n            this.username = username;\n            this.firstName = firstName;\n            this.lastName = lastName;\n            this.isLoggedIn = true\n        } else {\n            this.accessToken = null\n            this.username = '';\n            this.firstName = '';\n            this.lastName = '';\n            this.isLoggedIn = false\n        }\n    }\n}\n","import * as accessToken from 'components/common/utils/accessToken.js';\nimport UserState from 'components/common/utils/userState';\nimport { hideUserOptions } from 'components/user_menu/state/UserMenuActions';\nimport axios from 'axios';\nexport function setUserState(payload) {\n    return {\n        type: 'USERSTATE/SET',\n        payload,\n    };\n}\n\nexport function attemptLogIn() {\n    console.log('attempting login');\n    return async (dispatch, getState) => {\n        try {\n            let token = await accessToken.refresh(); //return access token object\n            dispatch(setUserState(new UserState(token)));\n        } catch (error) {\n            console.log('no refresh token, login required');\n            dispatch(setUserState(new UserState()));\n        }\n    };\n}\n\nexport function LogOut() {\n    return async (dispatch, getState) => {\n        const token = () => getState().UserState.accessToken;\n        try {\n            if (token().expired()) await dispatch(attemptLogIn());\n            await axios.get('/logout');\n            dispatch(hideUserOptions())\n            dispatch(setUserState(new UserState()));\n        } catch (error) {\n            console.error(error)\n        }\n    };\n}\n","import { AccessToken } from 'components/common/utils/accessToken.js';\nimport { setUserState } from 'components/common/state/UserStateActions.js';\nimport UserState from 'components/common/utils/userState';\n\nexport function showLoginForm(payload) {\n    return {\n        type: 'LOGIN_FORM/SHOW',\n    };\n}\n\nexport function setLoginForm(payload) {\n    return {\n        type: 'LOGIN_FORM/SET',\n        payload,\n    };\n}\nexport function resetLoginForm() {\n    return {\n        type: 'LOGIN_FORM/RESET',\n    };\n}\n\nexport function logIn() {\n    return async (dispatch, getState) => {\n        try {\n            let { username, password } = getState().loginForm;\n            let response = await fetch('/login', {\n                method: 'POST',\n                headers: { 'Content-type': 'application/json' },\n                body: JSON.stringify({ username, password }),\n            });\n            if (response.status !== 200) {\n                let errorMessage = await response.json();\n                throw new Error(errorMessage);\n            }\n            let token = new AccessToken(await response.json());\n            dispatch(setUserState(new UserState(token)));\n            dispatch(resetLoginForm());\n        } catch (error) {\n            console.log(error);\n            if (error.message === 'invalid username') {\n                dispatch(setLoginForm({ invalidPassword: false, invalidUsername: true }));\n            }\n            if (error.message === 'invalid password') {\n                dispatch(setLoginForm({ invalidPassword: true, invalidUsername: false }));\n            }\n        }\n    };\n}\n","export function showRegisterForm(){\n    return {\n        type: 'REGISTER_FORM/SHOW'\n    }\n}\nexport function hideRegisterForm(){\n    return {\n        type: 'REGISTER_FORM/HIDE'\n    }\n}\nexport function setRegisterForm(payload){\n    return {\n        type: 'REGISTER_FORM/SET',\n        payload\n    }\n}\nexport function validateRegisterForm(payload){\n    return {\n        type: 'REGISTER_FORM/VALIDATE',\n        payload\n    }\n}\nexport function touchAllInputs(){\n    return {\n        type: \"REGISTER_FORM/TOUCH_ALL\",\n    }\n}","import { validate as validateEmail } from 'email-validator';\n\nexport function password(value) {\n    let errorMessage = 'Password must be at least 8 characters with at least one capital letter and one number'\n    if (/\\s/.test(value)) {\n        return { valid: false, error: 'Password cannot contain spaces. ' + errorMessage }\n    }\n    if (!/^\\S{8,}$/i.test(value)) {\n        return { valid: false, error: errorMessage };\n    }\n    if (!/[A-Z]/.test(value)) {\n        return { valid: false, error: errorMessage }\n    }\n    if (!/\\d/.test(value)) {\n        return { valid: false, error: errorMessage }\n    }\n    return { valid: true, error: '' };\n}\n\nexport function email(value) {\n    let valid = validateEmail(value);\n    let error = valid ? '' : 'Invalid Email Address';\n    return { valid, error };\n}\n\nexport function name(value) {\n    let valid = /^\\w{1,}/i.test(value);\n    let error = valid ? '' : 'Invalid Name';\n    return { valid, error };\n}\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport _ from 'lodash';\n\nexport default function RegisterInput(props) {\n    let { name, state, validationCallback, placeholder, capitalize, type, validated, trimWhitespace, lowercase} = props;\n    let handleBlur = props.onBlur;\n    let handleChange = props.onChange;\n    return (\n        <Form.Group>\n            <Form.Control\n                name={name}\n                value={state.value}\n                isInvalid={validated && state.touched && !state.valid}\n                isValid={validated && state.touched && state.valid}\n                onBlur={(e) => {\n                    let value = e.target.value;\n                    if (value) handleBlur(e, validationCallback);\n                }}\n                onChange={(e) => {\n                    let { name, value } = e.target;\n                    //if capitalize prop is true, and last character typed is a letter char\n                    if (trimWhitespace) value = _.trim(value)\n                    if (lowercase) value = _.toLower(value)\n                    if (capitalize && /\\w$/.test(value)) {\n                        value = value.split(/([\\s-_.])/).reduce((acc, substring) => {\n                            return acc + _.upperFirst(substring);\n                        }, '');\n                        value = _.trim(value);\n                    }\n                    handleChange({ name, value });\n                }}\n                type={type}\n                placeholder={placeholder}\n            />\n            <Form.Control.Feedback type=\"invalid\">{state.error}</Form.Control.Feedback>\n            <Form.Control.Feedback type=\"valid\">{state.error}</Form.Control.Feedback>\n        </Form.Group>\n    );\n}\n","import { useState } from 'react';\nimport React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    hideRegisterForm,\n    setRegisterForm,\n    touchAllInputs,\n    validateRegisterForm,\n} from './state/registerFormActions';\nimport Button from 'react-bootstrap/Button';\nimport './RegisterForm.scss';\nimport * as validate from 'components/common/utils/formValidation';\nimport RegisterInput from './state/RegisterInput';\nimport { AccessToken } from '../common/utils/accessToken.js';\nimport UserState from 'components/common/utils/userState';\nimport { setUserState } from 'components/common/state/UserStateActions';\nimport _ from 'lodash';\n\nexport default function RegisterForm() {\n    let [processing, setProcessing] = useState(false);\n    const dispatch = useDispatch();\n    let state = useSelector((state) => state.registerForm);\n\n    async function handleSubmit(e) {\n        e.preventDefault();\n        dispatch(touchAllInputs());\n        if (!state.password.valid) return;\n        if (!state.passwordVerify.valid) return;\n        if (!state.username.valid) return;\n        if (!state.firstName.valid) return;\n        if (!state.lastName.valid) return;\n        let registerPayload = {\n            username: _.toLower(_.trim(state.username.value)),\n            firstName: _.trim(state.firstName.value),\n            lastName: _.trim(state.lastName.value),\n            password: _.trim(state.password.value)\n        };\n        console.log(registerPayload)\n        setProcessing(true)\n        try {\n            let response = await fetch('/register', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify(registerPayload),\n            });\n            if(response.status !== 200) throw new Error(`Error ${response.status}`)\n            console.log('success')\n            let token = new AccessToken(await response.json());\n            dispatch(setUserState(new UserState(token)))\n        } catch (error) {\n            setProcessing(false)\n            console.log(error)\n        }\n    }\n\n    async function handleChange({ name, value }) {\n        dispatch(setRegisterForm({ [name]: { value } }));\n    }\n\n    async function handleBlur(e, validationCallback) {\n        let { name, value } = e.target;\n        let { valid, error } = await validationCallback(value);\n        dispatch(validateRegisterForm({ [name]: { value, valid, touched: true, error } }));\n    }\n\n    return (\n        <Modal show={state.show} onHide={() => dispatch(hideRegisterForm())}>\n            <Form onSubmit={handleSubmit} noValidate>\n                <Modal.Header>\n                    <Modal.Title>Sign Up!</Modal.Title>\n                </Modal.Header>\n                <Modal.Body className=\"register-form-container\">\n                    <h6>Personal info:</h6>\n                    <Row>\n                        <Col xs={6}>\n                            <RegisterInput\n                                state={state.firstName}\n                                name=\"firstName\"\n                                capitalize\n                                validated\n                                placeholder=\"First Name\"\n                                validationCallback={validate.name}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                            />\n                        </Col>\n                        <Col xs={6}>\n                            <RegisterInput\n                                state={state.lastName}\n                                name=\"lastName\"\n                                validated\n                                placeholder=\"Last Name\"\n                                validationCallback={validate.name}\n                                capitalize\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                            />\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col xs={12}>\n                            {/* <RegisterInput\n                                state={state.email}\n                                name=\"email\"\n                                placeholder=\"Email\"\n                                validationCallback={(validate.email)}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                            /> */}\n                        </Col>\n                    </Row>\n                    <hr />\n                    <h6>Account Info:</h6>\n                    <Row>\n                        <Col xs={12}>\n                            <RegisterInput\n                                state={state.username}\n                                name=\"username\"\n                                validated\n                                trimWhitespace\n                                lowercase\n                                placeholder=\"Username\"\n                                validationCallback={async (value) => {\n                                    if (!/^\\w{1,}$/i.test(value))\n                                        return { valid: false, error: 'Invalid Username' };\n                                    let response = await fetch('validation/username/' + value);\n                                    let valid = await response.json();\n                                    let error = valid\n                                        ? 'Username is available'\n                                        : 'Username is not available';\n                                    return { valid, error };\n                                }}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                            />\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col xs={12}>\n                            <RegisterInput\n                                type=\"password\"\n                                state={state.password}\n                                name=\"password\"\n                                validated\n                                placeholder=\"Password\"\n                                validationCallback={validate.password}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                            />\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col xs={12}>\n                            <RegisterInput\n                                type=\"password\"\n                                state={state.passwordVerify}\n                                name=\"passwordVerify\"\n                                validated\n                                placeholder=\"Verify Password\"\n                                validationCallback={(value) => {\n                                    let valid = state.password.value === value;\n                                    let error = valid ? '' : 'Passwords do not match';\n                                    return { valid, error };\n                                }}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                            />\n                        </Col>\n                    </Row>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"default\" onClick={() => dispatch(hideRegisterForm())}>\n                        Cancel\n                    </Button>\n                    <Button\n                        onClick={handleSubmit}\n                        type=\"submit\"\n                        disabled={processing}\n                        variant=\"default\" \n                        className=\"button-light-green\"\n                        >\n                        {processing ? 'Creating Account' : 'Create Account'}\n                    </Button>\n                </Modal.Footer>\n            </Form>\n        </Modal>\n    );\n}\n","import React from 'react';\nimport './LoginForm.scss';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setLoginForm, logIn } from './state/loginFormActions';\nimport { showRegisterForm } from 'components/register_form/state/registerFormActions';\nimport RegisterForm from 'components/register_form/registerForm';\n\nexport default function Login() {\n    let state = useSelector((state) => state.loginForm);\n    let { attemptingLogin } = useSelector((state) => state.UserState);\n\n    const dispatch = useDispatch();\n\n    return (\n        <div className=\"login-container\">\n            {!attemptingLogin && (\n                <Form\n                    className=\"form\"\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        console.log('signing in');\n                        dispatch(logIn());\n                    }}>\n                    <div className=\"login\">\n                        <Row className=\"form-row\">\n                            <Col className=\"form-col\" md=\"auto\">\n                                <Form.Control\n                                    isInvalid={state.invalidUsername}\n                                    name=\"username\"\n                                    className=\"username\"\n                                    placeholder=\"User Name\"\n                                    value={state.username}\n                                    onChange={(e) => {\n                                        dispatch(setLoginForm({ username: e.target.value }));\n                                    }}\n                                />\n                            </Col>\n                            <Col className=\"filler\" xs={12}></Col>\n                            <Col className=\"form-col\" md=\"auto\">\n                                <Form.Control\n                                    isInvalid={state.invalidPassword}\n                                    name=\"password\"\n                                    className=\"password\"\n                                    type=\"password\"\n                                    value={state.password}\n                                    onChange={(e) => {\n                                        dispatch(setLoginForm({ password: e.target.value }));\n                                    }}\n                                    placeholder=\"Password\"\n                                />\n                            </Col>\n                            <Col className=\"filler\" xs={12}></Col>\n                            <Col className=\"form-col\" xs={8} md=\"auto\">\n                                <Button type=\"submit\" className=\"login-button\" variant=\"light\">\n                                    Sign In\n                                </Button>\n                            </Col>\n                            <Col className=\"form-col\" xs={4} md=\"auto\">\n                                <Button\n                                    onClick={() => dispatch(showRegisterForm())}\n                                    className=\"button-dark-green\"\n                                    variant=\"success\">\n                                    Sign Up\n                                </Button>\n                                <RegisterForm />\n                            </Col>\n                        </Row>\n                    </div>\n                </Form>\n            )}\n        </div>\n    );\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { hideUserOptions, showUserOptions } from './state/UserMenuActions';\nimport Button from 'react-bootstrap/Button';\nimport Offcanvas from 'react-bootstrap/Offcanvas';\nimport './UserMenu.scss';\nimport { LogOut } from 'components/common/state/UserStateActions';\nimport { useState } from 'react';\n\nexport default function UserMenu() {\n    let state = useSelector((state) => state.userMenu);\n    let [loggingOut, setLoggingOut] = useState(false);\n    const dispatch = useDispatch();\n    return (\n        <div>\n            <h4>\n                Hello, {useSelector((state) => state.UserState.firstName)}\n                <Button className=\"user-menu-button\"\n                    variant=\"outline-light\"\n                    style={{ marginLeft: '20px', color: 'white', borderColor: 'white' }}\n                    onClick={() => dispatch(showUserOptions())}>\n                    <i className=\"fas fa-bars\"></i>\n                </Button>\n            </h4>\n            <Offcanvas\n                className=\"user-menu\"\n                show={state.show}\n                onHide={() => dispatch(hideUserOptions())}\n                placement=\"end\">\n                <Offcanvas.Header closeButton>\n                    <Offcanvas.Title>Your Account</Offcanvas.Title>\n                </Offcanvas.Header>\n                <Offcanvas.Body>\n                    <div className=\"options-container\">\n                        <ul>\n                            <li>\n                                <button className=\"link\">Account Settings</button>\n                            </li>\n                            <li>\n                                <button className=\"link\">Help</button>\n                            </li>\n                        </ul>\n                    </div>\n                    <div className=\"logout-button-container\">\n                        <hr />\n                        <Button\n                            disabled={loggingOut}\n                            variant=\"default\"\n                            className=\"logout button-dark-green\"\n                            onClick={ async () => {\n                                setLoggingOut(true)\n                                await dispatch(LogOut());\n                            }}>\n                            {loggingOut ? 'Logging Out' : 'Log Out'}\n                        </Button>\n                    </div>\n                </Offcanvas.Body>\n            </Offcanvas>\n        </div>\n    );\n}\n","export function showUserOptions(){\n    return {\n        type: 'USER_MENU/SHOW'\n    }\n}\nexport function hideUserOptions(){\n    return {\n        type: 'USER_MENU/HIDE'\n    }\n}","import React from 'react';\nimport LoginForm from '../login_form/LoginForm';\nimport './Header.scss';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n//import CurrentUser from 'components/header/CurrentUser'\nimport UserMenu from 'components/user_menu/UserMenu';\nimport { useSelector } from 'react-redux';\n\n\nexport default function Header() {\n    let userState = useSelector(state => state.UserState)\n\n    return (\n        <Container fluid className=\"header-container\">\n            <Row className=\"header\">\n                <Col xs={12} sm=\"auto\" className=\"logo\">\n                    <h3>Food <span className=\"x\" >x</span> Mood</h3>\n                </Col>\n                <Col xs={12} md={true} className=\"filler\"></Col>\n                <Col xs={12} md={'auto'} className=\"login\">\n                    {userState.isLoggedIn ? <UserMenu /> : <LoginForm/>}\n                </Col>\n            </Row>\n            \n        </Container>\n    );\n}\n","export function ViewActivity(filter){\n    return {\n        type: 'VIEW/ACTIVITY',\n        payload: {\n            activity: {\n                active: true,\n                filter\n            }\n        }\n    }\n}","import React from 'react';\nimport './Sidebar.scss';\nimport { useDispatch } from 'react-redux';\nimport { ViewActivity } from './common/state/ViewActions';\n\nexport default function Sidebar(props) {\n    let dispatch = useDispatch();\n    return (\n        <div className=\"sidebar-container\">\n            <div className=\"nav-group\">\n                <div className=\"nav-group-title\">\n                    <h5>Your Log</h5>\n                </div>\n                <div\n                    onClick={() => {\n                        dispatch(ViewActivity('all'))\n                    }}\n                    className=\"nav-item\">\n                    <a href=\"#\">All Activity</a>\n                </div>\n                <div\n                    onClick={() => {\n                        dispatch(ViewActivity('meals'))\n                    }}\n                    className=\"nav-item\">\n                    <a href=\"#\">Meals</a>\n                </div>\n                <div\n                    onClick={() => {\n                        dispatch(ViewActivity('health-checks'))\n                    }}\n                    className=\"nav-item\">\n                    <a href=\"#\">Wellness</a>\n                </div>\n                <div className=\"nav-item-catagory\"></div>\n            </div>\n            <div className=\"nav-group\">\n                <div className=\"nav-group-title\">\n                    <h5>Analysis</h5>\n                </div>\n                <div className=\"nav-item\">\n                    <a href=\"#\">Food Items</a>\n                </div>\n                <div className=\"nav-item\">\n                    <a href=\"#\">Symptoms</a>\n                </div>\n                <div className=\"nav-item-catagory\"></div>\n            </div>\n        </div>\n    );\n}\n","import React from 'react';\nimport './Pill.scss';\n\nexport default function Pill(props) {\n    return (\n        <div className=\"pill\">\n            <div className={`pill-primary ${props.color}`}>{props.text}</div>\n        </div>\n    );\n}\n","import axios from 'axios';\n\nexport const get = async (route) => {\n    console.log('api get: ' + route);\n    let response = await axios({\n        method: 'get',\n        url: `/api/${route}`\n    });\n    return response.data;\n};\n\nexport const post = async (route, data) => {\n    let response = await axios({\n        method: 'post',\n        url: `/api/${route}`,\n        data,\n    });\n    return response.data;\n};\n\nexport const put = async (route, data) => {\n    let response = await axios({\n        method: 'put',\n        url: `/api/${route}`,\n        data,\n    });\n    return response.data;\n};\n\nexport const deleteByID = async (route, _id) => {\n    let response = await axios({\n        method: 'delete',\n        url: `/api/${route}/${_id}`,\n    });\n    return response.data;\n};\n","import UserState from 'components/common/utils/userState'\n\nconst initialState = {...new UserState(), attemptingLogin: true}\n\nexport default function UserStateReducer(state = initialState, action){\n    switch (action.type){\n        case 'USERSTATE/SET':\n            return {...action.payload, attemptingLogin: false}\n        default: return {...state }\n    }\n}","const initialState = { data: {}, loading: true };\n\nexport default function ActivityReducer(state = initialState, action) {\n    switch (action.type) {\n        case 'ACTIVITY/SET_DATA':\n            return { ...action.payload }\n        case 'ACTIVITY/LOADING':\n            return { ...state, loading: true}\n        default:\n            return state;\n    }\n}\n","const initialState = {\n    show: false,\n    ingredients: [],\n    time: '',\n    mealType: '',\n    _id: '',\n    new: false,\n    edit: false,\n    timeString: '',\n    dateString: '',\n};\n\nexport default function MealFormReducer(state = initialState, action) {\n    let { payload } = action;\n    switch (action.type) {\n        case 'MEAL_FORM/EDIT':\n            return { ...initialState, ...payload };\n        case 'MEAL_FORM/NEW':\n            return { ...initialState, ...payload };\n        case 'MEAL_FORM/CHANGE':\n            return { ...state, ...payload };\n        case 'MEAL_FORM/CLOSE':\n            return { ...initialState };\n        case 'MEAL_FORM/DELETE_INGREDIENT':\n            let ingredients = state.ingredients.filter(\n                (ingredient) => ingredient !== payload\n            );\n            return {\n                ...state,\n                ingredients,\n            };\n        default:\n            return state;\n    }\n}\n","const initialState = {\n    show: false,\n    symptoms: [],\n    time: '',\n    mood: null,\n    _id: '',\n    new: false,\n    edit: false,\n    dateString: '',\n    timeString: '',\n};\n\nexport default function HealtCheckFormReducer(state = initialState, action) {\n    let { payload } = action;\n    switch (action.type) {\n        case 'HEALTH_CHECK_FORM/EDIT':\n            return { ...initialState, ...payload };\n        case 'HEALTH_CHECK_FORM/NEW':\n            return { ...initialState, ...payload };\n        case 'HEALTH_CHECK_FORM/DELETE_SYMPTOM':\n            let symptoms = state.symptoms.filter(\n                (symptom) => symptom !== payload\n            );\n            return { ...state, symptoms };\n        case 'HEALTH_CHECK_FORM/CHANGE':\n            return { ...state, ...payload };\n        case 'HEALTH_CHECK_FORM/CLOSE':\n            return { ...initialState };\n        default:\n            return state;\n    }\n}\n","const initialState = {\n    username: '',\n    password: '',\n    show: false,\n    invalidPassword: false,\n    invalidUsername: false,\n};\n\nexport default function LoginFormReducer(state = initialState, action) {\n    let payload = action.payload;\n    switch (action.type) {\n        case 'LOGIN_FORM/SET':\n            return { ...state, ...payload };\n        case 'LOGIN_FORM/SHOW':\n            return { ...state, show: true };\n        case 'LOGIN_FORM/RESET':\n            return { ...initialState };\n        default:\n            return state;\n    }\n}\n","const initialState = {\n    show: false\n};\n\nexport default function UserOptionsReducer(state = initialState, action) {\n    let payload = action.payload;\n    switch (action.type) {\n        case 'USER_MENU/SHOW':\n            console.log('showing')\n            return {...state, show: true};\n        case 'USER_MENU/HIDE':\n            console.log('hiding')\n            return {...state, show: false};\n        default:\n            return state;\n    }\n}\n","const initialState = {\n    activity: {\n        active: true,\n        filter: 'all'\n    }\n};\n\n\nexport default function ViewReducer(state = initialState, action) {\n    let payload = action.payload\n    switch (action.type) {\n        case 'VIEW/ACTIVITY':\n            return { ...initialState, ...payload };\n        default:\n            return state;\n    }\n}\n","import { Password } from 'components/common/utils/formValidation';\nconst intitalInputState = { value: '', valid: false, touched: false, error: 'Required Field' };\nconst initialState = {\n    show: false,\n    firstName: { ...intitalInputState },\n    lastName: { ...intitalInputState },\n    email: { ...intitalInputState, valid: true },\n    username: { ...intitalInputState },\n    password: { ...intitalInputState },\n    passwordVerify: { ...intitalInputState },\n};\n\nexport default function RegisterFormReducer(state = initialState, action) {\n    let payload = action.payload;\n    switch (action.type) {\n        case 'REGISTER_FORM/SHOW':\n            return { ...state, show: true };\n        case 'REGISTER_FORM/HIDE':\n            return { ...state, show: false };\n        case 'REGISTER_FORM/SET':\n            return { ...state, ...payload };\n        case 'REGISTER_FORM/VALIDATE':\n            return { ...state, ...payload };\n        case 'REGISTER_FORM/TOUCH_ALL':\n            let outputState = {...state}\n            let response = Object.keys(state).forEach((key)=>{\n                if(outputState[key].hasOwnProperty('touched')){\n                    outputState[key].touched = true;\n                }\n            })\n            return outputState\n        default:\n            return { ...state };\n    }\n}\n","import {combineReducers} from 'redux'\nimport UserStateReducer from 'components/common/state/UserStateReducer'\nimport ActivityReducer from 'components/activity/state/ActivityReducer.js'\nimport MealFormReducer from 'components/meal_form/state/MealFormReducer.js'\nimport HealthCheckFormReducer from 'components/health_check_form/state/healthCheckFormReducer'\nimport LoginFormReducer from 'components/login_form/state/loginFormReducer'\nimport UserMenuReducer from 'components/user_menu/state/UserMenuReducer'\nimport ViewReducer from './ViewReducer'\nimport RegisterFormReducer from 'components/register_form/state/registerFormReducer'\n\nconst rootReducer = combineReducers({\n    UserState: UserStateReducer,\n    activity: ActivityReducer,\n    mealForm: MealFormReducer,\n    healthCheckForm: HealthCheckFormReducer,\n    loginForm: LoginFormReducer,\n    userMenu: UserMenuReducer,\n    view: ViewReducer,\n    registerForm: RegisterFormReducer\n})\n\nexport default rootReducer","import { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './RootReducer.js';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst middleWare = compose(applyMiddleware(thunk));\n\nconst store = createStore(rootReducer, composeWithDevTools(middleWare));\n\nexport default store;\n","import dayjs from 'dayjs';\nimport customParseFormat from 'dayjs/plugin/customParseFormat';\ndayjs().format();\ndayjs.extend(customParseFormat);\n\nexport function stringToUnixTime(date, time) {\n    return dayjs(`${date} ${time}`, 'YYYY-MM-DD HH:mm').unix();\n}\nexport function unixToDateString(unixTime = dayjs().unix()) {\n    return dayjs.unix(unixTime).format('YYYY-MM-DD');\n}\nexport function unixToTimeString(unixTime = dayjs().unix()) {\n    return dayjs.unix(unixTime).format('HH:mm');\n}\n","import store from 'components/common/state/Store';\nimport { unixToDateString, unixToTimeString } from 'components/common/utils/DateHandler';\n\nexport function editMeal(_id) {\n    let currentEntry = store.getState().activity.data[_id];\n    return {\n        type: 'MEAL_FORM/EDIT',\n\n        payload: {\n            edit: true,\n            show: true,\n            ...currentEntry,\n            timeString: unixToTimeString(currentEntry.time),\n            dateString: unixToDateString(currentEntry.time),\n        },\n    };\n}\n\nexport function formChange(payload) {\n    return {\n        type: 'MEAL_FORM/CHANGE',\n        payload,\n    };\n}\n\nexport function deleteIngredient(payload) {\n    return {\n        type: 'MEAL_FORM/DELETE_INGREDIENT',\n        payload,\n    };\n}\n\nexport function newMeal() {\n    console.log('new meal action');\n    return {\n        type: 'MEAL_FORM/NEW',\n        payload: {\n            new: true,\n            show: true,\n            timeString: unixToTimeString(),\n            dateString: unixToDateString(),\n        },\n    };\n}\n\nexport function closeMealForm() {\n    return {\n        type: 'MEAL_FORM/CLOSE',\n    };\n}\n","import * as API from 'components/common/utils/api.js';\n\n\nfunction loadingActivity(){\n    return {\n        type: 'ACTIVITY/LOADING'\n    }\n}\n\nexport  function setActivity(filter) {\n    return async (dispatch, getState) => {\n        try {\n            dispatch(loadingActivity())\n            let filter = getState().view.activity.filter\n            let response = await API.get(`activity/${filter}`);\n            let data = Object.fromEntries(response.map((entry)=>{ //CONVERTS ARRAY TO OBJECT KEYED BY _ID\n                let { _id } = entry\n                return [_id, entry]\n            }))\n            dispatch({type: 'ACTIVITY/SET_DATA', payload: {data, loading: false}})\n        } catch (error) {\n            console.log(error)\n        }\n    };\n}","import store from 'components/common/state/Store';\nimport {\n    unixToDateString,\n    unixToTimeString,\n} from 'components/common/utils/DateHandler';\n\nexport function editHealthCheck(id) {\n    let currentEntry = store.getState().activity.data[id];\n    return {\n        type: 'HEALTH_CHECK_FORM/EDIT',\n\n        payload: {\n            edit: true,\n            show: true,\n            ...currentEntry,\n            timeString: unixToTimeString(currentEntry.time),\n            dateString: unixToDateString(currentEntry.time),\n        },\n    };\n}\n\nexport function formChange(payload) {\n    return {\n        type: 'HEALTH_CHECK_FORM/CHANGE',\n        payload,\n    };\n}\n\nexport function deleteSymptom(payload) {\n    return {\n        type: 'HEALTH_CHECK_FORM/DELETE_SYMPTOM',\n        payload,\n    };\n}\n\nexport function newHealthCheck() {\n    console.log('new meal action');\n    return {\n        type: 'HEALTH_CHECK_FORM/NEW',\n        payload: {\n            new: true,\n            show: true,\n            timeString: unixToTimeString(),\n            dateString: unixToDateString(),\n        },\n    };\n}\nexport function closeHealthCheckForm() {\n    return {\n        type: 'HEALTH_CHECK_FORM/CLOSE',\n    };\n}\n","import React from 'react';\nimport * as API from '../common/utils/api.js';\nimport { useDispatch } from 'react-redux';\nimport { editMeal } from 'components/meal_form/state/MealFormActions';\nimport { setActivity } from 'components/activity/state/ActivityActions';\nimport { editHealthCheck } from 'components/health_check_form/state/healthCheckFormActions.js';\n\nexport default function ManageEntry(props) {\n    const dispatch = useDispatch();\n    let { _id, type } = props.entry;\n    let endpoint;\n    if (type === 'meal') endpoint = 'meals';\n    if (type === 'healthCheck') endpoint = 'health-checks';\n\n    async function handleDelete(e) {\n        e.preventDefault();\n        try {\n            await API.deleteByID(`activity/${endpoint}`, _id);\n            dispatch(setActivity());\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    function handleEdit(e) {\n        e.preventDefault();\n        if (type === 'meal') dispatch(editMeal(_id));\n        if (type === 'healthCheck') dispatch(editHealthCheck(_id))\n    }\n\n    return (\n        <div>\n            <a onClick={handleDelete} href=\"#\">\n                <i style={{ marginLeft: '10px' }} className=\"fas fa-times\"></i>\n            </a>\n            <a onClick={handleEdit} href=\"#\">\n                <i\n                    style={{ marginLeft: '10px' }}\n                    className=\"fas fa-pencil-alt\"></i>\n            </a>\n        </div>\n    );\n};\n","import React from 'react';\nimport dayjs from 'dayjs';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Pill from '../Pill.jsx';\nimport ManageEntry from './ManageEntry';\nimport './Entry.scss';\n\nexport default function MealEntry(props) {\n    let { entry } = props;\n    let { ingredients, mealType, time } = entry;\n\n    function getEmoji(type) {\n        return {\n            Breakfast: '🍳',\n            Lunch: '🥪',\n            Dessert: '🧁',\n            Snack: '🍇',\n            Dinner: '🍴',\n            Drink: '🥤',\n            HealthCheck: '❤️',\n        }[type];\n    }\n\n    return (\n        <Container className=\"entry-container\" fluid>\n            <Row>\n                <Col xs=\"auto\" className=\"time-container\">\n                    {dayjs.unix(time).format('h:mm A')}\n                </Col>\n                <Col xs={true} className=\"entry-data-container meal-entry-container\">\n                    <Row>\n                        <Col>\n                            <Row className=\"entry-heading\">\n                                <Col>\n                                    <h5>\n                                        <span className=\"emoji\">{getEmoji(mealType)}</span>\n                                        {mealType}\n                                    </h5>\n                                </Col>\n                            </Row>\n                            <Row className=\"entry-section\">\n                                <Col xs=\"auto\">\n                                    <div className=\"section-title\">Ingredients:</div>\n                                </Col>\n                                <Col xs={true}>\n                                    {ingredients.map((ingredient, index) => {\n                                        return (\n                                            <Pill key={index} text={ingredient.name} color=\"red\" />\n                                        );\n                                    })}\n                                </Col>\n                            </Row>\n                        </Col>\n                        <Col className=\"manage-entry-col\" xs=\"auto\">\n                            <ManageEntry entry={entry} />\n                        </Col>\n                    </Row>\n                </Col>\n            </Row>\n        </Container>\n    );\n}\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Pill from '../Pill.jsx';\nimport './Entry.scss';\nimport ManageEntry from './ManageEntry.jsx';\nimport dayjs from 'dayjs';\n\nexport default function HealthCheckEntry(props) {\n    let { entry } = props;\n    let { symptoms, type, time } = entry;\n    return (\n        <Container className=\"entry-container\" fluid>\n            <Row>\n                <Col xs=\"auto\" className=\"time-container\">\n                    {dayjs.unix(time).format('h:mm A')}\n                </Col>\n                <Col xs={true} className=\"entry-data-container health-check-entry-container\">\n                    <Row>\n                        <Col>\n                            <Row className=\"entry-heading\">\n                                <Col>\n                                    <h5>\n                                        <span className=\"emoji\">❤️</span>Wellness Check\n                                    </h5>\n                                </Col>\n                            </Row>\n                            <Row className=\"entry-section\">\n                                <Col xs=\"auto\">\n                                    <div className=\"section-title\">Symptoms:</div>\n                                </Col>\n                                <Col xs={true}>\n                                    {symptoms.map((symptom, index) => {\n                                        return (\n                                            <Pill\n                                                key={index}\n                                                text={symptom.description}\n                                                color=\"green\"\n                                            />\n                                        );\n                                    })}\n                                </Col>\n                            </Row>\n                        </Col>\n                        <Col xs=\"auto\" className=\"manage-entry-col\">\n                            <ManageEntry entry={entry} />\n                        </Col>\n                    </Row>\n                </Col>\n            </Row>\n        </Container>\n    );\n}\n","import React from 'react';\nimport MealEntry from './MealEntry.jsx';\nimport HealthCheckEntry from './HealthCheckEntry.jsx';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport './DateBlock.scss';\n\nexport default function DateBlock(props) {\n    let { entries, index } = props;\n    return (\n        <div>\n            {index > 0 && <hr />}\n            <Container fluid className=\"date-block-container\">\n                <Row>\n                    <Col xs={1} className=\"date-col\">\n                        <div className=\"date-container\">\n                            <div>{entries[0].date}</div>\n                        </div>\n                    </Col>\n                    <Col>\n                        {entries.map((entry) => {\n                            if (entry.type === 'meal')\n                                return <MealEntry key={entry._id} entry={entry} />;\n                            if (entry.type === 'healthCheck')\n                                return <HealthCheckEntry key={entry._id} entry={entry} />;\n                            return null\n                        })}\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    );\n}\n","import React from 'react';\nimport './AddButtonsContainer.scss';\nimport { useDispatch } from 'react-redux';\nimport { newMeal } from 'components/meal_form/state/MealFormActions';\nimport Button from 'react-bootstrap/Button';\nimport { newHealthCheck } from 'components/health_check_form/state/healthCheckFormActions';\n\nexport default function AddButtonsContainer(props) {\n    const dispatch = useDispatch();\n    return (\n        <div className=\"add-buttons-container\">\n            <Button\n                onClick={() => {\n                    dispatch(newMeal());\n                }}\n                className=\"button-light-brown\"\n                variant=\"default\">\n                <i className=\"fas fa-plus\"></i> Add Meal\n            </Button>\n            <Button\n                onClick={() => {\n                    dispatch(newHealthCheck());\n                }}\n                className=\"button-light-brown\"\n                variant=\"default\">\n                <i className=\"fas fa-plus\"></i> Add Wellness Check\n            </Button>\n        </div>\n    );\n}\n","import React, { useState } from 'react';\nimport _ from 'lodash';\nimport { AsyncTypeahead } from 'react-bootstrap-typeahead';\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\nimport * as API from './utils/api.js';\n\nexport default function InputAutoComplete(props) {\n    let {\n        defaultInputValue,\n        submit,\n        placeholder,\n        apiEndpoint,\n        allowNewItems,\n        suggestions,\n        clearOnSubmit\n    } = props;\n    \n    let [isLoading, setIsLoading] = useState(false);\n    let [options, setOptions] = useState([]);\n    let [value, setValue] = useState([]);\n\n    async function handleSearch(query) {\n        if (suggestions) { //if suggestions prop is supplied use supplied array\n            setOptions(suggestions);\n        } else { //if no suggestions prop is supplied, query api for suggestions\n            setIsLoading(true);\n            query = _.startCase(_.lowerCase(query));\n            let url = `suggestions/${apiEndpoint}/${query}`;\n            setOptions(await API.get(url))\n            setIsLoading(false);\n        }\n    }\n\n    function submitHandler(value) {\n        if (value.length <= 0) return;\n        let outputValue = value[0];\n        let newItem = false;\n        if (typeof outputValue === 'object') {\n            outputValue = outputValue.label;\n            newItem = true;\n        }\n        outputValue = _.startCase(_.lowerCase(outputValue));\n        if (allowNewItems && newItem) {\n            postValue(outputValue);\n        }\n        submit(outputValue);\n        if(clearOnSubmit) setValue(['']);\n    }\n\n    async function postValue(value) {\n        await API.post(apiEndpoint, { value });\n    }\n\n    return (\n        <AsyncTypeahead\n            selectHintOnEnter={true}\n            id=\"autocomplete-input\"\n            minLength={1}\n            allowNew={allowNewItems}\n            delay={100}\n            newSelectionPrefix=\"Add a new item: \"\n            isLoading={isLoading}\n            options={options}\n            selected={value}\n            placeholder={placeholder}\n            onChange={(value) => {\n                setValue(value);\n                submitHandler(value);\n            }}\n            onSearch={handleSearch}\n            defaultInputValue={defaultInputValue ? defaultInputValue : ''}\n        />\n    );\n}\n","import React from 'react';\nimport './IngredientPill.scss';\n\nexport default function IngredientPill(props) {\n    let { onClick } = props;\n\n    return (\n        <div className=\"ingredient-pill\">\n            <div\n                onClick={onClick}\n                className=\"pill-primary\">\n                {props.primaryText}\n            </div>\n        </div>\n    );\n}\n","import React from 'react';\nimport { useState } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { useDispatch, useSelector } from 'react-redux';\nimport _ from 'lodash';\n\nimport InputAutoComplete from 'components/common/InputAutoComplete';\nimport { closeMealForm, deleteIngredient, formChange } from './state/MealFormActions';\nimport Pill from 'components/IngredientPill';\nimport * as API from 'components/common/utils/api';\nimport { stringToUnixTime } from 'components/common/utils/DateHandler';\nimport './MealForm.scss';\nimport { setActivity } from 'components/activity/state/ActivityActions';\n\nexport default function MealForm(props) {\n    let [processing, setProcessing] = useState(false);\n    let state = useSelector((state) => state.mealForm);\n    const dispatch = useDispatch();\n\n    async function handleSubmit() {\n        try {\n            setProcessing(true);\n            let unixTime = stringToUnixTime(state.dateString, state.timeString);\n            let newMeal = {\n                ingredients: state.ingredients.map((ingredient) => ingredient.name),\n                type: state.mealType,\n                time: unixTime,\n            };\n            if (state.new) await API.post('activity/meals', newMeal);\n            if (state.edit) await API.put('activity/meals/' + state._id, newMeal);\n            setProcessing(false);\n            handleClose();\n            dispatch(setActivity());\n        } catch (error) {\n            console.log(error);\n            setProcessing(false);\n            handleClose();\n        }\n    }\n    async function handleClose() {\n        dispatch(closeMealForm());\n    }\n\n    function addIngredient(newIngredient) {\n        newIngredient = _.startCase(_.lowerCase(newIngredient));\n        if (state.ingredients.map((ingredient) => ingredient.name).includes(newIngredient)) return;\n        dispatch(\n            formChange({\n                ingredients: [...state.ingredients, { name: newIngredient }],\n            })\n        );\n    }\n\n    return (\n        <Modal show={state.show} onHide={handleClose}>\n            <Modal.Header closeButton>\n                {state.edit && <Modal.Title>Edit Meal</Modal.Title>}\n                {state.new && <Modal.Title>Post New Meal</Modal.Title>}\n            </Modal.Header>\n            <Modal.Body>\n                <div className=\"meal-form-container\">\n                    <Row>\n                        <Col xs={12}>\n                            <InputAutoComplete\n                                submit={(value) => {\n                                    dispatch(formChange({ mealType: value }));\n                                }}\n                                suggestions={[\n                                    'Breakfast',\n                                    'Lunch',\n                                    'Dinner',\n                                    'Snack',\n                                    'Dessert',\n                                    'Drink',\n                                ]}\n                                defaultInputValue={state.mealType}\n                                placeholder=\"Meal Type (ie: Breakfast, Lunch, Dinner)\"\n                            />\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col xs={6}>\n                            <Form.Control\n                                type=\"date\"\n                                value={state.dateString}\n                                onChange={(e) => {\n                                    dispatch(\n                                        formChange({\n                                            dateString: e.target.value,\n                                        })\n                                    );\n                                }}\n                            />\n                        </Col>\n                        <Col xs={6}>\n                            <Form.Control\n                                type=\"time\"\n                                value={state.timeString}\n                                onChange={(e) => {\n                                    dispatch(\n                                        formChange({\n                                            timeString: e.target.value,\n                                        })\n                                    );\n                                }}\n                            />\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <InputAutoComplete\n                                submit={addIngredient}\n                                apiEndpoint=\"ingredients\"\n                                clearOnSubmit\n                                placeholder=\"Add Ingredients One at a Time\"\n                            />\n                        </Col>\n                    </Row>\n                    <div className=\"ingredient-list\">\n                        {state.ingredients.map((ingredient) => {\n                            return (\n                                <Pill\n                                    onClick={() => {\n                                        dispatch(deleteIngredient(ingredient));\n                                    }}\n                                    key={ingredient.id}\n                                    primaryText={ingredient.name}\n                                />\n                            );\n                        })}\n                    </div>\n                </div>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button  variant=\"default\" onClick={handleClose}>\n                    Cancel\n                </Button>\n                {state.new && (\n                    <Button\n                        className=\"button-light-green\"\n                        disabled={processing}\n                        variant=\"default\"\n                        onClick={handleSubmit}>\n                        {processing ? 'Posting' : 'Post Meal'}\n                    </Button>\n                )}\n                {state.edit && (\n                    <Button\n                        className=\"button-light-green\"\n                        disabled={processing}\n                        variant=\"default\"\n                        onClick={handleSubmit}>\n                        {processing ? 'Saving' : 'Save Changes'}\n                    </Button>\n                )}\n            </Modal.Footer>\n        </Modal>\n    );\n}\n","import dayjs from 'dayjs';\nimport isYesterday from 'dayjs/plugin/isYesterday';\nimport isToday from 'dayjs/plugin/isToday';\nimport customParseFormat from 'dayjs/plugin/customParseFormat';\ndayjs().format();\ndayjs.extend(isYesterday);\ndayjs.extend(isToday);\ndayjs.extend(customParseFormat);\n\nfunction unixTimeToDate(time) {\n    let date = dayjs.unix(time);\n    if (date.isYesterday()) return 'Yesterday';\n    if (date.isToday()) return 'Today';\n    let oneWeekAgo = dayjs().subtract(1, 'week');\n    if (date.isAfter(oneWeekAgo)) {\n        return date.format('dddd');\n    }\n    return date.format('MMM DD');\n}\n\nfunction copyObjToArray(dataObject) {\n    return Object.entries(dataObject).map(([key, val]) => {\n        return { ...val }; //spread operator prevents state mutation by creating shallow copy\n    });\n}\n\nexport const build = (activityEntriesObj) => {\n    let activityEntriesArrSorted = copyObjToArray(activityEntriesObj).sort((a, b) => b.time - a.time);\n    return activityEntriesArrSorted.reduce((output, currEntry, index, currArray) => {\n        currEntry.date = unixTimeToDate(currEntry.time);\n        if (index === 0) {\n            output.push([currEntry]);\n            return output;\n        }\n        let lastEntry = currArray[index - 1];\n        if (lastEntry.date === currEntry.date) {\n            output[output.length - 1].unshift(currEntry);\n            return output;\n        }\n        output.push([currEntry]);\n        return output;\n    }, []);\n};\n\n//OLD HARD TO READ CODE\n\n// export function create(dataObject) {\n//     console.log(dataObject)\n//     let dataArray = toSortedArray(dataObject)\n//     return dataArray.reduce((acc, currentEntry) => {\n//         currentEntry.date = toDate(currentEntry.time);\n//         let lastSubArray = acc[acc.length - 1];\n//         if (!lastSubArray) return [[currentEntry]];\n//         let lastEntry = lastSubArray[lastSubArray.length - 1];\n//         if (lastEntry.date === currentEntry.date) {\n//             acc[acc.length - 1].unshift(currentEntry);\n//             return acc;\n//         }\n//         acc.push([currentEntry]);\n//         return acc;\n//     }, []);\n// }\n","import React, { useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport _ from 'lodash';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { closeHealthCheckForm, formChange, deleteSymptom } from './state/healthCheckFormActions';\nimport InputAutoComplete from 'components/common/InputAutoComplete';\nimport Pill from 'components/IngredientPill';\nimport * as API from 'components/common/utils/api';\nimport { stringToUnixTime } from 'components/common/utils/DateHandler';\nimport './HealthCheckForm.scss';\nimport { setActivity } from 'components/activity/state/ActivityActions';\n\nexport default function HealthCheckForm() {\n    let [processing, setProcessing] = useState(false);\n    let state = useSelector((state) => state.healthCheckForm);\n    let dispatch = useDispatch();\n\n    function handleClose() {\n        dispatch(closeHealthCheckForm());\n    }\n    function handleMoodSelect(val) {\n        dispatch(\n            formChange({\n                mood: val,\n            })\n        );\n    }\n    function addSymptom(newSymptom) {\n        newSymptom = _.startCase(_.lowerCase(newSymptom));\n        console.log(state.symptoms);\n        if (state.symptoms.map((symptom) => symptom.description).includes(newSymptom)) return;\n        dispatch(\n            formChange({\n                symptoms: [...state.symptoms, { description: newSymptom }],\n            })\n        );\n    }\n    async function handleSubmit() {\n        try {\n            setProcessing(true);\n            let unixTime = stringToUnixTime(state.dateString, state.timeString);\n            let newHealthCheck = {\n                symptoms: state.symptoms.map((symptom) => symptom.description),\n                mood: state.mood,\n                time: unixTime,\n            };\n            if (state.new) await API.post('activity/health-checks', newHealthCheck);\n            if (state.edit) await API.put('activity/health-checks/' + state._id, newHealthCheck);\n            setProcessing(false);\n            handleClose();\n            dispatch(setActivity());\n        } catch (error) {\n            console.log(error);\n            setProcessing(false);\n            handleClose();\n        }\n    }\n\n    return (\n        <Modal show={state.show} onHide={handleClose}>\n            <Modal.Header closeButton>\n                {state.edit && <Modal.Title>Edit Wellness Check</Modal.Title>}\n                {state.new && <Modal.Title>Post New Wellness Check</Modal.Title>}\n            </Modal.Header>\n            <Modal.Body>\n                <div className=\"health-check-form-container\">\n                    <Row>\n                        <Col xs={6}>\n                            <Form.Control\n                                type=\"date\"\n                                name=\"date\"\n                                value={state.dateString}\n                                onChange={(e) => {\n                                    dispatch(\n                                        formChange({\n                                            dateString: e.target.value,\n                                        })\n                                    );\n                                }}\n                            />\n                        </Col>\n                        <Col xs={6}>\n                            <Form.Control\n                                type=\"time\"\n                                name=\"time\"\n                                value={state.timeString}\n                                onChange={(e) => {\n                                    dispatch(\n                                        formChange({\n                                            timeString: e.target.value,\n                                        })\n                                    );\n                                }}\n                            />\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col xs={12}>\n                            <ButtonGroup style={{ display: 'flex' }}>\n                                <Button\n                                    onClick={() => handleMoodSelect(1)}\n                                    className=\"mood-button\"\n                                    variant={state.mood === 1 ? 'secondary' : 'light'}>\n                                    Grumpy\n                                </Button>\n                                <Button\n                                    onClick={() => handleMoodSelect(2)}\n                                    className=\"mood-button\"\n                                    variant={state.mood === 2 ? 'secondary' : 'light'}>\n                                    Neutral\n                                </Button>\n                                <Button\n                                    onClick={() => handleMoodSelect(3)}\n                                    className=\"mood-button\"\n                                    variant={state.mood === 3 ? 'secondary' : 'light'}>\n                                    Upbeat\n                                </Button>\n                            </ButtonGroup>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <InputAutoComplete\n                                submit={addSymptom}\n                                clearOnSubmit\n                                placeholder=\"Add Symptoms One at a Time\"\n                                apiEndpoint=\"symptoms\"\n                            />\n                        </Col>\n                    </Row>\n                    <div className=\"symptom-list\">\n                        {state.symptoms.map((symptom, index) => {\n                            return (\n                                <Pill\n                                    onClick={() => {\n                                        dispatch(deleteSymptom(symptom));\n                                    }}\n                                    index={index}\n                                    key={index}\n                                    primaryText={symptom.description}\n                                />\n                            );\n                        })}\n                    </div>\n                </div>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"default\" onClick={handleClose}>\n                    Cancel\n                </Button>\n                {state.new && (\n                    <Button\n                        className=\"button-light-green\"\n                        disabled={processing}\n                        variant=\"default\"\n                        onClick={handleSubmit}>\n                        {processing ? 'Posting' : 'Post Health Check'}\n                    </Button>\n                )}\n                {state.edit && (\n                    <Button\n                        className=\"button-light-green\"\n                        disabled={processing}\n                        variant=\"default\"\n                        onClick={handleSubmit}>\n                        {processing ? 'Saving' : 'Save Changes'}\n                    </Button>\n                )}\n            </Modal.Footer>\n        </Modal>\n    );\n}\n","import React, { useEffect } from 'react';\nimport './Activity.scss';\nimport DateBlock from './DateBlock.jsx';\nimport AddButtonsContainer from 'components/activity/AddButtonsContainer';\nimport MealForm from 'components/meal_form/MealForm';\nimport * as FeedArray from './utils/feedArray';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setActivity } from 'components/activity/state/ActivityActions';\nimport HealthCheckForm from 'components/health_check_form/HealthCheckForm';\nimport  Spinner from 'react-bootstrap/Spinner';\n\nexport default function Activity(props) {\n    const dispatch = useDispatch();\n    let state = useSelector((state) => state);\n    let loaded = !state.activity.loading\n    \n    useEffect( () => {\n        dispatch(setActivity());\n    }, [state.view]);\n    \n    return (\n        <div className=\"activity-container\">\n            {loaded ? <div>\n                <AddButtonsContainer />\n                <MealForm />\n                <HealthCheckForm />\n                <hr />\n                {FeedArray.build(state.activity.data).map((dateBlock, index) => {\n                    return <DateBlock key={index} index={index} entries={dateBlock} />;\n                })}\n            </div> : <Spinner animation='border' className=\"loading-spinner\"/>}\n        </div>\n    );\n}\n","import React from 'react';\nimport Sidebar from './Sidebar';\nimport Activity from './activity/Activity'\nimport { useSelector } from 'react-redux';\n\nexport default function Dashboard(props){\n    let state = useSelector(state => state.view)\n\n    return (\n        <div style={{position: 'relative'}}>\n            <Sidebar />\n            {(state.activity.active) && <Activity />}\n\n        </div>  \n    )\n}","import React, { useEffect } from 'react';\nimport Header from 'components/header/Header';\nimport Dashboard from './Dashboard';\nimport {useSelector, useDispatch} from 'react-redux'\nimport {attemptLogIn } from './common/state/UserStateActions.js'\n\nfunction App() {\n    let userState = useSelector(state => state.UserState)\n    const dispatch = useDispatch()\n\n\n    useEffect(() => dispatch(attemptLogIn()), []);\n\n    return (\n        <div>\n            <Header />\n\n            {userState.isLoggedIn && (\n                <Dashboard/>\n            )}\n        </div>\n    );\n}\n\nexport default App;\n","import store from 'components/common/state/Store.js';\nimport axios from 'axios';\nimport { attemptLogIn } from 'components/common/state/UserStateActions';\n\nfunction getToken() {\n    return store.getState().UserState.accessToken;\n}\n\nlet dispatch = store.dispatch;\n\nexport const configAxios = async () => {\n    axios.interceptors.request.use(\n        async (config) => {\n            console.log('axios: adding auth headers')\n            if (getToken().expired()) await dispatch(attemptLogIn());\n            config.headers = {\n                Authorization: `Bearer ${getToken().value}`,\n            };\n            return config;\n        },\n        (err) => {\n            console.log('axios interceptor err')\n            throw new Error(err);\n        }\n    );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './styles/main.scss';\nimport { Provider } from 'react-redux';\nimport store from 'components/common/state/Store.js';\nimport { configAxios } from 'components/common/utils/axiosConfig.js';\n\nconfigAxios();\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}