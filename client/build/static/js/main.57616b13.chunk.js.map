{"version":3,"sources":["components/common/utils/accessToken.js","components/common/utils/userState.js","components/common/state/UserStateReducer.js","components/activity/state/ActivityReducer.js","components/meal_form/state/MealFormReducer.js","components/health_check_form/state/healthCheckFormReducer.js","components/login_form/state/loginFormReducer.js","components/user_menu/state/UserMenuReducer.js","components/common/state/ViewReducer.js","components/common/utils/formValidation.js","components/register_form/state/registerFormReducer.js","components/common/state/RootReducer.js","components/common/state/Store.js","components/common/utils/api.js","components/common/state/UserStateActions.js","components/login_form/state/loginFormActions.js","components/register_form/state/registerFormActions.js","components/register_form/state/RegisterInput.jsx","components/register_form/registerForm.jsx","components/login_form/LoginForm.jsx","components/user_menu/UserMenu.jsx","components/user_menu/state/UserMenuActions.js","components/header/Header.jsx","components/common/state/ViewActions.js","components/Sidebar.jsx","components/Pill.jsx","components/common/utils/DateHandler.js","components/meal_form/state/MealFormActions.js","components/activity/state/ActivityActions.js","components/health_check_form/state/healthCheckFormActions.js","components/activity/ManageEntry.jsx","components/activity/MealEntry.jsx","components/activity/HealthCheckEntry.jsx","components/activity/DateBlock.jsx","components/activity/AddButtonsContainer.jsx","components/common/InputAutoComplete.jsx","components/IngredientPill.jsx","components/meal_form/MealForm.jsx","components/activity/utils/feedArray.js","components/health_check_form/HealthCheckForm.jsx","components/activity/Activity.jsx","components/Dashboard.jsx","components/App.jsx","index.js"],"names":["AccessToken","value","jwt_decode","exp","username","firstName","lastName","this","Math","ceil","Date","now","getCurrSeconds","refresh","a","fetch","response","status","json","error","Error","token","UserState","expired","accessToken","isLoggedIn","initialState","data","loading","show","ingredients","time","mealType","_id","new","edit","timeString","dateString","symptoms","mood","password","invalidPassword","invalidUsername","activity","active","filter","errorMessage","test","valid","name","intitalInputState","touched","email","passwordVerify","middleWare","rootReducer","combineReducers","state","action","type","payload","mealForm","ingredient","healthCheckForm","symptom","loginForm","userMenu","console","log","view","registerForm","outputState","Object","keys","forEach","key","hasOwnProperty","devTools","window","__REDUX_DEVTOOLS_EXTENSION__","compose","applyMiddleware","thunk","store","createStore","dispatch","getState","getHeaders","Authorization","get","route","attemptLogIn","method","headers","post","body","JSON","stringify","put","deleteByID","setUserState","setLoginForm","setRegisterForm","validateRegisterForm","RegisterInput","props","validationCallback","placeholder","capitalize","validated","trimWhitespace","lowercase","handleBlur","onBlur","handleChange","onChange","Form","Group","Control","isInvalid","isValid","e","target","_","trim","toLower","split","reduce","acc","substring","upperFirst","Feedback","RegisterForm","useState","processing","setProcessing","useDispatch","useSelector","handleSubmit","preventDefault","registerPayload","Modal","onHide","onSubmit","noValidate","Header","Title","Body","className","Row","Col","xs","validate","Footer","Button","variant","onClick","disabled","Login","message","md","UserMenu","loggingOut","setLoggingOut","style","marginLeft","Offcanvas","placement","closeButton","userState","Container","fluid","sm","color","ViewActivity","Sidebar","href","Pill","primaryColor","primaryText","secondaryText","secondaryColor","stringToUnixTime","date","dayjs","unix","unixToDateString","unixTime","format","unixToTimeString","formChange","setActivity","API","fromEntries","map","entry","ManageEntry","endpoint","currentEntry","editMeal","id","editHealthCheck","extend","customParseFormat","MealEntry","index","description","1","2","3","severity","DateBlock","entries","HealthCheckEntry","AddButtonsContainer","InputAutoComplete","defaultInputValue","submit","apiEndpoint","allowNewItems","suggestions","clearOnSubmit","isLoading","setIsLoading","options","setOptions","setValue","query","startCase","lowerCase","url","submitHandler","length","outputValue","newItem","label","postValue","selectHintOnEnter","minLength","allowNew","delay","newSelectionPrefix","selected","onSearch","IngredientPill","MealForm","newMeal","handleClose","newIngredient","includes","create","dataObject","val","sort","b","toSortedArray","isYesterday","isToday","oneWeekAgo","subtract","isAfter","toDate","lastSubArray","unshift","push","HealthCheckForm","handleMoodSelect","newHealthCheck","ButtonGroup","display","newSymptom","Activity","useEffect","activityFeed","FeedArray","dateBlock","Dashboard","position","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.57616b13.chunk.js","sourcesContent":["import jwt_decode from 'jwt-decode';\n\nexport class AccessToken {\n    constructor(value){\n        let {exp, username, firstName, lastName} = jwt_decode(value)\n        this.value = value;\n        this.exp = exp\n        this.username = username\n        this.firstName = firstName\n        this.lastName = lastName\n    }\n    getCurrSeconds() {\n        return Math.ceil(Date.now() / 1000);\n    }\n    expired(){\n        if(this.exp < this.getCurrSeconds() + 10){\n            return true;\n        }\n        return false\n    }\n}\n\nexport async function refresh() {\n    let response = await fetch('/access');\n    if (response.status !== 200) {\n        let error = await response.json();\n        throw new Error(error);\n    }\n    let token = await response.json();\n    return new AccessToken(token)\n}\n\nexport function decode(token) {\n    let { username, firstName, lastName } = jwt_decode(token);\n    console.log(firstName)\n    return {\n        username,\n        firstName,\n        lastName,\n        accessToken: token,\n        isLoggedIn: true,\n    };\n}\n","export default class UserState {\n    constructor(token) {\n        if (token && !token.expired()) {\n            this.accessToken = token;\n            let { username, firstName, lastName } = token;\n            this.username = username;\n            this.firstName = firstName;\n            this.lastName = lastName;\n            this.isLoggedIn = true\n        } else {\n            this.accessToken = null\n            this.username = '';\n            this.firstName = '';\n            this.lastName = '';\n            this.isLoggedIn = false\n        }\n    }\n}\n","import UserState from 'components/common/utils/userState'\n\nconst initialState = new UserState()\n\nexport default function UserStateReducer(state = initialState, action){\n    switch (action.type){\n        case 'USERSTATE/SET':\n            return action.payload\n        default: return state\n    }\n}","const initialState = { data: {}, loading: false };\n\nexport default function ActivityReducer(state = initialState, action) {\n    switch (action.type) {\n        case 'ACTIVITY/SET_DATA':\n            return { ...action.payload }\n        case 'ACTIVITY/LOADING':\n            return { ...state, loading: true}\n        default:\n            return state;\n    }\n}\n","const initialState = {\n    show: false,\n    ingredients: [],\n    time: '',\n    mealType: '',\n    _id: '',\n    new: false,\n    edit: false,\n    timeString: '',\n    dateString: '',\n};\n\nexport default function MealFormReducer(state = initialState, action) {\n    let { payload } = action;\n    switch (action.type) {\n        case 'MEAL_FORM/EDIT':\n            return { ...initialState, ...payload };\n        case 'MEAL_FORM/NEW':\n            return { ...initialState, ...payload };\n        case 'MEAL_FORM/CHANGE':\n            return { ...state, ...payload };\n        case 'MEAL_FORM/CLOSE':\n            return { ...initialState };\n        case 'MEAL_FORM/DELETE_INGREDIENT':\n            let ingredients = state.ingredients.filter(\n                (ingredient) => ingredient !== payload\n            );\n            return {\n                ...state,\n                ingredients,\n            };\n        default:\n            return state;\n    }\n}\n","const initialState = {\n    show: false,\n    symptoms: [],\n    time: '',\n    mood: null,\n    _id: '',\n    new: false,\n    edit: false,\n    dateString: '',\n    timeString: '',\n};\n\nexport default function HealtCheckFormReducer(state = initialState, action) {\n    let { payload } = action;\n    switch (action.type) {\n        case 'HEALTH_CHECK_FORM/EDIT':\n            return { ...initialState, ...payload };\n        case 'HEALTH_CHECK_FORM/NEW':\n            return { ...initialState, ...payload };\n        case 'HEALTH_CHECK_FORM/DELETE_SYMPTOM':\n            let symptoms = state.symptoms.filter(\n                (symptom) => symptom !== payload\n            );\n            return { ...state, symptoms };\n        case 'HEALTH_CHECK_FORM/CHANGE':\n            return { ...state, ...payload };\n        case 'HEALTH_CHECK_FORM/CLOSE':\n            return { ...initialState };\n        default:\n            return state;\n    }\n}\n","const initialState = {\n    username: '',\n    password: '',\n    show: false,\n    invalidPassword: false,\n    invalidUsername: false,\n};\n\nexport default function LoginFormReducer(state = initialState, action) {\n    let payload = action.payload;\n    switch (action.type) {\n        case 'LOGIN_FORM/SET':\n            return { ...state, ...payload };\n        case 'LOGIN_FORM/SHOW':\n            return { ...state, show: true };\n        case 'LOGIN_FORM/RESET':\n            return { ...initialState };\n        default:\n            return state;\n    }\n}\n","const initialState = {\n    show: false\n};\n\nexport default function UserOptionsReducer(state = initialState, action) {\n    let payload = action.payload;\n    switch (action.type) {\n        case 'USER_MENU/SHOW':\n            console.log('showing')\n            return {...state, show: true};\n        case 'USER_MENU/HIDE':\n            console.log('hiding')\n            return {...state, show: false};\n        default:\n            return state;\n    }\n}\n","const initialState = {\n    activity: {\n        active: true,\n        filter: 'all'\n    }\n};\n\n\nexport default function ViewReducer(state = initialState, action) {\n    let payload = action.payload\n    switch (action.type) {\n        case 'VIEW/ACTIVITY':\n            return { ...initialState, ...payload };\n        default:\n            return state;\n    }\n}\n","import { validate as validateEmail } from 'email-validator';\n\nexport function password(value) {\n    let errorMessage = 'Password must be at least 8 characters with at least one capital letter and one number'\n    if (/\\s/.test(value)) {\n        return { valid: false, error: 'Password cannot contain spaces. ' + errorMessage }\n    }\n    if (!/^\\S{8,}$/i.test(value)) {\n        return { valid: false, error: errorMessage };\n    }\n    if (!/[A-Z]/.test(value)) {\n        return { valid: false, error: errorMessage }\n    }\n    if (!/\\d/.test(value)) {\n        return { valid: false, error: errorMessage }\n    }\n    return { valid: true, error: '' };\n}\n\nexport function email(value) {\n    let valid = validateEmail(value);\n    let error = valid ? '' : 'Invalid Email Address';\n    return { valid, error };\n}\n\nexport function name(value) {\n    let valid = /^\\w{1,}/i.test(value);\n    let error = valid ? '' : 'Invalid Name';\n    return { valid, error };\n}\n","import { Password } from 'components/common/utils/formValidation';\nconst intitalInputState = { value: '', valid: false, touched: false, error: 'Required Field' };\nconst initialState = {\n    show: false,\n    firstName: { ...intitalInputState },\n    lastName: { ...intitalInputState },\n    email: { ...intitalInputState, valid: true },\n    username: { ...intitalInputState },\n    password: { ...intitalInputState },\n    passwordVerify: { ...intitalInputState },\n};\n\nexport default function RegisterFormReducer(state = initialState, action) {\n    let payload = action.payload;\n    switch (action.type) {\n        case 'REGISTER_FORM/SHOW':\n            return { ...state, show: true };\n        case 'REGISTER_FORM/HIDE':\n            return { ...state, show: false };\n        case 'REGISTER_FORM/SET':\n            return { ...state, ...payload };\n        case 'REGISTER_FORM/VALIDATE':\n            return { ...state, ...payload };\n        case 'REGISTER_FORM/TOUCH_ALL':\n            let outputState = {...state}\n            let response = Object.keys(state).forEach((key)=>{\n                if(outputState[key].hasOwnProperty('touched')){\n                    outputState[key].touched = true;\n                }\n            })\n            return outputState\n        default:\n            return { ...state };\n    }\n}\n","import {combineReducers} from 'redux'\nimport UserStateReducer from 'components/common/state/UserStateReducer'\nimport ActivityReducer from 'components/activity/state/ActivityReducer.js'\nimport MealFormReducer from 'components/meal_form/state/MealFormReducer.js'\nimport HealthCheckFormReducer from 'components/health_check_form/state/healthCheckFormReducer'\nimport LoginFormReducer from 'components/login_form/state/loginFormReducer'\nimport UserMenuReducer from 'components/user_menu/state/UserMenuReducer'\nimport ViewReducer from './ViewReducer'\nimport RegisterFormReducer from 'components/register_form/state/registerFormReducer'\n\nconst rootReducer = combineReducers({\n    UserState: UserStateReducer,\n    activity: ActivityReducer,\n    mealForm: MealFormReducer,\n    healthCheckForm: HealthCheckFormReducer,\n    loginForm: LoginFormReducer,\n    userMenu: UserMenuReducer,\n    view: ViewReducer,\n    registerForm: RegisterFormReducer\n})\n\nexport default rootReducer","import { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './RootReducer.js';\nimport thunk from 'redux-thunk';\n\nconst devTools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\nlet middleWare;\nif (devTools) {\n    middleWare = compose(applyMiddleware(thunk), devTools);\n} else {\n    middleWare = compose(applyMiddleware(thunk))\n}\n\nconst store = createStore(rootReducer, middleWare);\n\nexport default store;\n","import { attemptLogIn } from '../state/UserStateActions.js';\nimport store from '../state/Store.js';\n\nlet dispatch = store.dispatch;\n\nfunction token() {\n    return store.getState().UserState.accessToken;\n}\n\nexport function getHeaders() {\n    return {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token().value}`,\n    };\n}\n\n\nexport async function get(route) {\n    if (token().expired()) await dispatch(attemptLogIn());\n    console.log('api get: ' + route);\n    let response = await fetch(`/api/${route}`, {\n        method: 'GET',\n        headers: getHeaders(),\n    });\n    return await response.json();\n}\n\nexport async function post(route, data) {\n    if (token().expired()) await dispatch(attemptLogIn());\n    console.log('api post: ' + route);\n    let response = await fetch(`/api/${route}`, {\n        method: 'POST',\n        headers: getHeaders(),\n        body: JSON.stringify(data),\n    });\n    return await response.json();\n}\n\nexport async function put(route, data) {\n    if (token().expired()) await dispatch(attemptLogIn());\n    let response = await fetch(`/api/${route}`, {\n        method: 'PUT',\n        headers: getHeaders(),\n        body: JSON.stringify(data),\n    });\n    return await response.json();\n}\n\nexport async function deleteByID(route, _id) {\n    if (token().expired()) await dispatch(attemptLogIn());\n    let response = await fetch(`/api/${route}/${_id}`, {\n        method: 'DELETE',\n        headers: getHeaders(),\n    });\n    return await response.json();\n}\n","import * as accessToken from 'components/common/utils/accessToken.js';\nimport UserState from 'components/common/utils/userState';\nimport { hideUserOptions } from 'components/user_menu/state/UserMenuActions';\nimport { getHeaders } from '../utils/api';\n\nexport function setUserState(payload) {\n    return {\n        type: 'USERSTATE/SET',\n        payload,\n    };\n}\n\nexport function attemptLogIn() {\n    console.log('attempting login');\n    return async (dispatch, getState) => {\n        try {\n            let token = await accessToken.refresh(); //return access token object\n            dispatch(setUserState(new UserState(token)));\n        } catch (error) {\n            console.log('no refresh token, login required');\n            dispatch(setUserState(new UserState()));\n        }\n    };\n}\n\nexport function LogOut() {\n    return async (dispatch, getState) => {\n        const token = () => getState().UserState.accessToken;\n        try {\n            if (token().expired()) await dispatch(attemptLogIn());\n            await fetch('/logout', {\n                headers: getHeaders(),\n            });\n            dispatch(hideUserOptions())\n            dispatch(setUserState(new UserState()));\n        } catch (error) {\n            console.error(error)\n        }\n    };\n}\n","import { AccessToken } from 'components/common/utils/accessToken.js';\nimport { setUserState } from 'components/common/state/UserStateActions.js';\nimport UserState from 'components/common/utils/userState';\n\nexport function showLoginForm(payload) {\n    return {\n        type: 'LOGIN_FORM/SHOW',\n    };\n}\n\nexport function setLoginForm(payload) {\n    return {\n        type: 'LOGIN_FORM/SET',\n        payload,\n    };\n}\nexport function resetLoginForm() {\n    return {\n        type: 'LOGIN_FORM/RESET',\n    };\n}\n\nexport function logIn() {\n    return async (dispatch, getState) => {\n        try {\n            let { username, password } = getState().loginForm;\n            let response = await fetch('/login', {\n                method: 'POST',\n                headers: { 'Content-type': 'application/json' },\n                body: JSON.stringify({ username, password }),\n            });\n            if (response.status !== 200) {\n                let errorMessage = await response.json();\n                throw new Error(errorMessage);\n            }\n            let token = new AccessToken(await response.json());\n            dispatch(setUserState(new UserState(token)));\n            dispatch(resetLoginForm());\n        } catch (error) {\n            console.log(error);\n            if (error.message === 'invalid username') {\n                dispatch(setLoginForm({ invalidPassword: false, invalidUsername: true }));\n            }\n            if (error.message === 'invalid password') {\n                dispatch(setLoginForm({ invalidPassword: true, invalidUsername: false }));\n            }\n        }\n    };\n}\n","export function showRegisterForm(){\n    return {\n        type: 'REGISTER_FORM/SHOW'\n    }\n}\nexport function hideRegisterForm(){\n    return {\n        type: 'REGISTER_FORM/HIDE'\n    }\n}\nexport function setRegisterForm(payload){\n    return {\n        type: 'REGISTER_FORM/SET',\n        payload\n    }\n}\nexport function validateRegisterForm(payload){\n    return {\n        type: 'REGISTER_FORM/VALIDATE',\n        payload\n    }\n}\nexport function touchAllInputs(){\n    return {\n        type: \"REGISTER_FORM/TOUCH_ALL\",\n    }\n}","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport _ from 'lodash';\n\nexport default function RegisterInput(props) {\n    let { name, state, validationCallback, placeholder, capitalize, type, validated, trimWhitespace, lowercase} = props;\n    let handleBlur = props.onBlur;\n    let handleChange = props.onChange;\n    return (\n        <Form.Group>\n            <Form.Control\n                name={name}\n                value={state.value}\n                isInvalid={validated && state.touched && !state.valid}\n                isValid={validated && state.touched && state.valid}\n                onBlur={(e) => {\n                    let value = e.target.value;\n                    if (value) handleBlur(e, validationCallback);\n                }}\n                onChange={(e) => {\n                    let { name, value } = e.target;\n                    //if capitalize prop is true, and last character typed is a letter char\n                    if (trimWhitespace) value = _.trim(value)\n                    if (lowercase) value = _.toLower(value)\n                    if (capitalize && /\\w$/.test(value)) {\n                        value = value.split(/([\\s-_.])/).reduce((acc, substring) => {\n                            return acc + _.upperFirst(substring);\n                        }, '');\n                        value = _.trim(value);\n                    }\n                    handleChange({ name, value });\n                }}\n                type={type}\n                placeholder={placeholder}\n            />\n            <Form.Control.Feedback type=\"invalid\">{state.error}</Form.Control.Feedback>\n            <Form.Control.Feedback type=\"valid\">{state.error}</Form.Control.Feedback>\n        </Form.Group>\n    );\n}\n","import { useState } from 'react';\nimport React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    hideRegisterForm,\n    setRegisterForm,\n    touchAllInputs,\n    validateRegisterForm,\n} from './state/registerFormActions';\nimport Button from 'react-bootstrap/Button';\nimport './RegisterForm.scss';\nimport * as validate from 'components/common/utils/formValidation';\nimport RegisterInput from './state/RegisterInput';\nimport { AccessToken } from '../common/utils/accessToken.js';\nimport UserState from 'components/common/utils/userState';\nimport { setUserState } from 'components/common/state/UserStateActions';\nimport _ from 'lodash';\n\nexport default function RegisterForm() {\n    let [processing, setProcessing] = useState(false);\n    const dispatch = useDispatch();\n    let state = useSelector((state) => state.registerForm);\n\n    async function handleSubmit(e) {\n        e.preventDefault();\n        dispatch(touchAllInputs());\n        if (!state.password.valid) return;\n        if (!state.passwordVerify.valid) return;\n        if (!state.username.valid) return;\n        if (!state.firstName.valid) return;\n        if (!state.lastName.valid) return;\n        let registerPayload = {\n            username: _.toLower(_.trim(state.username.value)),\n            firstName: _.trim(state.firstName.value),\n            lastName: _.trim(state.lastName.value),\n            password: _.trim(state.password.value)\n        };\n        console.log(registerPayload)\n        setProcessing(true)\n        try {\n            let response = await fetch('/register', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify(registerPayload),\n            });\n            if(response.status !== 200) throw new Error(`Error ${response.status}`)\n            console.log('success')\n            let token = new AccessToken(await response.json());\n            dispatch(setUserState(new UserState(token)))\n        } catch (error) {\n            setProcessing(false)\n            console.log(error)\n        }\n    }\n\n    async function handleChange({ name, value }) {\n        dispatch(setRegisterForm({ [name]: { value } }));\n    }\n\n    async function handleBlur(e, validationCallback) {\n        let { name, value } = e.target;\n        let { valid, error } = await validationCallback(value);\n        dispatch(validateRegisterForm({ [name]: { value, valid, touched: true, error } }));\n    }\n\n    return (\n        <Modal show={state.show} onHide={() => dispatch(hideRegisterForm())}>\n            <Form onSubmit={handleSubmit} noValidate>\n                <Modal.Header>\n                    <Modal.Title>Sign Up!</Modal.Title>\n                </Modal.Header>\n                <Modal.Body className=\"register-form-container\">\n                    <h6>Personal info:</h6>\n                    <Row>\n                        <Col xs={6}>\n                            <RegisterInput\n                                state={state.firstName}\n                                name=\"firstName\"\n                                capitalize\n                                validated\n                                placeholder=\"First Name\"\n                                validationCallback={validate.name}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                            />\n                        </Col>\n                        <Col xs={6}>\n                            <RegisterInput\n                                state={state.lastName}\n                                name=\"lastName\"\n                                validated\n                                placeholder=\"Last Name\"\n                                validationCallback={validate.name}\n                                capitalize\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                            />\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col xs={12}>\n                            {/* <RegisterInput\n                                state={state.email}\n                                name=\"email\"\n                                placeholder=\"Email\"\n                                validationCallback={(validate.email)}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                            /> */}\n                        </Col>\n                    </Row>\n                    <hr />\n                    <h6>Account Info:</h6>\n                    <Row>\n                        <Col xs={12}>\n                            <RegisterInput\n                                state={state.username}\n                                name=\"username\"\n                                validated\n                                trimWhitespace\n                                lowercase\n                                placeholder=\"Username\"\n                                validationCallback={async (value) => {\n                                    if (!/^\\w{1,}$/i.test(value))\n                                        return { valid: false, error: 'Invalid Username' };\n                                    let response = await fetch('validation/username/' + value);\n                                    let valid = await response.json();\n                                    let error = valid\n                                        ? 'Username is available'\n                                        : 'Username is not available';\n                                    return { valid, error };\n                                }}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                            />\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col xs={12}>\n                            <RegisterInput\n                                type=\"password\"\n                                state={state.password}\n                                name=\"password\"\n                                validated\n                                placeholder=\"Password\"\n                                validationCallback={validate.password}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                            />\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col xs={12}>\n                            <RegisterInput\n                                type=\"password\"\n                                state={state.passwordVerify}\n                                name=\"passwordVerify\"\n                                validated\n                                placeholder=\"Verify Password\"\n                                validationCallback={(value) => {\n                                    let valid = state.password.value === value;\n                                    let error = valid ? '' : 'Passwords do not match';\n                                    return { valid, error };\n                                }}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                            />\n                        </Col>\n                    </Row>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => dispatch(hideRegisterForm())}>\n                        Cancel\n                    </Button>\n                    <Button\n                        onClick={handleSubmit}\n                        type=\"submit\"\n                        disabled={processing}\n                        variant=\"success\">\n                        {processing ? 'Creating Account' : 'Create Account'}\n                    </Button>\n                </Modal.Footer>\n            </Form>\n        </Modal>\n    );\n}\n","import React from 'react';\nimport './LoginForm.scss';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setLoginForm, logIn } from './state/loginFormActions';\nimport { showRegisterForm } from 'components/register_form/state/registerFormActions';\nimport RegisterForm from 'components/register_form/registerForm';\n\nexport default function Login() {\n    let state = useSelector((state) => state.loginForm);\n\n    const dispatch = useDispatch();\n\n    return (\n        <div className=\"login-container\">\n            <Form\n                className=\"form\"\n                onSubmit={(e) => {\n                    e.preventDefault()\n                    console.log('signing in');\n                    dispatch(logIn());\n                }}>\n                <div className=\"login\">\n                    <Row className=\"form-row\">\n                        <Col md=\"auto\">\n                            <Form.Control\n                                isInvalid={state.invalidUsername}\n                                name=\"username\"\n                                className=\"username\"\n                                placeholder=\"User Name\"\n                                value={state.username}\n                                onChange={(e) => {\n                                    dispatch(setLoginForm({ username: e.target.value }));\n                                }}\n                            />\n                        </Col>\n                        <Col className=\"filler\" xs={12}></Col>\n                        <Col md=\"auto\">\n                            <Form.Control\n                                isInvalid={state.invalidPassword}\n                                name=\"password\"\n                                className=\"password\"\n                                type=\"password\"\n                                value={state.password}\n                                onChange={(e) => {\n                                    dispatch(setLoginForm({ password: e.target.value }));\n                                }}\n                                placeholder=\"Password\"\n                            />\n                        </Col>\n                        <Col className=\"filler\" xs={12}></Col>\n                        <Col xs={8} md=\"auto\">\n                            <Button\n                                type=\"submit\"\n                                className=\"login-button\"\n                                variant=\"light\">\n                                Sign In\n                            </Button>\n                        </Col>\n                        <Col xs={4} md=\"auto\">\n                            <Button\n                                onClick={() => dispatch(showRegisterForm())}\n                                className=\"signup-button\"\n                                variant=\"success\">\n                                Sign Up\n                            </Button>\n                            <RegisterForm />\n                        </Col>\n                    </Row>\n                </div>\n            </Form>\n        </div>\n    );\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { hideUserOptions, showUserOptions } from './state/UserMenuActions';\nimport Button from 'react-bootstrap/Button';\nimport Offcanvas from 'react-bootstrap/Offcanvas';\nimport './UserMenu.scss';\nimport { LogOut } from 'components/common/state/UserStateActions';\nimport { useState } from 'react';\n\nexport default function UserMenu() {\n    let state = useSelector((state) => state.userMenu);\n    let [loggingOut, setLoggingOut] = useState(false);\n    const dispatch = useDispatch();\n    return (\n        <div>\n            <h4>\n                Hello, {useSelector((state) => state.UserState.firstName)}\n                <Button\n                    variant=\"outline-dark\"\n                    style={{ marginLeft: '20px' }}\n                    onClick={() => dispatch(showUserOptions())}>\n                    <i className=\"fas fa-bars\"></i>\n                </Button>\n            </h4>\n            <Offcanvas\n                className=\"user-menu\"\n                show={state.show}\n                onHide={() => dispatch(hideUserOptions())}\n                placement=\"end\">\n                <Offcanvas.Header closeButton>\n                    <Offcanvas.Title>Your Account</Offcanvas.Title>\n                </Offcanvas.Header>\n                <Offcanvas.Body>\n                    <div className=\"options-container\">\n                        <ul>\n                            <li>\n                                <button className=\"link\">Account Settings</button>\n                            </li>\n                            <li>\n                                <button className=\"link\">Help</button>\n                            </li>\n                        </ul>\n                    </div>\n                    <div className=\"logout-button-container\">\n                        <hr />\n                        <Button\n                            disabled={loggingOut}\n                            variant=\"success\"\n                            className=\"logout\"\n                            onClick={ async () => {\n                                setLoggingOut(true)\n                                await dispatch(LogOut());\n                            }}>\n                            {loggingOut ? 'Logging Out' : 'Log Out'}\n                        </Button>\n                    </div>\n                </Offcanvas.Body>\n            </Offcanvas>\n        </div>\n    );\n}\n","export function showUserOptions(){\n    return {\n        type: 'USER_MENU/SHOW'\n    }\n}\nexport function hideUserOptions(){\n    return {\n        type: 'USER_MENU/HIDE'\n    }\n}","import React from 'react';\nimport LoginForm from '../login_form/LoginForm';\nimport './Header.scss';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n//import CurrentUser from 'components/header/CurrentUser'\nimport UserMenu from 'components/user_menu/UserMenu';\nimport { useSelector } from 'react-redux';\n\n\nexport default function Header() {\n    let userState = useSelector(state => state.UserState)\n\n    return (\n        <Container fluid className=\"header-container\">\n            <Row className=\"header\">\n                <Col xs={12} sm=\"auto\" className=\"logo\">\n                    Food <span style={{color: '#888'}}>x</span> Mood\n                </Col>\n                <Col xs={12} md={true} className=\"filler\"></Col>\n                <Col xs={12} md={'auto'} className=\"login\">\n                    {userState.isLoggedIn ? <UserMenu /> : <LoginForm/>}\n                </Col>\n            </Row>\n            \n        </Container>\n    );\n}\n","export function ViewActivity(filter){\n    return {\n        type: 'VIEW/ACTIVITY',\n        payload: {\n            activity: {\n                active: true,\n                filter\n            }\n        }\n    }\n}","import React from 'react';\nimport './Sidebar.scss';\nimport { useDispatch } from 'react-redux';\nimport { ViewActivity } from './common/state/ViewActions';\n\nexport default function Sidebar(props) {\n    let dispatch = useDispatch();\n    return (\n        <div className=\"sidebar-container\">\n            <div className=\"nav-group\">\n                <div className=\"nav-group-title\">\n                    <h5>Your Log</h5>\n                </div>\n                <div\n                    onClick={() => {\n                        dispatch(ViewActivity('all'))\n                    }}\n                    className=\"nav-item\">\n                    <a href=\"#\">All Activity</a>\n                </div>\n                <div\n                    onClick={() => {\n                        dispatch(ViewActivity('meals'))\n                    }}\n                    className=\"nav-item\">\n                    <a href=\"#\">Meals</a>\n                </div>\n                <div\n                    onClick={() => {\n                        dispatch(ViewActivity('health-checks'))\n                    }}\n                    className=\"nav-item\">\n                    <a href=\"#\">Wellness</a>\n                </div>\n                <div className=\"nav-item-catagory\"></div>\n            </div>\n            <div className=\"nav-group\">\n                <div className=\"nav-group-title\">\n                    <h5>Analysis</h5>\n                </div>\n                <div className=\"nav-item\">\n                    <a href=\"#\">Food Items</a>\n                </div>\n                <div className=\"nav-item\">\n                    <a href=\"#\">Symptoms</a>\n                </div>\n                <div className=\"nav-item-catagory\"></div>\n            </div>\n        </div>\n    );\n}\n","import React from 'react'\nimport './Pill.scss'\n\nexport default function Pill(props){\n    return (\n        <div className=\"pill\">\n                        <div className={`pill-primary ${props.primaryColor}`}>{props.primaryText}</div>\n                        {props.secondaryText && <div className={`pill-secondary ${props.secondaryColor}`}>{props.secondaryText}</div>}\n        </div>\n    )\n}","import dayjs from 'dayjs';\nimport customParseFormat from 'dayjs/plugin/customParseFormat';\ndayjs().format();\ndayjs.extend(customParseFormat);\n\nexport function stringToUnixTime(date, time) {\n    return dayjs(`${date} ${time}`, 'YYYY-MM-DD HH:mm').unix();\n}\nexport function unixToDateString(unixTime = dayjs().unix()) {\n    return dayjs.unix(unixTime).format('YYYY-MM-DD');\n}\nexport function unixToTimeString(unixTime = dayjs().unix()) {\n    return dayjs.unix(unixTime).format('HH:mm');\n}\n","import store from 'components/common/state/Store';\nimport { unixToDateString, unixToTimeString } from 'components/common/utils/DateHandler';\n\nexport function editMeal(_id) {\n    let currentEntry = store.getState().activity.data[_id];\n    return {\n        type: 'MEAL_FORM/EDIT',\n\n        payload: {\n            edit: true,\n            show: true,\n            ...currentEntry,\n            timeString: unixToTimeString(currentEntry.time),\n            dateString: unixToDateString(currentEntry.time),\n        },\n    };\n}\n\nexport function formChange(payload) {\n    return {\n        type: 'MEAL_FORM/CHANGE',\n        payload,\n    };\n}\n\nexport function deleteIngredient(payload) {\n    return {\n        type: 'MEAL_FORM/DELETE_INGREDIENT',\n        payload,\n    };\n}\n\nexport function newMeal() {\n    console.log('new meal action');\n    return {\n        type: 'MEAL_FORM/NEW',\n        payload: {\n            new: true,\n            show: true,\n            timeString: unixToTimeString(),\n            dateString: unixToDateString(),\n        },\n    };\n}\n\nexport function closeMealForm() {\n    return {\n        type: 'MEAL_FORM/CLOSE',\n    };\n}\n","import * as API from 'components/common/utils/api.js';\n\n\nfunction loadingActivity(){\n    return {\n        type: 'ACTIVITY/LOADING'\n    }\n}\n\nexport  function setActivity(filter) {\n    return async (dispatch, getState) => {\n        try {\n            dispatch(loadingActivity())\n            let filter = getState().view.activity.filter\n            let response = await API.get(`activity/${filter}`);\n            let data = Object.fromEntries(response.map((entry)=>{ //CONVERTS ARRAY TO OBJECT KEYED BY _ID\n                let { _id } = entry\n                return [_id, entry]\n            }))\n            dispatch({type: 'ACTIVITY/SET_DATA', payload: {data, loading: false}})\n        } catch (error) {\n            console.log(error)\n        }\n    };\n}","import store from 'components/common/state/Store';\nimport {\n    unixToDateString,\n    unixToTimeString,\n} from 'components/common/utils/DateHandler';\n\nexport function editHealthCheck(id) {\n    let currentEntry = store.getState().activity.data[id];\n    return {\n        type: 'HEALTH_CHECK_FORM/EDIT',\n\n        payload: {\n            edit: true,\n            show: true,\n            ...currentEntry,\n            timeString: unixToTimeString(currentEntry.time),\n            dateString: unixToDateString(currentEntry.time),\n        },\n    };\n}\n\nexport function formChange(payload) {\n    return {\n        type: 'HEALTH_CHECK_FORM/CHANGE',\n        payload,\n    };\n}\n\nexport function deleteSymptom(payload) {\n    return {\n        type: 'HEALTH_CHECK_FORM/DELETE_SYMPTOM',\n        payload,\n    };\n}\n\nexport function newHealthCheck() {\n    console.log('new meal action');\n    return {\n        type: 'HEALTH_CHECK_FORM/NEW',\n        payload: {\n            new: true,\n            show: true,\n            timeString: unixToTimeString(),\n            dateString: unixToDateString(),\n        },\n    };\n}\nexport function closeHealthCheckForm() {\n    return {\n        type: 'HEALTH_CHECK_FORM/CLOSE',\n    };\n}\n","import React from 'react';\nimport * as API from '../common/utils/api.js';\nimport { useDispatch } from 'react-redux';\nimport { editMeal } from 'components/meal_form/state/MealFormActions';\nimport { setActivity } from 'components/activity/state/ActivityActions';\nimport { editHealthCheck } from 'components/health_check_form/state/healthCheckFormActions.js';\n\nexport default function ManageEntry(props) {\n    const dispatch = useDispatch();\n    let { _id, type } = props.entry;\n    let endpoint;\n    if (type === 'meal') endpoint = 'meals';\n    if (type === 'healthCheck') endpoint = 'health-checks';\n\n    async function handleDelete(e) {\n        e.preventDefault();\n        try {\n            await API.deleteByID(`activity/${endpoint}`, _id);\n            dispatch(setActivity());\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    function handleEdit(e) {\n        e.preventDefault();\n        if (type === 'meal') dispatch(editMeal(_id));\n        if (type === 'healthCheck') dispatch(editHealthCheck(_id))\n    }\n\n    return (\n        <div>\n            <a onClick={handleDelete} href=\"#\">\n                <i style={{ marginLeft: '10px' }} className=\"fas fa-times\"></i>\n            </a>\n            <a onClick={handleEdit} href=\"#\">\n                <i\n                    style={{ marginLeft: '10px' }}\n                    className=\"fas fa-pencil-alt\"></i>\n            </a>\n        </div>\n    );\n};\n","import React from 'react';\nimport dayjs from 'dayjs';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Pill from '../Pill.jsx';\nimport ManageEntry from './ManageEntry'\nimport './Entry.scss';\n\nexport default function MealEntry(props) {\n    let { entry } = props\n    let { ingredients, mealType, time} = entry;\n    return (\n        <Container fluid className=\"entry-container\">\n                    <Row className=\"entry-heading\">\n                        <Col ><h6>{mealType}: {dayjs.unix(time).format('h:mm A')}</h6></Col>\n                        <Col xs=\"auto\">\n                            <ManageEntry entry={entry} />\n                            </Col>\n                    </Row>\n                    <Row className=\"entry-section\">\n                        <Col xs=\"auto\">\n                            <div className=\"section-title\">Ingredients:</div>\n                        </Col>\n                        <Col xs={true}>\n                            {ingredients.map((ingredient, index) => {\n                                return (\n                                    <Pill\n                                        key={index}\n                                        primaryText={ingredient.name}\n                                    />\n                                );\n                            })}\n                        </Col>\n                    </Row>\n        </Container>\n    );\n}\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Pill from '../Pill.jsx';\nimport './Entry.scss';\nimport ManageEntry from './ManageEntry.jsx';\n\nexport default function (props) {\n    let { entry } = props;\n    let { symptoms, mealType, type, time, _id } = entry;\n    return (\n        <Container fluid className=\"entry-container\">\n            <Row className=\"entry-heading\">\n                <Col>\n                    <span className=\"entry-type-secondary\">{type}</span>\n                    <span className=\"entry-date\">{time}</span>\n                </Col>\n                <Col xs=\"auto\">\n                    <ManageEntry entry={entry} />\n                </Col>\n            </Row>\n            <Row className=\"entry-section\">\n                <Col xs=\"auto\">\n                    <div className=\"section-title\">Symptoms:</div>\n                </Col>\n                <Col xs={true}>\n                    {symptoms.map((symptom, index) => {\n                        let severityEnum = {\n                            1: 'Mild',\n                            2: 'Moderate',\n                            3: 'Severe',\n                        };\n                        const colorEnum = {\n                            1: 'yellow',\n                            2: 'orange',\n                            3: 'red',\n                        };\n                        return (\n                            <Pill\n                                key={index}\n                                primaryText={symptom.description}\n                                secondaryText={severityEnum[symptom.severity]}\n                                secondaryColor={colorEnum[symptom.severity]}\n                            />\n                        );\n                    })}\n                </Col>\n            </Row>\n        </Container>\n    );\n}\n","import React from 'react';\nimport MealEntry from './MealEntry.jsx';\nimport HealthCheckEntry from './HealthCheckEntry.jsx';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport './DateBlock.scss';\n\nexport default function DateBlock(props) {\n    let { entries, index } = props;\n    return (\n        <div>\n            {index > 0 && <hr />}\n            <Container fluid className=\"date-block-container\">\n                <Row>\n                    <Col xs=\"auto\">\n                        <div className=\"date-container\">\n                            <div>{entries[0].date}</div>\n                        </div>\n                    </Col>\n                    <Col>\n                        {entries.map((entry) => {\n                            if (entry.type === 'meal')\n                                return <MealEntry key={entry._id} entry={entry} />;\n                            if (entry.type === 'healthCheck')\n                                return <HealthCheckEntry key={entry._id} entry={entry} />;\n                            return null\n                        })}\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    );\n}\n","import React from 'react';\nimport './AddButtonsContainer.scss';\nimport { useDispatch } from 'react-redux';\nimport { newMeal } from 'components/meal_form/state/MealFormActions';\nimport Button from 'react-bootstrap/Button';\nimport { newHealthCheck } from 'components/health_check_form/state/healthCheckFormActions';\n\nexport default function AddButtonsContainer(props) {\n    const dispatch = useDispatch();\n    return (\n        <div className=\"add-buttons-container\">\n            <Button\n                onClick={() => {\n                    dispatch(newMeal());\n                }}\n                className=\"new-meal\"\n                variant=\"success\">\n                <i className=\"fas fa-plus\"></i> Add Meal\n            </Button>\n            <Button\n                onClick={() => {\n                    dispatch(newHealthCheck());\n                }}\n                className=\"new-meal\"\n                variant=\"success\">\n                <i className=\"fas fa-plus\"></i> Add Wellness Check\n            </Button>\n        </div>\n    );\n}\n","import React, { useState } from 'react';\nimport _ from 'lodash';\nimport { AsyncTypeahead } from 'react-bootstrap-typeahead';\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\nimport * as API from './utils/api.js';\n\nexport default function InputAutoComplete(props) {\n    let {\n        defaultInputValue,\n        submit,\n        placeholder,\n        apiEndpoint,\n        allowNewItems,\n        suggestions,\n        clearOnSubmit\n    } = props;\n    \n    let [isLoading, setIsLoading] = useState(false);\n    let [options, setOptions] = useState([]);\n    let [value, setValue] = useState([]);\n\n    async function handleSearch(query) {\n        if (suggestions) { //if suggestions prop is supplied use supplied array\n            setOptions(suggestions);\n        } else { //if no suggestions prop is supplied, query api for suggestions\n            setIsLoading(true);\n            query = _.startCase(_.lowerCase(query));\n            let url = `suggestions/${apiEndpoint}/${query}`;\n            setOptions(await API.get(url))\n            setIsLoading(false);\n        }\n    }\n\n    function submitHandler(value) {\n        if (value.length <= 0) return;\n        let outputValue = value[0];\n        let newItem = false;\n        if (typeof outputValue === 'object') {\n            outputValue = outputValue.label;\n            newItem = true;\n        }\n        outputValue = _.startCase(_.lowerCase(outputValue));\n        if (allowNewItems && newItem) {\n            postValue(outputValue);\n        }\n        submit(outputValue);\n        if(clearOnSubmit) setValue(['']);\n    }\n\n    async function postValue(value) {\n        await API.post(apiEndpoint, { value });\n    }\n\n    return (\n        <AsyncTypeahead\n            selectHintOnEnter={true}\n            id=\"autocomplete-input\"\n            minLength={1}\n            allowNew={allowNewItems}\n            delay={100}\n            newSelectionPrefix=\"Add a new item: \"\n            isLoading={isLoading}\n            options={options}\n            selected={value}\n            placeholder={placeholder}\n            onChange={(value) => {\n                setValue(value);\n                submitHandler(value);\n            }}\n            onSearch={handleSearch}\n            defaultInputValue={defaultInputValue ? defaultInputValue : ''}\n        />\n    );\n}\n","import React from 'react';\nimport './IngredientPill.scss';\n\nexport default function IngredientPill(props) {\n    let { onClick } = props;\n\n    return (\n        <div className=\"ingredient-pill\">\n            <div\n                onClick={onClick}\n                className=\"pill-primary\">\n                {props.primaryText}\n            </div>\n        </div>\n    );\n}\n","import React from 'react';\nimport { useState } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col';\nimport { useDispatch, useSelector } from 'react-redux';\nimport _ from 'lodash';\n\nimport InputAutoComplete from 'components/common/InputAutoComplete';\nimport {\n    closeMealForm,\n    deleteIngredient,\n    formChange,\n} from './state/MealFormActions';\nimport Pill from 'components/IngredientPill';\nimport * as API from 'components/common/utils/api';\nimport { stringToUnixTime } from 'components/common/utils/DateHandler';\nimport './MealForm.scss';\nimport { setActivity } from 'components/activity/state/ActivityActions';\n\nexport default function MealForm(props) {\n    let [processing, setProcessing] = useState(false);\n    let state = useSelector((state) => state.mealForm);\n    const dispatch = useDispatch();\n\n    async function handleSubmit() {\n        try {\n            setProcessing(true);\n            let unixTime = stringToUnixTime(state.dateString, state.timeString);\n            let newMeal = {\n                ingredients: state.ingredients.map(\n                    (ingredient) => ingredient.name\n                ),\n                type: state.mealType,\n                time: unixTime,\n            };\n            if (state.new) await API.post('activity/meals', newMeal);\n            if (state.edit)\n                await API.put('activity/meals/' + state._id, newMeal);\n            setProcessing(false);\n            handleClose();\n            dispatch(setActivity());\n        } catch (error) {\n            console.log(error);\n            setProcessing(false);\n            handleClose();\n        }\n    }\n    async function handleClose() {\n        dispatch(closeMealForm());\n    }\n\n    function addIngredient(newIngredient) {\n        newIngredient = _.startCase(_.lowerCase(newIngredient));\n        if (state.ingredients.map(ingredient => ingredient.name).includes(newIngredient)) return;\n        dispatch(\n            formChange({\n                ingredients: [...state.ingredients, { name: newIngredient }],\n            })\n        );\n    }\n\n    return (\n        <Modal show={state.show} onHide={handleClose}>\n            <Modal.Header closeButton>\n                {state.edit && <Modal.Title>Edit Meal</Modal.Title>}\n                {state.new && <Modal.Title>Post New Meal</Modal.Title>}\n            </Modal.Header>\n            <Modal.Body>\n                <div className=\"meal-form-container\">\n                    <Row>\n                        <Col xs={12}>\n                            <InputAutoComplete\n                                submit={(value) => {\n                                    dispatch(formChange({ mealType: value }));\n                                }}\n                                suggestions={[\n                                    'Breakfast',\n                                    'Lunch',\n                                    'Dinner',\n                                    'Snack',\n                                    'Dessert',\n                                    'Drink',\n                                ]}\n                                defaultInputValue={state.mealType}\n                                placeholder=\"Meal Type (ie: Breakfast, Lunch, Dinner)\"\n                            />\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col xs={6}>\n                            <Form.Control\n                                type=\"date\"\n                                value={state.dateString}\n                                onChange={(e) => {\n                                    dispatch(\n                                        formChange({\n                                            dateString: e.target.value,\n                                        })\n                                    );\n                                }}\n                            />\n                        </Col>\n                        <Col xs={6}>\n                            <Form.Control\n                                type=\"time\"\n                                value={state.timeString}\n                                onChange={(e) => {\n                                    dispatch(\n                                        formChange({\n                                            timeString: e.target.value,\n                                        })\n                                    );\n                                }}\n                            />\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <InputAutoComplete\n                                submit={addIngredient}\n                                apiEndpoint=\"ingredients\"\n                                clearOnSubmit\n                                placeholder=\"Add Ingredients One at a Time\"\n                            />\n                        </Col>\n                    </Row>\n                    <div className=\"ingredient-list\">\n                        {state.ingredients.map((ingredient) => {\n                            return (\n                                <Pill\n                                    onClick={()=>{\n                                        dispatch(deleteIngredient(ingredient))\n                                    }}\n                                    key={ingredient.id}\n                                    primaryText={ingredient.name}\n                                />\n                            );\n                        })}\n                    </div>\n                </div>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"secondary\" onClick={handleClose}>\n                    Cancel\n                </Button>\n                {state.new && (\n                    <Button\n                        disabled={processing}\n                        variant=\"success\"\n                        onClick={handleSubmit}>\n                        {processing ? 'Posting' : 'Post Meal'}\n                    </Button>\n                )}\n                {state.edit && (\n                    <Button\n                        disabled={processing}\n                        variant=\"success\"\n                        onClick={handleSubmit}>\n                        {processing ? 'Saving' : 'Save Changes'}\n                    </Button>\n                )}\n            </Modal.Footer>\n        </Modal>\n    );\n}\n","import dayjs from 'dayjs';\nimport isYesterday from 'dayjs/plugin/isYesterday';\nimport isToday from 'dayjs/plugin/isToday';\nimport customParseFormat from 'dayjs/plugin/customParseFormat';\ndayjs().format();\ndayjs.extend(isYesterday);\ndayjs.extend(isToday);\ndayjs.extend(customParseFormat);\n\nfunction toDate(time) {\n    let date = dayjs.unix(time);\n    if (date.isYesterday()) return 'Yesterday';\n    if (date.isToday()) return 'Today'\n    let oneWeekAgo = dayjs().subtract(1, 'week')\n    if (date.isAfter(oneWeekAgo)){\n        return date.format('dddd')\n    }\n    return date.format('MMM DD');\n}\n\nfunction toSortedArray(dataObject){\n    let dataArray = Object.entries(dataObject).map(([key, val])=>{\n        return {...val} //IMPORTANT, CREATES SHALLOW COPY TO PREVENT MUTATING STATE\n    })\n    return dataArray.sort((a, b)=>{\n        return b.time - a.time\n    })\n}\n\nexport function create(dataObject) { \n    let dataArray = toSortedArray(dataObject)\n    return dataArray.reduce((acc, currentEntry) => {\n        currentEntry.date = toDate(currentEntry.time);\n        let lastSubArray = acc[acc.length - 1];\n        if (!lastSubArray) return [[currentEntry]];\n        let lastEntry = lastSubArray[lastSubArray.length - 1];\n        if (lastEntry.date === currentEntry.date) {\n            acc[acc.length - 1].unshift(currentEntry);\n            return acc;\n        }\n        acc.push([currentEntry]);\n        return acc;\n    }, []);\n}\n","import React, { useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport _ from 'lodash';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    closeHealthCheckForm,\n    formChange,\n    deleteSymptom\n} from './state/healthCheckFormActions';\nimport InputAutoComplete from 'components/common/InputAutoComplete';\nimport Pill from 'components/IngredientPill';\nimport * as API from 'components/common/utils/api';\nimport { stringToUnixTime } from 'components/common/utils/DateHandler';\nimport './HealthCheckForm.scss';\nimport { setActivity } from 'components/activity/state/ActivityActions';\n\nexport default function HealthCheckForm() {\n    let [processing, setProcessing] = useState(false);\n    let state = useSelector((state) => state.healthCheckForm);\n    let dispatch = useDispatch();\n\n    function handleClose() {\n        dispatch(closeHealthCheckForm());\n    }\n    function handleMoodSelect(val) {\n        dispatch(\n            formChange({\n                mood: val,\n            })\n        );\n    }\n    function addSymptom(newSymptom) {\n        newSymptom = _.startCase(_.lowerCase(newSymptom));\n        console.log(state.symptoms);\n        if (\n            state.symptoms\n                .map((symptom) => symptom.description)\n                .includes(newSymptom)\n        )\n            return;\n        dispatch(\n            formChange({\n                symptoms: [...state.symptoms, { description: newSymptom }],\n            })\n        );\n    }\n    async function handleSubmit() {\n        try {\n            setProcessing(true);\n            let unixTime = stringToUnixTime(state.dateString, state.timeString);\n            let newHealthCheck = {\n                symptoms: state.symptoms.map((symptom) => symptom.description),\n                mood: state.mood,\n                time: unixTime,\n            };\n            if (state.new)\n                await API.post('activity/health-checks', newHealthCheck);\n            if (state.edit)\n                await API.put(\n                    'activity/health-checks/' + state._id,\n                    newHealthCheck\n                );\n            setProcessing(false);\n            handleClose();\n            dispatch(setActivity());\n        } catch (error) {\n            console.log(error);\n            setProcessing(false);\n            handleClose();\n        }\n    }\n\n    return (\n        <Modal show={state.show} onHide={handleClose}>\n            <Modal.Header closeButton>\n                {state.edit && <Modal.Title>Edit Wellness Check</Modal.Title>}\n                {state.new && (\n                    <Modal.Title>Post New Wellness Check</Modal.Title>\n                )}\n            </Modal.Header>\n            <Modal.Body>\n                <div className=\"health-check-form-container\">\n                    <Row>\n                        <Col xs={6}>\n                            <Form.Control\n                                type=\"date\"\n                                name=\"date\"\n                                value={state.dateString}\n                                onChange={(e) => {\n                                    dispatch(\n                                        formChange({\n                                            dateString: e.target.value,\n                                        })\n                                    );\n                                }}\n                            />\n                        </Col>\n                        <Col xs={6}>\n                            <Form.Control\n                                type=\"time\"\n                                name=\"time\"\n                                value={state.timeString}\n                                onChange={(e) => {\n                                    dispatch(\n                                        formChange({\n                                            timeString: e.target.value,\n                                        })\n                                    );\n                                }}\n                            />\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col xs={12}>\n                            <ButtonGroup style={{ display: 'flex' }}>\n                                <Button\n                                    onClick={() => handleMoodSelect(1)}\n                                    className=\"mood-button\"\n                                    variant={\n                                        state.mood === 1 ? 'secondary' : 'light'\n                                    }>\n                                    Grumpy\n                                </Button>\n                                <Button\n                                    onClick={() => handleMoodSelect(2)}\n                                    className=\"mood-button\"\n                                    variant={\n                                        state.mood === 2 ? 'secondary' : 'light'\n                                    }>\n                                    Neutral\n                                </Button>\n                                <Button\n                                    onClick={() => handleMoodSelect(3)}\n                                    className=\"mood-button\"\n                                    variant={\n                                        state.mood === 3 ? 'secondary' : 'light'\n                                    }>\n                                    Upbeat\n                                </Button>\n                            </ButtonGroup>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <InputAutoComplete\n                                submit={addSymptom}\n                                clearOnSubmit\n                                placeholder=\"Add Symptoms One at a Time\"\n                                apiEndpoint=\"symptoms\"\n                            />\n                        </Col>\n                    </Row>\n                    <div className=\"symptom-list\">\n                        {state.symptoms.map((symptom, index) => {\n                            return (\n                                <Pill\n                                    onClick={() => {\n                                        dispatch(deleteSymptom(symptom));\n                                    }}\n                                    index={index}\n                                    key={index}\n                                    primaryText={symptom.description}\n                                />\n                            );\n                        })}\n                    </div>\n                </div>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"secondary\" onClick={handleClose}>\n                    Cancel\n                </Button>\n                {state.new && (\n                    <Button\n                        disabled={processing}\n                        variant=\"success\"\n                        onClick={handleSubmit}>\n                        {processing ? 'Posting' : 'Post Health Check'}\n                    </Button>\n                )}\n                {state.edit && (\n                    <Button\n                        disabled={processing}\n                        variant=\"success\"\n                        onClick={handleSubmit}>\n                        {processing ? 'Saving' : 'Save Changes'}\n                    </Button>\n                )}\n            </Modal.Footer>\n        </Modal>\n    );\n}\n","import React, { useEffect } from 'react';\nimport './Activity.scss';\nimport DateBlock from './DateBlock.jsx';\nimport AddButtonsContainer from 'components/activity/AddButtonsContainer';\nimport MealForm from 'components/meal_form/MealForm';\nimport * as FeedArray from './utils/feedArray';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setActivity } from 'components/activity/state/ActivityActions';\nimport HealthCheckForm from 'components/health_check_form/HealthCheckForm';\n\nexport default function Activity(props) {\n    const dispatch = useDispatch();\n    let state = useSelector((state) => state);\n\n    useEffect(() => {\n        dispatch(setActivity());\n    }, [state.view]);\n\n    let activityFeed = FeedArray.create(state.activity.data);\n    \n    return (\n        <div className=\"activity-container\">\n            <div>\n                <AddButtonsContainer />\n                <MealForm />\n                <HealthCheckForm />\n                {activityFeed.map((dateBlock, index) => {\n                    return <DateBlock key={index} index={index} entries={dateBlock} />;\n                })}\n            </div>\n        </div>\n    );\n}\n","import React from 'react';\nimport Sidebar from './Sidebar';\nimport Activity from './activity/Activity'\nimport { useSelector } from 'react-redux';\n\nexport default function Dashboard(props){\n    let state = useSelector(state => state.view)\n\n    return (\n        <div style={{position: 'relative'}}>\n            <Sidebar />\n            {(state.activity.active) && <Activity />}\n\n        </div>  \n    )\n}","import React, { useEffect } from 'react';\nimport Header from 'components/header/Header';\nimport Dashboard from './Dashboard';\nimport {useSelector, useDispatch} from 'react-redux'\nimport {attemptLogIn } from './common/state/UserStateActions.js'\n\nfunction App() {\n    let userState = useSelector(state => state.UserState)\n    const dispatch = useDispatch()\n\n\n    useEffect(() => dispatch(attemptLogIn()), []);\n\n    return (\n        <div>\n            <Header />\n\n            {userState.isLoggedIn && (\n                <Dashboard/>\n            )}\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './styles.scss';\nimport { Provider } from 'react-redux';\nimport store from './components/common/state/Store.js'\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}