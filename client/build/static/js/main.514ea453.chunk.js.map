{"version":3,"sources":["components/common/utils/accessToken.js","components/common/utils/userState.js","components/common/state/UserStateActions.js","components/login_form/state/loginFormActions.js","components/register_form/state/registerFormActions.js","components/common/utils/formValidation.js","components/register_form/state/RegisterInput.jsx","components/register_form/registerForm.jsx","components/login_form/LoginForm.jsx","components/user_menu/UserMenu.jsx","components/user_menu/state/UserMenuActions.js","components/header/Header.jsx","components/common/utils/api.js","components/activity/state/ActivityActions.js","components/common/state/ViewActions.js","components/NavigationMenu.jsx","components/NavigationMenuMobile.jsx","components/Pill.jsx","components/common/state/UserStateReducer.js","components/activity/state/ActivityReducer.js","components/meal_form/state/MealFormReducer.js","components/health_check_form/state/healthCheckFormReducer.js","components/login_form/state/loginFormReducer.js","components/user_menu/state/UserMenuReducer.js","components/common/state/ViewReducer.js","components/register_form/state/registerFormReducer.js","components/common/state/ViewportReducer.js","components/common/state/RootReducer.js","components/common/state/Store.js","components/common/utils/DateHandler.js","components/meal_form/state/MealFormActions.js","components/health_check_form/state/healthCheckFormActions.js","components/activity/ManageEntry.jsx","components/activity/MealEntry.jsx","components/activity/HealthCheckEntry.jsx","components/activity/DateBlock.jsx","components/activity/ActivityControls.jsx","components/common/InputAutoComplete.jsx","components/meal_form/MealForm.jsx","components/activity/utils/feedArray.js","components/health_check_form/HealthCheckForm.jsx","components/activity/Activity.jsx","components/Dashboard.jsx","components/common/state/ViewportActions.js","components/welcome/Welcome.jsx","components/App.jsx","components/common/utils/axiosConfig.js","index.js"],"names":["AccessToken","value","jwt_decode","exp","username","firstName","lastName","this","Math","ceil","Date","now","getCurrSeconds","refresh","a","fetch","response","status","json","error","Error","token","UserState","expired","accessToken","isLoggedIn","setUserState","payload","type","attemptLogIn","console","log","dispatch","getState","setLoginForm","setRegisterForm","validateRegisterForm","password","errorMessage","test","valid","name","RegisterInput","props","state","validationCallback","placeholder","capitalize","validated","trimWhitespace","lowercase","handleBlur","onBlur","handleChange","onChange","Form","Group","Control","isInvalid","touched","isValid","e","target","_","trim","toLower","split","reduce","acc","substring","upperFirst","Feedback","RegisterForm","useState","processing","setProcessing","useDispatch","useSelector","registerForm","handleSubmit","preventDefault","passwordVerify","registerPayload","method","headers","body","JSON","stringify","Modal","show","onHide","onSubmit","noValidate","Header","Title","Body","className","Row","Col","xs","validate","Footer","Button","variant","onClick","disabled","LoginForm","loginForm","attemptingLogin","message","invalidPassword","invalidUsername","md","UserMenu","userMenu","loggingOut","setLoggingOut","mobile","viewport","Offcanvas","placement","closeButton","axios","get","loggedIn","UserMenuButton","style","marginLeft","color","borderColor","Container","fluid","route","url","data","post","put","deleteByID","_id","buildQuery","andArray","push","activity","filters","keywords","length","mealQuery","map","keyword","ingredients","$elemMatch","$regex","$options","healthCheckQuery","symptoms","description","mealTypeQuery","mealType","$or","buildKeywordQuery","$and","setActivity","query","API","Object","fromEntries","entry","loading","setCurrentView","view","setViewToActivity","setViewToAnalysis","Sidebar","viewportWidth","href","currentView","Pill","text","deleteable","onDelete","size","margin","highlight","ButtonGroup","marginRight","marginBottom","initialState","time","new","edit","timeString","dateString","mood","active","filter","intitalInputState","email","width","rootReducer","combineReducers","action","mealForm","ingredient","healthCheckForm","symptom","outputState","keys","forEach","key","hasOwnProperty","middleWare","compose","applyMiddleware","thunk","store","createStore","composeWithDevTools","stringToUnixTime","date","dayjs","unix","unixToDateString","unixTime","format","unixToTimeString","formChange","ManageEntry","endpoint","currentEntry","editMeal","id","editHealthCheck","extend","customParseFormat","MealEntry","currentKeywordFilters","Breakfast","Lunch","Dessert","Snack","Dinner","Drink","HealthCheck","index","matchesKeyword","some","match","RegExp","HealthCheckEntry","DateBlock","entries","AddButtonsContainer","filterInput","setFilterInput","handleFilterInputSubmit","InputGroup","Text","i","InputAutoComplete","inputText","submit","apiEndpoint","allowNewItems","suggestions","clearOnSubmit","selectOnBlur","isLoading","setIsLoading","options","setOptions","selected","setSelected","currentSelection","setCurrentSelection","setLastSubmittedVal","startCase","lowerCase","submitHandler","outputValue","newItem","label","postValue","selectHintOnEnter","minLength","allowNew","delay","newSelectionPrefix","newSelection","onMenuToggle","opening","highlightOnlyResult","onSearch","results","activeIndex","MealForm","newMeal","handleClose","defaultInputValue","newIngredient","includes","isYesterday","isToday","build","activityEntriesObj","dataObject","val","sort","b","output","currEntry","currArray","oneWeekAgo","subtract","isAfter","unixTimeToDate","unshift","HealthCheckForm","handleMoodSelect","newHealthCheck","display","newSymptom","Activity","loaded","useEffect","FeedArray","dateBlock","Spinner","animation","Dashboard","viewState","position","setViewportSize","Welcome","App","handleResize","lastViewportSize","currentViewportSize","window","innerWidth","addEventListener","removeEventListener","getToken","interceptors","request","use","config","Authorization","err","configAxios","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.514ea453.chunk.js","sourcesContent":["import jwt_decode from 'jwt-decode';\n\nexport class AccessToken {\n    constructor(value){\n        let {exp, username, firstName, lastName} = jwt_decode(value)\n        this.value = value;\n        this.exp = exp\n        this.username = username\n        this.firstName = firstName\n        this.lastName = lastName\n    }\n    getCurrSeconds() {\n        return Math.ceil(Date.now() / 1000);\n    }\n    expired(){\n        if(this.exp < this.getCurrSeconds() + 10){\n            return true;\n        }\n        return false\n    }\n}\n\nexport async function refresh() {\n    let response = await fetch('/access');\n    if (response.status !== 200) {\n        let error = await response.json();\n        throw new Error(error);\n    }\n    let token = await response.json();\n    return new AccessToken(token)\n}\n\nexport function decode(token) {\n    let { username, firstName, lastName } = jwt_decode(token);\n    console.log(firstName)\n    return {\n        username,\n        firstName,\n        lastName,\n        accessToken: token,\n        isLoggedIn: true,\n    };\n}\n","export default class UserState {\n    constructor(token) {\n        if (token && !token.expired()) {\n            this.accessToken = token;\n            let { username, firstName, lastName } = token;\n            this.username = username;\n            this.firstName = firstName;\n            this.lastName = lastName;\n            this.isLoggedIn = true\n        } else {\n            this.accessToken = null\n            this.username = '';\n            this.firstName = '';\n            this.lastName = '';\n            this.isLoggedIn = false\n        }\n    }\n}\n","import * as accessToken from 'components/common/utils/accessToken.js';\nimport UserState from 'components/common/utils/userState';\nimport { hideUserOptions } from 'components/user_menu/state/UserMenuActions';\nimport axios from 'axios';\nexport function setUserState(payload) {\n    return {\n        type: 'USERSTATE/SET',\n        payload,\n    };\n}\n\nexport function attemptLogIn() {\n    console.log('attempting login');\n    return async (dispatch, getState) => {\n        try {\n            let token = await accessToken.refresh(); //return access token object\n            dispatch(setUserState(new UserState(token)));\n        } catch (error) {\n            console.log('no refresh token, login required');\n            dispatch(setUserState(new UserState()));\n        }\n    };\n}\n\nexport function LogOut() {\n    return async (dispatch, getState) => {\n        const token = () => getState().UserState.accessToken;\n        try {\n            if (token().expired()) await dispatch(attemptLogIn());\n            await axios.get('/logout');\n            dispatch(hideUserOptions())\n            dispatch(setUserState(new UserState()));\n        } catch (error) {\n            console.error(error)\n        }\n    };\n}\n","import { AccessToken } from 'components/common/utils/accessToken.js';\nimport { setUserState } from 'components/common/state/UserStateActions.js';\nimport UserState from 'components/common/utils/userState';\n\nexport function showLoginForm(payload) {\n    return {\n        type: 'LOGIN_FORM/SHOW',\n    };\n}\n\nexport function setLoginForm(payload) {\n    return {\n        type: 'LOGIN_FORM/SET',\n        payload,\n    };\n}\nexport function resetLoginForm() {\n    return {\n        type: 'LOGIN_FORM/RESET',\n    };\n}\n\nexport function logIn() {\n    return async (dispatch, getState) => {\n        try {\n            let { username, password } = getState().loginForm;\n            let response = await fetch('/login', {\n                method: 'POST',\n                headers: { 'Content-type': 'application/json' },\n                body: JSON.stringify({ username, password }),\n            });\n            if (response.status !== 200) {\n                let errorMessage = await response.json();\n                throw new Error(errorMessage);\n            }\n            let token = new AccessToken(await response.json());\n            dispatch(setUserState(new UserState(token)));\n            dispatch(resetLoginForm());\n        } catch (error) {\n            console.log(error);\n            if (error.message === 'invalid username') {\n                dispatch(setLoginForm({ invalidPassword: false, invalidUsername: true }));\n            }\n            if (error.message === 'invalid password') {\n                dispatch(setLoginForm({ invalidPassword: true, invalidUsername: false }));\n            }\n        }\n    };\n}\n","export function showRegisterForm(){\n    return {\n        type: 'REGISTER_FORM/SHOW'\n    }\n}\nexport function hideRegisterForm(){\n    return {\n        type: 'REGISTER_FORM/HIDE'\n    }\n}\nexport function setRegisterForm(payload){\n    return {\n        type: 'REGISTER_FORM/SET',\n        payload\n    }\n}\nexport function validateRegisterForm(payload){\n    return {\n        type: 'REGISTER_FORM/VALIDATE',\n        payload\n    }\n}\nexport function touchAllInputs(){\n    return {\n        type: \"REGISTER_FORM/TOUCH_ALL\",\n    }\n}","import { validate as validateEmail } from 'email-validator';\n\nexport function password(value) {\n    let errorMessage = 'Password must be at least 8 characters with at least one capital letter and one number'\n    if (/\\s/.test(value)) {\n        return { valid: false, error: 'Password cannot contain spaces. ' + errorMessage }\n    }\n    if (!/^\\S{8,}$/i.test(value)) {\n        return { valid: false, error: errorMessage };\n    }\n    if (!/[A-Z]/.test(value)) {\n        return { valid: false, error: errorMessage }\n    }\n    if (!/\\d/.test(value)) {\n        return { valid: false, error: errorMessage }\n    }\n    return { valid: true, error: '' };\n}\n\nexport function email(value) {\n    let valid = validateEmail(value);\n    let error = valid ? '' : 'Invalid Email Address';\n    return { valid, error };\n}\n\nexport function name(value) {\n    let valid = /^\\w{1,}/i.test(value);\n    let error = valid ? '' : 'Invalid Name';\n    return { valid, error };\n}\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport _ from 'lodash';\n\nexport default function RegisterInput(props) {\n    let { name, state, validationCallback, placeholder, capitalize, type, validated, trimWhitespace, lowercase} = props;\n    let handleBlur = props.onBlur;\n    let handleChange = props.onChange;\n    return (\n        <Form.Group>\n            <Form.Control\n                name={name}\n                value={state.value}\n                isInvalid={validated && state.touched && !state.valid}\n                isValid={validated && state.touched && state.valid}\n                onBlur={(e) => {\n                    let value = e.target.value;\n                    if (value) handleBlur(e, validationCallback);\n                }}\n                onChange={(e) => {\n                    let { name, value } = e.target;\n                    //if capitalize prop is true, and last character typed is a letter char\n                    if (trimWhitespace) value = _.trim(value)\n                    if (lowercase) value = _.toLower(value)\n                    if (capitalize && /\\w$/.test(value)) {\n                        value = value.split(/([\\s-_.])/).reduce((acc, substring) => {\n                            return acc + _.upperFirst(substring);\n                        }, '');\n                        value = _.trim(value);\n                    }\n                    handleChange({ name, value });\n                }}\n                type={type}\n                placeholder={placeholder}\n            />\n            <Form.Control.Feedback type=\"invalid\">{state.error}</Form.Control.Feedback>\n            <Form.Control.Feedback type=\"valid\">{state.error}</Form.Control.Feedback>\n        </Form.Group>\n    );\n}\n","import { useState } from 'react';\nimport React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    hideRegisterForm,\n    setRegisterForm,\n    touchAllInputs,\n    validateRegisterForm,\n} from './state/registerFormActions';\nimport Button from 'react-bootstrap/Button';\nimport './RegisterForm.scss';\nimport * as validate from 'components/common/utils/formValidation';\nimport RegisterInput from './state/RegisterInput';\nimport { AccessToken } from '../common/utils/accessToken.js';\nimport UserState from 'components/common/utils/userState';\nimport { setUserState } from 'components/common/state/UserStateActions';\nimport _ from 'lodash';\n\nexport default function RegisterForm() {\n    let [processing, setProcessing] = useState(false);\n    const dispatch = useDispatch();\n    let state = useSelector((state) => state.registerForm);\n\n    async function handleSubmit(e) {\n        e.preventDefault();\n        dispatch(touchAllInputs());\n        if (!state.password.valid) return;\n        if (!state.passwordVerify.valid) return;\n        if (!state.username.valid) return;\n        if (!state.firstName.valid) return;\n        if (!state.lastName.valid) return;\n        let registerPayload = {\n            username: _.toLower(_.trim(state.username.value)),\n            firstName: _.trim(state.firstName.value),\n            lastName: _.trim(state.lastName.value),\n            password: _.trim(state.password.value)\n        };\n        console.log(registerPayload)\n        setProcessing(true)\n        try {\n            let response = await fetch('/register', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify(registerPayload),\n            });\n            if(response.status !== 200) throw new Error(`Error ${response.status}`)\n            console.log('success')\n            let token = new AccessToken(await response.json());\n            dispatch(setUserState(new UserState(token)))\n        } catch (error) {\n            setProcessing(false)\n            console.log(error)\n        }\n    }\n\n    async function handleChange({ name, value }) {\n        dispatch(setRegisterForm({ [name]: { value } }));\n    }\n\n    async function handleBlur(e, validationCallback) {\n        let { name, value } = e.target;\n        let { valid, error } = await validationCallback(value);\n        dispatch(validateRegisterForm({ [name]: { value, valid, touched: true, error } }));\n    }\n\n    return (\n        <Modal show={state.show} onHide={() => dispatch(hideRegisterForm())}>\n            <Form onSubmit={handleSubmit} noValidate>\n                <Modal.Header>\n                    <Modal.Title>Sign Up!</Modal.Title>\n                </Modal.Header>\n                <Modal.Body className=\"register-form-container\">\n                    <h6>Personal info:</h6>\n                    <Row>\n                        <Col xs={6}>\n                            <RegisterInput\n                                state={state.firstName}\n                                name=\"firstName\"\n                                capitalize\n                                validated\n                                placeholder=\"First Name\"\n                                validationCallback={validate.name}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                            />\n                        </Col>\n                        <Col xs={6}>\n                            <RegisterInput\n                                state={state.lastName}\n                                name=\"lastName\"\n                                validated\n                                placeholder=\"Last Name\"\n                                validationCallback={validate.name}\n                                capitalize\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                            />\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col xs={12}>\n                            {/* <RegisterInput\n                                state={state.email}\n                                name=\"email\"\n                                placeholder=\"Email\"\n                                validationCallback={(validate.email)}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                            /> */}\n                        </Col>\n                    </Row>\n                    <hr />\n                    <h6>Account Info:</h6>\n                    <Row>\n                        <Col xs={12}>\n                            <RegisterInput\n                                state={state.username}\n                                name=\"username\"\n                                validated\n                                trimWhitespace\n                                lowercase\n                                placeholder=\"Username\"\n                                validationCallback={async (value) => {\n                                    if (!/^\\w{1,}$/i.test(value))\n                                        return { valid: false, error: 'Invalid Username' };\n                                    let response = await fetch('validation/username/' + value);\n                                    let valid = await response.json();\n                                    let error = valid\n                                        ? 'Username is available'\n                                        : 'Username is not available';\n                                    return { valid, error };\n                                }}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                            />\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col xs={12}>\n                            <RegisterInput\n                                type=\"password\"\n                                state={state.password}\n                                name=\"password\"\n                                validated\n                                placeholder=\"Password\"\n                                validationCallback={validate.password}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                            />\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col xs={12}>\n                            <RegisterInput\n                                type=\"password\"\n                                state={state.passwordVerify}\n                                name=\"passwordVerify\"\n                                validated\n                                placeholder=\"Verify Password\"\n                                validationCallback={(value) => {\n                                    let valid = state.password.value === value;\n                                    let error = valid ? '' : 'Passwords do not match';\n                                    return { valid, error };\n                                }}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                            />\n                        </Col>\n                    </Row>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"default\" onClick={() => dispatch(hideRegisterForm())}>\n                        Cancel\n                    </Button>\n                    <Button\n                        onClick={handleSubmit}\n                        type=\"submit\"\n                        disabled={processing}\n                        variant=\"default\" \n                        className=\"button-light-green\"\n                        >\n                        {processing ? 'Creating Account' : 'Create Account'}\n                    </Button>\n                </Modal.Footer>\n            </Form>\n        </Modal>\n    );\n}\n","import React from 'react';\nimport './LoginForm.scss';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setLoginForm, logIn } from './state/loginFormActions';\nimport { showRegisterForm } from 'components/register_form/state/registerFormActions';\nimport RegisterForm from 'components/register_form/registerForm';\n\nexport default function LoginForm() {\n    let state = useSelector((state) => state.loginForm);\n    let { attemptingLogin } = useSelector((state) => state.UserState);\n\n    const dispatch = useDispatch();\n\n    return (\n        <div className=\"login-container\">\n            {!attemptingLogin && (\n                <Form\n                    className=\"form\"\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        console.log('signing in');\n                        dispatch(logIn());\n                    }}>\n                    <div className=\"login\">\n                        <Row className=\"form-row\">\n                            <Col className=\"form-col\" md=\"auto\">\n                                <Form.Control\n                                    isInvalid={state.invalidUsername}\n                                    name=\"username\"\n                                    className=\"username\"\n                                    placeholder=\"User Name\"\n                                    value={state.username}\n                                    onChange={(e) => {\n                                        dispatch(setLoginForm({ username: e.target.value }));\n                                    }}\n                                />\n                            </Col>\n                            <Col className=\"form-col\" md=\"auto\">\n                                <Form.Control\n                                    isInvalid={state.invalidPassword}\n                                    name=\"password\"\n                                    className=\"password\"\n                                    type=\"password\"\n                                    value={state.password}\n                                    onChange={(e) => {\n                                        dispatch(setLoginForm({ password: e.target.value }));\n                                    }}\n                                    placeholder=\"Password\"\n                                />\n                            </Col>\n                            <Col className=\"form-col\" xs={6} md=\"auto\">\n                                <Button type=\"submit\" className=\"login-button\" variant=\"light\">\n                                    Sign In\n                                </Button>\n                            </Col>\n                            <Col className=\"form-col\" xs={6} md=\"auto\">\n                                <Button\n                                    onClick={() => dispatch(showRegisterForm())}\n                                    className=\"button-dark-green signup-button\"\n                                    variant=\"success\">\n                                    Sign Up\n                                </Button>\n                                <RegisterForm />\n                            </Col>\n                        </Row>\n                    </div>\n                </Form>\n            )}\n        </div>\n    );\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { hideUserOptions, showUserOptions } from './state/UserMenuActions';\nimport Button from 'react-bootstrap/Button';\nimport Offcanvas from 'react-bootstrap/Offcanvas';\nimport './UserMenu.scss';\nimport { LogOut } from 'components/common/state/UserStateActions';\nimport { useState } from 'react';\n\nexport default function UserMenu() {\n    let state = useSelector((state) => state.userMenu);\n    let [loggingOut, setLoggingOut] = useState(false);\n    let mobile = useSelector(state => state.viewport.mobile)\n    const dispatch = useDispatch();\n    return (\n        <div>\n            {/* <h4>\n                Hello, {useSelector((state) => state.UserState.firstName)}\n                <Button className=\"user-menu-button\"\n                    variant=\"outline-light\"\n                    style={{ marginLeft: '20px', color: 'white', borderColor: 'white' }}\n                    onClick={() => dispatch(showUserOptions())}>\n                    <i className=\"fas fa-bars\"></i>\n                </Button>\n            </h4> */}\n            <Offcanvas\n                className=\"user-menu\"\n                show={state.show}\n                onHide={() => dispatch(hideUserOptions())}\n                placement={mobile ? 'bottom' : 'end'}>\n                <Offcanvas.Header closeButton>\n                    <Offcanvas.Title>Your Account</Offcanvas.Title>\n                </Offcanvas.Header>\n                <Offcanvas.Body>\n                    <div className=\"options-container\">\n                        <ul>\n                            <li>\n                                <button className=\"link\">Account Settings</button>\n                            </li>\n                            <li>\n                                <button className=\"link\">Help</button>\n                            </li>\n                        </ul>\n                    </div>\n                    <div className=\"logout-button-container\">\n                        <hr />\n                        <Button\n                            disabled={loggingOut}\n                            variant=\"default\"\n                            className=\"logout button-dark-green\"\n                            onClick={ async () => {\n                                setLoggingOut(true)\n                                await dispatch(LogOut());\n                            }}>\n                            {loggingOut ? 'Logging Out' : 'Log Out'}\n                        </Button>\n                    </div>\n                </Offcanvas.Body>\n            </Offcanvas>\n        </div>\n    );\n}\n","export function showUserOptions(){\n    return {\n        type: 'USER_MENU/SHOW'\n    }\n}\nexport function hideUserOptions(){\n    return {\n        type: 'USER_MENU/HIDE'\n    }\n}","import React from 'react';\nimport LoginForm from '../login_form/LoginForm';\nimport './Header.scss';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button'\n//import CurrentUser from 'components/header/CurrentUser'\nimport UserMenu from 'components/user_menu/UserMenu';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { showUserOptions } from 'components/user_menu/state/UserMenuActions';\n\nexport default function Header() {\n    let loggedIn = useSelector((state) => state.UserState.isLoggedIn);\n    let mobile = useSelector((state) => state.viewport.mobile);\n    let dispatch = useDispatch()\n\n    function UserMenuButton() {\n        return (\n            <div>\n                <h2>\n                    Hello, {useSelector((state) => state.UserState.firstName)}\n                        <Button className=\"user-menu-button\"\n                            variant=\"outline-light\"\n                            style={{ marginLeft: '20px', color: 'white', borderColor: 'white' }}\n                            onClick={() => dispatch(showUserOptions())}>\n                            <i className=\"fas fa-bars\"></i>\n                        </Button>\n                </h2>\n            </div>\n        )\n    }\n\n    return (\n        <Container fluid className=\"header-container\">\n            <Row className=\"header\">\n                <Col xs={12} md={true} className=\"logo\">\n                    <h2>\n                        Food <span className=\"x\">x</span> Mood{' '}\n                    </h2>\n                </Col>\n                <Col xs={0} md={true} className=\"filler\"></Col>\n                <Col xs={0} md={'auto'} className=\"login\">\n                    {loggedIn && !mobile && <UserMenuButton />}\n                    {!loggedIn && !mobile && <LoginForm />}\n                </Col>\n            </Row>\n        </Container>\n    );\n}\n","import axios from 'axios';\n\nexport const get = async (route) => {\n    console.log('api get: ' + route);\n    let response = await axios({\n        method: 'get',\n        url: `/api/${route}`\n    });\n    return response.data;\n};\n\nexport const post = async (route, data) => {\n    let response = await axios({\n        method: 'post',\n        url: `/api/${route}`,\n        data,\n    });\n    return response.data;\n};\n\nexport const put = async (route, data) => {\n    let response = await axios({\n        method: 'put',\n        url: `/api/${route}`,\n        data,\n    });\n    return response.data;\n};\n\nexport const deleteByID = async (route, _id) => {\n    let response = await axios({\n        method: 'delete',\n        url: `/api/${route}/${_id}`,\n    });\n    return response.data;\n};\n","import * as API from 'components/common/utils/api.js';\n\nfunction loadingActivity() {\n    return {\n        type: 'ACTIVITY/LOADING',\n    };\n}\n\nfunction buildKeywordQuery(keywords) {\n    let mealQuery = keywords.map((keyword) => {\n        return {\n            ingredients: { $elemMatch: { name: { $regex: keyword, $options: 'i' } } },\n        };\n    });\n    let healthCheckQuery = keywords.map((keyword) => {\n        return {\n            symptoms: { $elemMatch: { description: { $regex: keyword, $options: 'i' } } },\n        };\n    });\n    let mealTypeQuery = keywords.map((keyword) => {\n        return {\n            mealType: { $regex: keyword, $options: 'i' },\n        };\n    });\n\n    return {\n        $or: [...healthCheckQuery, ...mealQuery, ...mealTypeQuery],\n    };\n}\n\nfunction buildQuery(getState) {\n    let andArray = [];\n    andArray.push(getState().activity.filters.type);\n    console.log(andArray);\n    let keywords = getState().activity.filters.keywords;\n    if (keywords.length > 0) {\n        andArray.push(buildKeywordQuery(keywords));\n    }\n    console.log(andArray);\n\n    return { $and: andArray };\n}\n\nexport function setActivity() {\n    return async (dispatch, getState) => {\n        try {\n            dispatch(loadingActivity());\n            let query = buildQuery(getState);\n            console.log(JSON.stringify(query));\n            let response = await API.get(`activity/?filter=${JSON.stringify(query)}`);\n            let data = Object.fromEntries(\n                response.map((entry) => {\n                    //CONVERTS ARRAY TO OBJECT KEYED BY _ID\n                    let { _id } = entry;\n                    return [_id, entry];\n                })\n            );\n            dispatch({ type: 'ACTIVITY/SET_DATA', payload: { data, loading: false } });\n        } catch (error) {\n            console.log(error);\n        }\n    };\n}\n\nexport function setFilterType(query) {\n    return {\n        type: 'ACTIVITY/FILTER/SET_TYPE',\n        payload: query,\n    };\n}\n\nexport function addFilterKeyword(keyword) {\n    return {\n        type: 'ACTIVITY/FILTER/ADD_KEYWORD',\n        payload: keyword,\n    };\n}\nexport function deleteFilterKeyword(payload) {\n    return {\n        type: 'ACTIVITY/FILTER/DELETE_KEYWORD',\n        payload,\n    };\n}\n","import * as activityActions from \"components/activity/state/ActivityActions\"\n\nexport function setCurrentView(view){\n    return {\n        type: 'VIEW/SET_CURRENT',\n        payload: view\n    }\n}\n\nexport function setViewToActivity(payload){\n    return (dispatch) => {\n        dispatch(activityActions.setFilterType(payload))\n        dispatch(setCurrentView('activity'))\n    }\n}\n\nexport function setViewToAnalysis(payload){\n    return (dispatch) => {\n        dispatch(setCurrentView('analysis'))\n    }\n}","import React from 'react';\nimport './NavigationMenu.scss';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setViewToActivity, setViewToAnalysis } from './common/state/ViewActions';\n\nexport default function Sidebar(props) {\n    let dispatch = useDispatch();\n    let viewportWidth = useSelector((state) => state.view.viewportWidth);\n    return (\n        <div className=\"navigation-menu-container\">\n            <div className=\"nav-group\">\n                <div className=\"nav-group-title\">\n                    <h5>Your Log</h5>\n                </div>\n                <div\n                    onClick={() => {\n                        dispatch(setViewToActivity({$or: [ {type:'meal'}, {type: 'healthCheck'}]}))\n                    }}\n                    className=\"nav-item\">\n                    <a href=\"#\">All Activity</a>\n                </div>\n                <div\n                    onClick={() => {\n                        dispatch(setViewToActivity({type: 'meal'}))\n                    }}\n                    //{ingredients: {$elemMatch: {name: 'Sriracha'}}}\n                    className=\"nav-item\">\n                    <a href=\"#\">Meals</a>\n                </div>\n                <div\n                    onClick={() => {\n                        dispatch(setViewToActivity({type: 'healthCheck'}))\n                    }}\n                    className=\"nav-item\">\n                    <a href=\"#\">Wellness</a>\n                </div>\n                <div className=\"nav-item-catagory\"></div>\n            </div>\n            <div className=\"nav-group\">\n                <div className=\"nav-group-title\">\n                    <h5>Analysis</h5>\n                </div>\n                <div\n                    className=\"nav-item\"\n                    onClick={() => {\n                        dispatch(setViewToAnalysis('analysis'));\n                    }}>\n                    <a href=\"#\">Food Items</a>\n                </div>\n                <div\n                    className=\"nav-item\"\n                    onClick={() => {\n                        dispatch(setViewToAnalysis('analysis'));\n                    }}>\n                    <a href=\"#\">Symptoms</a>\n                </div>\n                <div className=\"nav-item-catagory\"></div>\n            </div>\n        </div>\n    );\n}\n","import React from 'react';\nimport './NavigationMenuMobile.scss';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setCurrentView, setViewToActivity, setViewToAnalysis } from './common/state/ViewActions';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { showUserOptions } from './user_menu/state/UserMenuActions';\n\nexport default function Sidebar(props) {\n    let dispatch = useDispatch();\n    let currentView = useSelector((state) => state.view.currentView);\n\n    return (\n        <div className=\"navigation-menu-mobile-container\">\n            <Container fluid>\n                <Row>\n                    <Col className=\"col\" xs={4}>\n                        <div\n                            className={`nav-item ${currentView === 'activity' && 'active'}`}\n                            onClick={() => {\n                                dispatch(setViewToActivity({$or: [ {type:'meal'}, {type: 'healthCheck'}]}));\n                            }}>\n                            <a href=\"#\">\n                                <i className=\"fas fa-list-ul\"></i>\n                                <br />\n                                Activity\n                            </a>\n                        </div>\n                    </Col>\n                    <Col className=\"col\" xs={4}>\n                        <div\n                            className={`nav-item ${currentView === 'analysis' && 'active'}`}\n                            onClick={() => {\n                                dispatch(setViewToAnalysis());\n                            }}>\n                            <a href=\"#\">\n                                <i className=\"fas fa-chart-area\"></i>\n                                <br />\n                                Analysis\n                            </a>\n                        </div>\n                    </Col>\n                    <Col className=\"col\" xs={4}>\n                        <div\n                            className=\"nav-item\"\n                            onClick={() => {\n                                dispatch(showUserOptions());\n                            }}>\n                            <a href=\"#\">\n                                <i className=\"fas fa-cog\"></i>\n                                <br />\n                                Settings\n                            </a>\n                        </div>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    );\n}\n","import React from 'react';\nimport './Pill.scss';\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\n\nexport default function Pill(props) {\n    let { text, deleteable, onDelete, onClick, className, color, size, margin, highlight } = props;\n    return (\n        <ButtonGroup\n            className=\"pill-container\"\n            style={margin ? { marginRight: margin, marginBottom: margin } : { margin: 0 }}>\n            <div\n                onClick={onClick}\n                className={`pill-body pill-${size} pill-${color} ${\n                    deleteable && 'pill-deleteable'\n                } ${highlight && 'pill-highlight'}`}>\n                {text}\n            </div>\n            {deleteable && (\n                <Button\n                    onClick={onDelete}\n                    className={`button-dark-${color} delete-keyword ${\n                        className ? className : ''\n                    } delete-btn-${size}`}>\n                    <i className=\"fas fa-times\"></i>\n                </Button>\n            )}\n        </ButtonGroup>\n    );\n}\n","import UserState from 'components/common/utils/userState'\n\nconst initialState = {...new UserState(), attemptingLogin: true}\n\nexport default function UserStateReducer(state = initialState, action){\n    switch (action.type){\n        case 'USERSTATE/SET':\n            return {...action.payload, attemptingLogin: false}\n        default: return {...state }\n    }\n}","const initialState = {\n    data: {},\n    loading: true,\n    filters: {\n        type: { $or: [{ type: 'meal' }, { type: 'healthCheck' }] },\n        keywords: [],\n    },\n};\n\nexport default function ActivityReducer(state = initialState, action) {\n    let { payload } = action;\n    switch (action.type) {\n        case 'ACTIVITY/SET_DATA':\n            return { ...state, ...payload };\n        case 'ACTIVITY/LOADING':\n            return { ...state, loading: true };\n        case 'ACTIVITY/FILTER/SET_TYPE':\n            return { ...state, filters: { ...state.filters, type: payload } };\n        case 'ACTIVITY/FILTER/ADD_KEYWORD':\n            return {\n                ...state,\n                filters: {\n                    ...state.filters,\n                    keywords: [...state.filters.keywords, payload],\n                },\n            };\n        case 'ACTIVITY/FILTER/DELETE_KEYWORD':\n            return {\n                ...state,\n                filters: {\n                    ...state.filters,\n                    keywords: state.filters.keywords.filter((keyword) => {\n                        console.log(payload)\n                        return keyword !== payload;\n                    }),\n                },\n            };\n        default:\n            return state;\n    }\n}\n","const initialState = {\n    show: false,\n    ingredients: [],\n    time: '',\n    mealType: '',\n    _id: '',\n    new: false,\n    edit: false,\n    timeString: '',\n    dateString: '',\n};\n\nexport default function MealFormReducer(state = initialState, action) {\n    let { payload } = action;\n    switch (action.type) {\n        case 'MEAL_FORM/EDIT':\n            return { ...initialState, ...payload };\n        case 'MEAL_FORM/NEW':\n            return { ...initialState, ...payload };\n        case 'MEAL_FORM/CHANGE':\n            return { ...state, ...payload };\n        case 'MEAL_FORM/CLOSE':\n            return { ...initialState };\n        case 'MEAL_FORM/DELETE_INGREDIENT':\n            let ingredients = state.ingredients.filter(\n                (ingredient) => ingredient !== payload\n            );\n            return {\n                ...state,\n                ingredients,\n            };\n        default:\n            return state;\n    }\n}\n","const initialState = {\n    show: false,\n    symptoms: [],\n    time: '',\n    mood: null,\n    _id: '',\n    new: false,\n    edit: false,\n    dateString: '',\n    timeString: '',\n};\n\nexport default function HealtCheckFormReducer(state = initialState, action) {\n    let { payload } = action;\n    switch (action.type) {\n        case 'HEALTH_CHECK_FORM/EDIT':\n            return { ...initialState, ...payload };\n        case 'HEALTH_CHECK_FORM/NEW':\n            return { ...initialState, ...payload };\n        case 'HEALTH_CHECK_FORM/DELETE_SYMPTOM':\n            let symptoms = state.symptoms.filter(\n                (symptom) => symptom !== payload\n            );\n            return { ...state, symptoms };\n        case 'HEALTH_CHECK_FORM/CHANGE':\n            return { ...state, ...payload };\n        case 'HEALTH_CHECK_FORM/CLOSE':\n            return { ...initialState };\n        default:\n            return state;\n    }\n}\n","const initialState = {\n    username: '',\n    password: '',\n    show: false,\n    invalidPassword: false,\n    invalidUsername: false,\n};\n\nexport default function LoginFormReducer(state = initialState, action) {\n    let payload = action.payload;\n    switch (action.type) {\n        case 'LOGIN_FORM/SET':\n            return { ...state, ...payload };\n        case 'LOGIN_FORM/SHOW':\n            return { ...state, show: true };\n        case 'LOGIN_FORM/RESET':\n            return { ...initialState };\n        default:\n            return state;\n    }\n}\n","const initialState = {\n    show: false\n};\n\nexport default function UserOptionsReducer(state = initialState, action) {\n    switch (action.type) {\n        case 'USER_MENU/SHOW':\n            console.log('showing')\n            return {...state, show: true};\n        case 'USER_MENU/HIDE':\n            console.log('hiding')\n            return {...state, show: false};\n        default:\n            return state;\n    }\n}\n","const initialState = {\n    currentView: 'activity',\n    activity: {\n        active: true,\n        filter: 'all'\n    }\n};\n\n\nexport default function ViewReducer(state = initialState, action) {\n    let payload = action.payload\n    switch (action.type) {\n        case 'VIEW/SET_CURRENT':\n            return { ...initialState, currentView: payload };\n        default:\n            return state;\n    }\n}\n","const intitalInputState = { value: '', valid: false, touched: false, error: 'Required Field' };\nconst initialState = {\n    show: false,\n    firstName: { ...intitalInputState },\n    lastName: { ...intitalInputState },\n    email: { ...intitalInputState, valid: true },\n    username: { ...intitalInputState },\n    password: { ...intitalInputState },\n    passwordVerify: { ...intitalInputState },\n};\n\nexport default function RegisterFormReducer(state = initialState, action) {\n    let payload = action.payload;\n    switch (action.type) {\n        case 'REGISTER_FORM/SHOW':\n            return { ...state, show: true };\n        case 'REGISTER_FORM/HIDE':\n            return { ...state, show: false };\n        case 'REGISTER_FORM/SET':\n            return { ...state, ...payload };\n        case 'REGISTER_FORM/VALIDATE':\n            return { ...state, ...payload };\n        case 'REGISTER_FORM/TOUCH_ALL':\n            let outputState = {...state}\n            Object.keys(state).forEach((key)=>{\n                if(outputState[key].hasOwnProperty('touched')){\n                    outputState[key].touched = true;\n                }\n            })\n            return outputState\n        default:\n            return { ...state };\n    }\n}\n","const initialState = {\n    width: 4,\n    mobile: false\n};\n\n\nexport default function ViewportReducer(state = initialState, action) {\n    let payload = action.payload\n    switch (action.type) {\n        case 'VIEWPORT/SET_WIDTH':\n            console.log('setting viewport width to: ' + payload)\n            return {...payload}\n        default:\n            return state;\n    }\n}\n","import {combineReducers} from 'redux'\nimport UserStateReducer from 'components/common/state/UserStateReducer'\nimport ActivityReducer from 'components/activity/state/ActivityReducer.js'\nimport MealFormReducer from 'components/meal_form/state/MealFormReducer.js'\nimport HealthCheckFormReducer from 'components/health_check_form/state/healthCheckFormReducer'\nimport LoginFormReducer from 'components/login_form/state/loginFormReducer'\nimport UserMenuReducer from 'components/user_menu/state/UserMenuReducer'\nimport ViewReducer from './ViewReducer'\nimport RegisterFormReducer from 'components/register_form/state/registerFormReducer'\nimport ViewportReducer from './ViewportReducer'\n\nconst rootReducer = combineReducers({\n    UserState: UserStateReducer,\n    activity: ActivityReducer,\n    mealForm: MealFormReducer,\n    healthCheckForm: HealthCheckFormReducer,\n    loginForm: LoginFormReducer,\n    userMenu: UserMenuReducer,\n    view: ViewReducer,\n    registerForm: RegisterFormReducer,\n    viewport: ViewportReducer,\n})\n\nexport default rootReducer","import { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './RootReducer.js';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst middleWare = compose(applyMiddleware(thunk));\n\nconst store = createStore(rootReducer, composeWithDevTools(middleWare));\n\nexport default store;\n","import dayjs from 'dayjs';\nimport customParseFormat from 'dayjs/plugin/customParseFormat';\ndayjs().format();\ndayjs.extend(customParseFormat);\n\nexport function stringToUnixTime(date, time) {\n    return dayjs(`${date} ${time}`, 'YYYY-MM-DD HH:mm').unix();\n}\nexport function unixToDateString(unixTime = dayjs().unix()) {\n    return dayjs.unix(unixTime).format('YYYY-MM-DD');\n}\nexport function unixToTimeString(unixTime = dayjs().unix()) {\n    return dayjs.unix(unixTime).format('HH:mm');\n}\n","import store from 'components/common/state/Store';\nimport { unixToDateString, unixToTimeString } from 'components/common/utils/DateHandler';\n\nexport function editMeal(_id) {\n    let currentEntry = store.getState().activity.data[_id];\n    return {\n        type: 'MEAL_FORM/EDIT',\n\n        payload: {\n            edit: true,\n            show: true,\n            ...currentEntry,\n            timeString: unixToTimeString(currentEntry.time),\n            dateString: unixToDateString(currentEntry.time),\n        },\n    };\n}\n\nexport function formChange(payload) {\n    return {\n        type: 'MEAL_FORM/CHANGE',\n        payload,\n    };\n}\n\nexport function deleteIngredient(payload) {\n    return {\n        type: 'MEAL_FORM/DELETE_INGREDIENT',\n        payload,\n    };\n}\n\nexport function newMeal() {\n    console.log('new meal action');\n    return {\n        type: 'MEAL_FORM/NEW',\n        payload: {\n            new: true,\n            show: true,\n            timeString: unixToTimeString(),\n            dateString: unixToDateString(),\n        },\n    };\n}\n\nexport function closeMealForm() {\n    return {\n        type: 'MEAL_FORM/CLOSE',\n    };\n}\n","import store from 'components/common/state/Store';\nimport {\n    unixToDateString,\n    unixToTimeString,\n} from 'components/common/utils/DateHandler';\n\nexport function editHealthCheck(id) {\n    let currentEntry = store.getState().activity.data[id];\n    return {\n        type: 'HEALTH_CHECK_FORM/EDIT',\n\n        payload: {\n            edit: true,\n            show: true,\n            ...currentEntry,\n            timeString: unixToTimeString(currentEntry.time),\n            dateString: unixToDateString(currentEntry.time),\n        },\n    };\n}\n\nexport function formChange(payload) {\n    return {\n        type: 'HEALTH_CHECK_FORM/CHANGE',\n        payload,\n    };\n}\n\nexport function deleteSymptom(payload) {\n    return {\n        type: 'HEALTH_CHECK_FORM/DELETE_SYMPTOM',\n        payload,\n    };\n}\n\nexport function newHealthCheck() {\n    console.log('new meal action');\n    return {\n        type: 'HEALTH_CHECK_FORM/NEW',\n        payload: {\n            new: true,\n            show: true,\n            timeString: unixToTimeString(),\n            dateString: unixToDateString(),\n        },\n    };\n}\nexport function closeHealthCheckForm() {\n    return {\n        type: 'HEALTH_CHECK_FORM/CLOSE',\n    };\n}\n","import React from 'react';\nimport * as API from '../common/utils/api.js';\nimport { useDispatch } from 'react-redux';\nimport { editMeal } from 'components/meal_form/state/MealFormActions';\nimport { setActivity } from 'components/activity/state/ActivityActions';\nimport { editHealthCheck } from 'components/health_check_form/state/healthCheckFormActions.js';\n\nexport default function ManageEntry(props) {\n    const dispatch = useDispatch();\n    let { _id, type } = props.entry;\n    let endpoint;\n    if (type === 'meal') endpoint = 'meals';\n    if (type === 'healthCheck') endpoint = 'health-checks';\n\n    async function handleDelete(e) {\n        e.preventDefault();\n        try {\n            await API.deleteByID(`activity/${endpoint}`, _id);\n            dispatch(setActivity());\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    function handleEdit(e) {\n        e.preventDefault();\n        if (type === 'meal') dispatch(editMeal(_id));\n        if (type === 'healthCheck') dispatch(editHealthCheck(_id));\n    }\n\n    return (\n        <div>\n            <a onClick={handleDelete} href=\"#\"><i  className=\"fas fa-times manage-icon\"></i></a>\n            <a onClick={handleEdit} href=\"#\">\n                <i  className=\"fas fa-pencil-alt manage-icon\"></i>\n            </a>\n        </div>\n    );\n}\n","import React from 'react';\nimport dayjs from 'dayjs';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Pill from '../Pill.jsx';\nimport ManageEntry from './ManageEntry';\nimport './Entry.scss';\nimport { useSelector } from 'react-redux';\n\nexport default function MealEntry(props) {\n    let { entry } = props;\n    let { ingredients, mealType, time } = entry;\n    let currentKeywordFilters = useSelector(state => state.activity.filters.keywords)\n\n    function getEmoji(type) {\n        return {\n            Breakfast: '🍳',\n            Lunch: '🥪',\n            Dessert: '🧁',\n            Snack: '🍇',\n            Dinner: '🍴',\n            Drink: '🥤',\n            HealthCheck: '❤️',\n        }[type];\n    }\n\n    return (\n        <Container className=\"entry-container\" fluid>\n            <Row>\n                <Col xs={12} md=\"auto\" className=\"time-container\">\n                    {dayjs.unix(time).format('h:mm A')}\n                </Col>\n                <Col xs={12} md={true} className=\"entry-data-container meal-entry-container\">\n                    <Row>\n                        <Col>\n                            <Row className=\"entry-heading\">\n                                <Col>\n                                    <h5>\n                                        <span className=\"emoji\">{getEmoji(mealType)}</span>\n                                        {mealType}\n                                    </h5>\n                                </Col>\n                            </Row>\n                            <Row className=\"entry-section\">\n                                <Col xs=\"auto\">\n                                    <div className=\"section-title\">Ingredients:</div>\n                                </Col>\n                                <Col xs={true}>\n                                    {ingredients.map((ingredient, index) => {\n                                        let matchesKeyword = currentKeywordFilters.some(keyword=>{\n                                            return ingredient.name.match(new RegExp(keyword, 'gi'))\n                                        })\n                                        return (\n                                            <Pill margin={5} highlight={matchesKeyword} key={index} text={ingredient.name} color=\"brown\" size=\"sm\" />\n                                        );\n                                    })}\n                                </Col>\n                            </Row>\n                        </Col>\n                        <Col xs={12} md=\"auto\" className=\"manage-entry-col\">\n                            <ManageEntry entry={entry} />\n                        </Col>\n                    </Row>\n                </Col>\n            </Row>\n        </Container>\n    );\n}\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Pill from '../Pill.jsx';\nimport './Entry.scss';\nimport ManageEntry from './ManageEntry.jsx';\nimport dayjs from 'dayjs';\nimport { useSelector } from 'react-redux';\n\n\nexport default function HealthCheckEntry(props) {\n    let { entry } = props;\n    let { symptoms, time } = entry;\n    let currentKeywordFilters = useSelector(state => state.activity.filters.keywords)\n\n    return (\n        <Container className=\"entry-container\" fluid>\n            <Row>\n                <Col xs={12} md=\"auto\" className=\"time-container\">\n                    {dayjs.unix(time).format('h:mm A')}\n                </Col>\n                <Col xs={12} md={true} className=\"entry-data-container health-check-entry-container\">\n                    <Row>\n                        <Col>\n                            <Row className=\"entry-heading\">\n                                <Col>\n                                    <h5>\n                                        <span className=\"emoji\">❤️</span>Wellness Check\n                                    </h5>\n                                </Col>\n                            </Row>\n                            <Row className=\"entry-section\">\n                                <Col xs=\"auto\">\n                                    <div className=\"section-title\">Symptoms:</div>\n                                </Col>\n                                <Col xs={true}>\n                                    {symptoms.map((symptom, index) => {\n                                        let matchesKeyword = currentKeywordFilters.some(keyword=>{\n                                            return symptom.description.match(new RegExp(keyword, 'gi'))\n                                        })\n                                        return (\n                                            <Pill margin={5} key={index} highlight={matchesKeyword} text={symptom.description} color=\"brown\" size=\"sm\" />\n                                        );\n                                    })}\n                                </Col>\n                            </Row>\n                        </Col>\n                        <Col xs={12} md=\"auto\" className=\"manage-entry-col\">\n                            <ManageEntry entry={entry} />\n                        </Col>\n                    </Row>\n                </Col>\n            </Row>\n        </Container>\n    );\n}\n","import React from 'react';\nimport MealEntry from './MealEntry.jsx';\nimport HealthCheckEntry from './HealthCheckEntry.jsx';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport './DateBlock.scss';\n\nexport default function DateBlock(props) {\n    let { entries, index } = props;\n    return (\n        <div>\n            {index > 0 && <hr />}\n            <Container fluid className=\"date-block-container\">\n                <Row>\n                    <Col xs={12} md='auto' className=\"date-col\">\n                        <div className=\"date-container\">\n                            {entries[0].date}\n                        </div>\n                    </Col>\n                    <Col xs={12} md={true}  className=\"entries-col\">\n                        {entries.map((entry) => {\n                            if (entry.type === 'meal')\n                                return <MealEntry key={entry._id} entry={entry} />;\n                            if (entry.type === 'healthCheck')\n                                return <HealthCheckEntry key={entry._id} entry={entry} />;\n                            return null\n                        })}\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    );\n}\n","import React from 'react';\nimport './ActivityControls.scss';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { newMeal } from 'components/meal_form/state/MealFormActions';\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport { newHealthCheck } from 'components/health_check_form/state/healthCheckFormActions';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport { useState } from 'react';\nimport { addFilterKeyword, deleteFilterKeyword } from './state/ActivityActions';\nimport Pill from 'components/Pill';\n\nexport default function AddButtonsContainer(props) {\n    let [filterInput, setFilterInput] = useState({ value: '', valid: false });\n    const dispatch = useDispatch();\n    let currentKeywordFilters = useSelector((state) => state.activity.filters.keywords);\n\n    function handleFilterInputSubmit() {\n        if (filterInput.value === '' || !filterInput.valid || filterInput.value.match(/^\\s$/))\n            return;\n        dispatch(addFilterKeyword(filterInput.value));\n        setFilterInput({ value: '', valid: false });\n    }\n\n    return (\n        <Container className=\"activity-controls-container\">\n            <Row>\n                <Col className=\"bs-col\" xs={6} md=\"auto\">\n                    <Button\n                        onClick={() => {\n                            dispatch(newMeal());\n                        }}\n                        className=\"button-light-brown\"\n                        variant=\"default\">\n                        <i className=\"fas fa-plus\"></i> Add Meal\n                    </Button>\n                </Col>\n                <Col className=\"bs-col\" xs={6} md=\"auto\">\n                    <Button\n                        onClick={() => {\n                            dispatch(newHealthCheck());\n                        }}\n                        className=\"button-light-brown\"\n                        variant=\"default\">\n                        <i className=\"fas fa-plus\"></i> Add Wellness Check\n                    </Button>\n                </Col>\n                <Col className=\"bs-col\" xs={12} md=\"auto\">\n                    <form\n                        onSubmit={(e) => {\n                            e.preventDefault();\n                            handleFilterInputSubmit();\n                        }}>\n                        <InputGroup>\n                            <Form.Control\n                                className=\"filter-input\"\n                                onSubmit={(e) => {\n                                    console.log(e);\n                                }}\n                                value={filterInput.value}\n                                onChange={(e) => {\n                                    if (e.target.value.match(/^\\s/)) return false;\n                                    setFilterInput({ valid: true, value: e.target.value });\n                                }}\n                                placeholder=\"Filter Results\"\n                                type=\"input\"\n                            />\n                            <InputGroup.Text\n                                className=\"submit-btn2 button-light-brown\"\n                                onClick={handleFilterInputSubmit}>\n                                +\n                            </InputGroup.Text>\n                        </InputGroup>\n                    </form>\n                </Col>\n            </Row>\n            <Row>\n                {currentKeywordFilters.map((keyword, i) => {\n                    return (\n                        <Col key={i} className=\"bs-col filter-instance\" xs=\"auto\">\n                            <Pill\n                                text={'#' + keyword}\n                                size=\"lg\"\n                                color=\"brown\"\n                                deleteable\n                                onDelete={() => {\n                                    dispatch(deleteFilterKeyword(keyword));\n                                }}\n                            />\n                        </Col>\n                    );\n                })}\n            </Row>\n        </Container>\n    );\n}\n","import React, { useState } from 'react';\nimport _ from 'lodash';\nimport { AsyncTypeahead, Hint, Menu } from 'react-bootstrap-typeahead';\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\nimport * as API from './utils/api.js';\nimport { Form } from 'react-bootstrap';\n\nexport default function InputAutoComplete(props) {\n    let {\n        submit,\n        placeholder,\n        apiEndpoint,\n        allowNewItems,\n        suggestions,\n        clearOnSubmit,\n        selectOnBlur,\n    } = props;\n\n    let [isLoading, setIsLoading] = useState(false);\n    let [options, setOptions] = useState([]);\n    let [selected, setSelected] = useState([]);\n    let [currentSelection, setCurrentSelection] = useState();\n    let [lastSubmittedVal, setLastSubmittedVal] = useState();\n\n    let inputText;\n\n    async function handleSearch(query) {\n        if (suggestions) {\n            //if suggestions prop is supplied use supplied array\n            setOptions(suggestions);\n        } else {\n            //if no suggestions prop is supplied, query api for suggestions\n            setIsLoading(true);\n            query = _.startCase(_.lowerCase(query));\n            let url = `suggestions/${apiEndpoint}/${query}`;\n            setOptions(await API.get(url));\n            setIsLoading(false);\n        }\n    }\n\n    function submitHandler(value) {\n        if (value.length <= 0) return;\n        setLastSubmittedVal(value)\n        let outputValue = value[0];\n        let newItem = false;\n        if (typeof outputValue === 'object') {\n            outputValue = outputValue.label;\n            newItem = true;\n        }\n        outputValue = _.startCase(_.lowerCase(outputValue));\n        if (allowNewItems && newItem) {\n            postValue(outputValue);\n        }\n        submit(outputValue);\n        if (clearOnSubmit) setSelected(['']);\n    }\n\n    async function postValue(value) {\n        await API.post(apiEndpoint, { value });\n    }\n\n    return (\n        <AsyncTypeahead\n            selectHintOnEnter={true}\n            id=\"autocomplete-input\"\n            minLength={1}\n            allowNew={allowNewItems}\n            delay={100}\n            newSelectionPrefix=\"Add a new item: \"\n            isLoading={isLoading}\n            options={options}\n            selected={selected}\n            placeholder={placeholder}\n            onChange={(newSelection) => {   \n                setSelected(newSelection);\n                submitHandler(newSelection);\n            }}\n            onMenuToggle={(opening) => {\n                //if select on blur prop is true, and menu is being closed\n                if (selectOnBlur && !opening) {\n                    if (inputText && currentSelection) {\n                        setSelected([currentSelection]);\n                        submitHandler([currentSelection]);\n                        setCurrentSelection('');\n                    } else if(!inputText) {\n                        setSelected(['']);\n                        submitHandler(['']);\n                    }   \n                }\n            }}\n            highlightOnlyResult={selectOnBlur}\n            onSearch={handleSearch}>\n            {selectOnBlur &&\n                ((state) => {\n                    inputText = state.text;\n                    //next line is a workaround, active index is not set if there is only one result\n                    if (state.results.length === 1) return setCurrentSelection(state.results[0]); \n                    return setCurrentSelection(state.results[state.activeIndex]);\n                })}\n        </AsyncTypeahead>\n    );\n}\n","import React from 'react';\nimport { useState } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { useDispatch, useSelector } from 'react-redux';\nimport _ from 'lodash';\n\nimport InputAutoComplete from 'components/common/InputAutoComplete';\nimport { closeMealForm, deleteIngredient, formChange } from './state/MealFormActions';\nimport * as API from 'components/common/utils/api';\nimport { stringToUnixTime } from 'components/common/utils/DateHandler';\nimport './MealForm.scss';\nimport { setActivity } from 'components/activity/state/ActivityActions';\nimport Pill from 'components/Pill';\n\nexport default function MealForm(props) {\n    let [processing, setProcessing] = useState(false);\n    let state = useSelector((state) => state.mealForm);\n    const dispatch = useDispatch();\n\n    async function handleSubmit() {\n        try {\n            setProcessing(true);\n            let unixTime = stringToUnixTime(state.dateString, state.timeString);\n            let newMeal = {\n                ingredients: state.ingredients.map((ingredient) => ingredient.name),\n                type: state.mealType,\n                time: unixTime,\n            };\n            if (state.new) await API.post('activity/meals', newMeal);\n            if (state.edit) await API.put('activity/meals/' + state._id, newMeal);\n            setProcessing(false);\n            handleClose();\n            dispatch(setActivity());\n        } catch (error) {\n            console.log(error);\n            setProcessing(false);\n            //handleClose();\n        }\n    }\n    async function handleClose() {\n        dispatch(closeMealForm());\n    }\n\n    function addIngredient(newIngredient) {\n        newIngredient = _.startCase(_.lowerCase(newIngredient));\n        if (state.ingredients.map((ingredient) => ingredient.name).includes(newIngredient)) return;\n        dispatch(\n            formChange({\n                ingredients: [...state.ingredients, { name: newIngredient }],\n            })\n        );\n    }\n\n    return (\n        <Modal show={state.show} onHide={handleClose}>\n            <Modal.Header closeButton>\n                {state.edit && <Modal.Title>Edit Meal</Modal.Title>}\n                {state.new && <Modal.Title>Post New Meal</Modal.Title>}\n            </Modal.Header>\n            <Modal.Body>\n                <div className=\"meal-form-container\">\n                    <Row>\n                        <Col xs={12}>\n                            <InputAutoComplete\n                                selectOnBlur\n                                submit={(value) => {\n                                    dispatch(formChange({ mealType: value }));\n                                }}\n                                suggestions={[\n                                    'Breakfast',\n                                    'Lunch',\n                                    'Dinner',\n                                    'Snack',\n                                    'Dessert',\n                                    'Drink',\n                                ]}\n                                defaultInputValue={state.mealType}\n                                placeholder=\"Meal Type (ie: Breakfast, Lunch, Dinner)\"\n                            />\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col xs={6}>\n                            <Form.Control\n                                type=\"date\"\n                                value={state.dateString}\n                                onChange={(e) => {\n                                    dispatch(\n                                        formChange({\n                                            dateString: e.target.value,\n                                        })\n                                    );\n                                }}\n                            />\n                        </Col>\n                        <Col xs={6}>\n                            <Form.Control\n                                type=\"time\"\n                                value={state.timeString}\n                                onChange={(e) => {\n                                    dispatch(\n                                        formChange({\n                                            timeString: e.target.value,\n                                        })\n                                    );\n                                }}\n                            />\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <InputAutoComplete\n                                allowNewItems\n                                submit={addIngredient}\n                                apiEndpoint=\"ingredients\"\n                                clearOnSubmit\n                                placeholder=\"Add Ingredients One at a Time\"\n                            />\n                        </Col>\n                    </Row>\n                    <div className=\"ingredient-list\">\n                        {state.ingredients.map((ingredient, index) => {\n                            return (\n                                <Pill\n                                    key={index}\n                                    deleteable\n                                    margin=\"10px\"\n                                    onDelete={() => {\n                                        dispatch(deleteIngredient(ingredient));\n                                    }}\n                                    text={ingredient.name}\n                                    color=\"brown\"\n                                    size=\"md\"\n                                />\n                            );\n                        })}\n                    </div>\n                </div>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"default\" onClick={handleClose}>\n                    Cancel\n                </Button>\n                {state.new && (\n                    <Button\n                        className=\"button-light-green\"\n                        disabled={processing}\n                        variant=\"default\"\n                        onClick={handleSubmit}>\n                        {processing ? 'Posting' : 'Post Meal'}\n                    </Button>\n                )}\n                {state.edit && (\n                    <Button\n                        className=\"button-light-green\"\n                        disabled={processing}\n                        variant=\"default\"\n                        onClick={handleSubmit}>\n                        {processing ? 'Saving' : 'Save Changes'}\n                    </Button>\n                )}\n            </Modal.Footer>\n        </Modal>\n    );\n}\n","import dayjs from 'dayjs';\nimport isYesterday from 'dayjs/plugin/isYesterday';\nimport isToday from 'dayjs/plugin/isToday';\nimport customParseFormat from 'dayjs/plugin/customParseFormat';\ndayjs().format();\ndayjs.extend(isYesterday);\ndayjs.extend(isToday);\ndayjs.extend(customParseFormat);\n\nfunction unixTimeToDate(time) {\n    let date = dayjs.unix(time);\n    if (date.isYesterday()) return 'Yesterday';\n    if (date.isToday()) return 'Today';\n    let oneWeekAgo = dayjs().subtract(1, 'week');\n    if (date.isAfter(oneWeekAgo)) {\n        return date.format('dddd');\n    }\n    return date.format('MMM DD');\n}\n\nfunction copyObjToArray(dataObject) {\n    return Object.entries(dataObject).map(([key, val]) => {\n        return { ...val }; //spread operator prevents state mutation by creating shallow copy\n    });\n}\n\nexport const build = (activityEntriesObj) => {\n    let activityEntriesArrSorted = copyObjToArray(activityEntriesObj).sort((a, b) => b.time - a.time);\n    return activityEntriesArrSorted.reduce((output, currEntry, index, currArray) => {\n        currEntry.date = unixTimeToDate(currEntry.time);\n        if (index === 0) {\n            output.push([currEntry]);\n            return output;\n        }\n        let lastEntry = currArray[index - 1];\n        if (lastEntry.date === currEntry.date) {\n            output[output.length - 1].unshift(currEntry);\n            return output;\n        }\n        output.push([currEntry]);\n        return output;\n    }, []);\n};\n\n//OLD HARD TO READ CODE\n\n// export function create(dataObject) {\n//     console.log(dataObject)\n//     let dataArray = toSortedArray(dataObject)\n//     return dataArray.reduce((acc, currentEntry) => {\n//         currentEntry.date = toDate(currentEntry.time);\n//         let lastSubArray = acc[acc.length - 1];\n//         if (!lastSubArray) return [[currentEntry]];\n//         let lastEntry = lastSubArray[lastSubArray.length - 1];\n//         if (lastEntry.date === currentEntry.date) {\n//             acc[acc.length - 1].unshift(currentEntry);\n//             return acc;\n//         }\n//         acc.push([currentEntry]);\n//         return acc;\n//     }, []);\n// }\n","import React, { useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport _ from 'lodash';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { closeHealthCheckForm, formChange, deleteSymptom } from './state/healthCheckFormActions';\nimport InputAutoComplete from 'components/common/InputAutoComplete';\nimport Pill from 'components/Pill';\nimport * as API from 'components/common/utils/api';\nimport { stringToUnixTime } from 'components/common/utils/DateHandler';\nimport './HealthCheckForm.scss';\nimport { setActivity } from 'components/activity/state/ActivityActions';\n\nexport default function HealthCheckForm() {\n    let [processing, setProcessing] = useState(false);\n    let state = useSelector((state) => state.healthCheckForm);\n    let dispatch = useDispatch();\n\n    function handleClose() {\n        dispatch(closeHealthCheckForm());\n    }\n    function handleMoodSelect(val) {\n        dispatch(\n            formChange({\n                mood: val,\n            })\n        );\n    }\n    function addSymptom(newSymptom) {\n        newSymptom = _.startCase(_.lowerCase(newSymptom));\n        console.log(state.symptoms);\n        if (state.symptoms.map((symptom) => symptom.description).includes(newSymptom)) return;\n        dispatch(\n            formChange({\n                symptoms: [...state.symptoms, { description: newSymptom }],\n            })\n        );\n    }\n    async function handleSubmit() {\n        try {\n            setProcessing(true);\n            let unixTime = stringToUnixTime(state.dateString, state.timeString);\n            let newHealthCheck = {\n                symptoms: state.symptoms.map((symptom) => symptom.description),\n                mood: state.mood,\n                time: unixTime,\n            };\n            if (state.new) await API.post('activity/health-checks', newHealthCheck);\n            if (state.edit) await API.put('activity/health-checks/' + state._id, newHealthCheck);\n            setProcessing(false);\n            handleClose();\n            dispatch(setActivity());\n        } catch (error) {\n            console.log(error);\n            setProcessing(false);\n            handleClose();\n        }\n    }\n\n    return (\n        <Modal show={state.show} onHide={handleClose}>\n            <Modal.Header closeButton>\n                {state.edit && <Modal.Title>Edit Wellness Check</Modal.Title>}\n                {state.new && <Modal.Title>Post New Wellness Check</Modal.Title>}\n            </Modal.Header>\n            <Modal.Body>\n                <div className=\"health-check-form-container\">\n                    <Row>\n                        <Col xs={6}>\n                            <Form.Control\n                                type=\"date\"\n                                name=\"date\"\n                                value={state.dateString}\n                                onChange={(e) => {\n                                    dispatch(\n                                        formChange({\n                                            dateString: e.target.value,\n                                        })\n                                    );\n                                }}\n                            />\n                        </Col>\n                        <Col xs={6}>\n                            <Form.Control\n                                type=\"time\"\n                                name=\"time\"\n                                value={state.timeString}\n                                onChange={(e) => {\n                                    dispatch(\n                                        formChange({\n                                            timeString: e.target.value,\n                                        })\n                                    );\n                                }}\n                            />\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col xs={12}>\n                            <ButtonGroup style={{ display: 'flex' }}>\n                                <Button\n                                    onClick={() => handleMoodSelect(1)}\n                                    className=\"mood-button\"\n                                    variant={state.mood === 1 ? 'secondary' : 'light'}>\n                                    Grumpy\n                                </Button>\n                                <Button\n                                    onClick={() => handleMoodSelect(2)}\n                                    className=\"mood-button\"\n                                    variant={state.mood === 2 ? 'secondary' : 'light'}>\n                                    Neutral\n                                </Button>\n                                <Button\n                                    onClick={() => handleMoodSelect(3)}\n                                    className=\"mood-button\"\n                                    variant={state.mood === 3 ? 'secondary' : 'light'}>\n                                    Upbeat\n                                </Button>\n                            </ButtonGroup>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <InputAutoComplete\n                                submit={addSymptom}\n                                allowNewItems\n                                clearOnSubmit\n                                placeholder=\"Add Symptoms One at a Time\"\n                                apiEndpoint=\"symptoms\"\n                            />\n                        </Col>\n                    </Row>\n                    <div className=\"symptom-list\">\n                        {state.symptoms.map((symptom, index) => {\n                            return (\n                                <Pill\n                                    key={index}\n                                    text={symptom.description}\n                                    deleteable\n                                    margin=\"10px\"\n                                    onDelete={() => {\n                                        dispatch(deleteSymptom(symptom));\n                                    }}\n                                    color=\"brown\"\n                                    size=\"md\"\n                                />\n                            );\n                        })}\n                    </div>\n                </div>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"default\" onClick={handleClose}>\n                    Cancel\n                </Button>\n                {state.new && (\n                    <Button\n                        className=\"button-light-green\"\n                        disabled={processing}\n                        variant=\"default\"\n                        onClick={handleSubmit}>\n                        {processing ? 'Posting' : 'Post Health Check'}\n                    </Button>\n                )}\n                {state.edit && (\n                    <Button\n                        className=\"button-light-green\"\n                        disabled={processing}\n                        variant=\"default\"\n                        onClick={handleSubmit}>\n                        {processing ? 'Saving' : 'Save Changes'}\n                    </Button>\n                )}\n            </Modal.Footer>\n        </Modal>\n    );\n}\n","import React, { useEffect } from 'react';\nimport './Activity.scss';\nimport DateBlock from './DateBlock.jsx';\nimport ActivityControls from 'components/activity/ActivityControls';\nimport MealForm from 'components/meal_form/MealForm';\nimport * as FeedArray from './utils/feedArray';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setActivity } from 'components/activity/state/ActivityActions';\nimport HealthCheckForm from 'components/health_check_form/HealthCheckForm';\nimport Spinner from 'react-bootstrap/Spinner';\n\nexport default function Activity(props) {\n    const dispatch = useDispatch();\n    let state = useSelector((state) => state);\n    let loaded = !state.activity.loading;\n\n    useEffect(() => {\n        dispatch(setActivity());\n    }, [state.view.currentView, state.activity.filters]);\n\n    return (\n        <div className=\"activity-container\">\n            <ActivityControls />\n            <MealForm />\n            <HealthCheckForm />\n            {loaded ? (\n                <div>\n                    <hr />\n                    {FeedArray.build(state.activity.data).map((dateBlock, index) => {\n                        return <DateBlock key={index} index={index} entries={dateBlock} />;\n                    })}\n                </div>\n            ) : (\n                <Spinner animation=\"border\" className=\"loading-spinner\" />\n            )}\n        </div>\n    );\n}\n","import React from 'react';\nimport NavigationMenu from './NavigationMenu';\nimport NavigationMenuMobile from 'components/NavigationMenuMobile';\nimport Activity from './activity/Activity';\nimport { useSelector } from 'react-redux';\nimport LoginForm from './login_form/LoginForm';\nimport './Dashboard.scss';\nimport UserMenu from './user_menu/UserMenu';\n\nexport default function Dashboard(props) {\n    let viewState = useSelector((state) => state.view);\n    let loggedIn = useSelector((state) => state.UserState.isLoggedIn)\n    let mobile = useSelector((state) => state.viewport.mobile);\n\n    return (\n        <div className=\"dashboard-container\" style={{ position: 'relative' }}>\n\n\n            {loggedIn && mobile ? <NavigationMenuMobile /> : <NavigationMenu />}\n            {loggedIn && (viewState.currentView === 'activity') && <Activity />}\n            {loggedIn && <UserMenu/>}\n\n            {!loggedIn && mobile && <LoginForm />}\n        </div>\n    );\n}\n","export function setViewportSize(payload){\n    return {\n        type: 'VIEWPORT/SET_WIDTH',\n        payload\n    }\n}","import React from 'react'\nimport './Welcome.scss'\nimport LoginForm from 'components/login_form/LoginForm'\nimport { useSelector } from 'react-redux';\n\nexport default function Welcome(){\n    let mobile = useSelector((state) => state.viewport.mobile);\n\n    return (\n        <div className=\"welcome-container\">\n            {mobile && <div className=\"login-form-container\">\n                <LoginForm />\n            </div>}\n        </div>\n    )\n}","import React, { useEffect } from 'react';\nimport Header from 'components/header/Header';\nimport Dashboard from './Dashboard';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { attemptLogIn } from './common/state/UserStateActions.js';\nimport store from './common/state/Store';\nimport { setViewportSize } from './common/state/ViewportActions';\nimport Welcome from './welcome/Welcome';\n\nfunction App() {\n    let loggedIn = useSelector((state) => state.UserState.isLoggedIn);\n\n    const dispatch = useDispatch();\n\n    function handleResize() {\n        let lastViewportSize = store.getState().viewport.width;\n        let currentViewportSize = ((width) => {\n            if (width >= 1200) return 5;\n            if (width >= 992) return 4;\n            if (width >= 768) return 3;\n            if (width >= 576) return 2;\n            return 1;\n        })(window.innerWidth);\n        if (lastViewportSize !== currentViewportSize) {\n            if (currentViewportSize < 3) {\n                dispatch(setViewportSize({ width: currentViewportSize, mobile: true }));\n            } else {\n                dispatch(setViewportSize({ width: currentViewportSize, mobile: false }));\n            }\n        }\n    }\n\n    useEffect(() => {\n        handleResize();\n        dispatch(attemptLogIn());\n        window.addEventListener('resize', handleResize);\n        return () => {\n            window.removeEventListener('resize', handleResize);\n        };\n    }, []);\n\n    return (\n        <div>\n            <Header />\n            {loggedIn && <Dashboard />}\n            {!loggedIn && <Welcome />}\n        </div>\n    );\n}\n\nexport default App;\n","import store from 'components/common/state/Store.js';\nimport axios from 'axios';\nimport { attemptLogIn } from 'components/common/state/UserStateActions';\nlet dispatch = store.dispatch;\n\nfunction getToken() {\n    return store.getState().UserState.accessToken;\n}\n\nexport const configAxios = async () => {\n    axios.interceptors.request.use(\n        async (config) => {\n            console.log('axios: adding auth headers')\n            if (getToken().expired()) await dispatch(attemptLogIn());\n            config.headers = {\n                Authorization: `Bearer ${getToken().value}`,\n            };\n            return config;\n        },\n        (err) => {\n            console.log('axios interceptor err')\n            throw new Error(err);\n        }\n    );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './styles/main.scss';\nimport { Provider } from 'react-redux';\nimport store from 'components/common/state/Store.js';\nimport { configAxios } from 'components/common/utils/axiosConfig.js';\n\nconfigAxios();\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}